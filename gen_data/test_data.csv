CommitHash,NewPath,Diff,Message
446a37a9795f2df7adc841154ca05add79cf286e,test/src/test/java/org/apache/accumulo/test/functional/MergeMetaIT.java,"import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import org.apache.accumulo.core.metadata.MetadataTable;
import org.apache.accumulo.core.metadata.RootTable;
import org.apache.accumulo.core.metadata.schema.MetadataSchema;
  @Test(timeout = 30 * 1000)
    UtilWaitThread.sleep(2 * 1000);
    s.setRange(MetadataSchema.DeletesSection.getRange());
    for (@SuppressWarnings(""unused"")
    Entry<Key,Value> e : s) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/unit/DeleteTable.java,"package org.apache.accumulo.server.test.randomwalk.unit;

import java.util.Properties;

import org.apache.accumulo.server.test.randomwalk.State;
import org.apache.accumulo.server.test.randomwalk.Test;


public class DeleteTable extends Test {

	@Override
	public void visit(State state, Properties props) throws Exception {}
}",Return empty string instead.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/security/Validate.java,"package org.apache.accumulo.test.randomwalk.security;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/mock/MockScannerBase.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/test/functional/ZombieTServer.java,"import org.apache.accumulo.fate.zookeeper.ZooLock.LockLossReason;
import org.apache.accumulo.fate.zookeeper.ZooLock.LockWatcher;
import org.apache.accumulo.fate.zookeeper.ZooUtil.NodeExistsPolicy;","Remove this call to ""exit"" or ensure it is really required."
322e0359ac5d35d3774c47507aed07760397513a,src/core/src/main/java/org/apache/accumulo/core/client/Connector.java,"   * @see Instance#getConnector(String user, byte[] password)
   * @see Instance#getConnector(String user, byte[] password)",1 duplicated blocks of code must be removed.
bfc44fd328c471d06b480835ba826b706dcf6816,server/src/main/java/org/apache/accumulo/server/master/state/MergeStats.java,"import org.apache.accumulo.core.security.Authorizations;
    Scanner scanner = connector.createScanner(Constants.METADATA_TABLE_NAME, Authorizations.EMPTY);","Remove this unused method parameter ""range""."
48e331cc2d55a37421b5dd7bbb45e91657ea811f,proxy/src/test/java/org/apache/accumulo/proxy/SimpleTest.java,"    List<ByteBuffer> splits = client.listSplits(creds, ""test"", 1);
    splits = client.listSplits(creds, ""test"", 10);
    splits = client.listSplits(creds, ""test"", 10);",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
02a26268575ac93d74796ec8fd8798f85b92dac1,server/src/main/java/org/apache/accumulo/server/monitor/servlets/DefaultServlet.java,"    		  out.write((""could not get resource "" + path + """").getBytes());","Remove this unused method parameter ""ex""."
398bc97b1b550cc663f2760a7bebcc2e21c5af41,core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloFileOutputFormat.java,"import org.apache.hadoop.mapreduce.OutputFormat;
   * stored in the Job's configuration.
   * @see #setAccumuloProperty(Job, Property, Object)
   * Sets the compression type to use for data blocks. Specifying a compression may require additional libraries to be available to your Job.
   * 
   *          one of ""none"", ""gz"", ""lzo"", or ""snappy""
    if (compressionType == null || !Arrays.asList(""none"", ""gz"", ""lzo"", ""snappy"").contains(compressionType))
      throw new IllegalArgumentException(""Compression type must be one of: none, gz, lzo, snappy"");
   * Sets the size for file blocks in the file system; file blocks are managed, and replicated, by the underlying file system.
    
        
   * @see #setZooKeeperInstance(Configuration, String, String)
   * @see #setZooKeeperInstance(Configuration, String, String)
   * @see #getInstance(Configuration)
   * @see #setZooKeeperInstance(Configuration, String, String)
   * @see #getInstance(Configuration)
   * @deprecated since 1.5.0; This {@link OutputFormat} does not communicate with Accumulo. If this is needed, subclasses must implement their own
   *             configuration.
   * @deprecated since 1.5.0; This {@link OutputFormat} does not communicate with Accumulo. If this is needed, subclasses must implement their own
   *             configuration.",Move this variable to comply with Java Code Conventions.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/OfflineTable.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
6b95a1ceada2b7df262bd034524aa1114cf3b7a0,server/src/main/java/org/apache/accumulo/server/monitor/servlets/BasicServlet.java,"    sb.append(""<!--\n"");
    sb.append(""  Licensed to the Apache Software Foundation (ASF) under one or more\n"");
    sb.append(""  contributor license agreements.  See the NOTICE file distributed with\n"");
    sb.append(""  this work for additional information regarding copyright ownership.\n"");
    sb.append(""  The ASF licenses this file to You under the Apache License, Version 2.0\n"");
    sb.append(""  (the \""License\""); you may not use this file except in compliance with\n"");
    sb.append(""  the License.  You may obtain a copy of the License at\n"");
    sb.append(""\n"");
    sb.append(""    http://www.apache.org/licenses/LICENSE-2.0\n"");
    sb.append(""\n"");
    sb.append(""  Unless required by applicable law or agreed to in writing, software\n"");
    sb.append(""  distributed under the License is distributed on an \""AS IS\"" BASIS,\n"");
    sb.append(""  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"");
    sb.append(""  See the License for the specific language governing permissions and\n"");
    sb.append(""  limitations under the License.\n"");
    sb.append(""-->\n"");
    sb.append(""<a href='/xml'>XML</a><br />\n"");
    sb.append(""<a href='/json'>JSON</a><hr />\n"");","Method has 11 parameters, which is greater than 7 authorized."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/shard/VerifyIndex.java,"package org.apache.accumulo.server.test.randomwalk.shard;

import java.util.Iterator;
import java.util.Properties;
import java.util.Map.Entry;

import org.apache.accumulo.core.Constants;
import org.apache.accumulo.core.client.Scanner;
import org.apache.accumulo.core.data.Key;
import org.apache.accumulo.core.data.PartialKey;
import org.apache.accumulo.core.data.Value;
import org.apache.accumulo.server.test.randomwalk.State;
import org.apache.accumulo.server.test.randomwalk.Test;



public class VerifyIndex extends Test {

	@Override
	public void visit(State state, Properties props) throws Exception {
		
		String indexTableName = (String)state.get(""indexTableName"");
		String tmpIndexTableName = indexTableName+""_tmp"";
		
		//scan new and old index and verify identical
		Scanner indexScanner1 = state.getConnector().createScanner(tmpIndexTableName, Constants.NO_AUTHS);
		Scanner indexScanner2 = state.getConnector().createScanner(indexTableName, Constants.NO_AUTHS);
		
		Iterator<Entry<Key, Value>> iter = indexScanner2.iterator();
		
		int count = 0;
		
		for (Entry<Key,Value> entry : indexScanner1) {
			if(!iter.hasNext())
				throw new Exception(""index rebuild mismatch ""+entry.getKey()+"" ""+indexTableName);
			
			Key key1 = entry.getKey();
			Key key2 = iter.next().getKey();
			
			if(key1.compareTo(key2, PartialKey.ROW_COLFAM_COLQUAL) != 0)
				throw new Exception(""index rebuild mismatch ""+key1+"" ""+key2+"" ""+indexTableName+"" ""+tmpIndexTableName);
			count++;
		}
		
		if(iter.hasNext())
			throw new Exception(""index rebuild mismatch ""+iter.next().getKey()+"" ""+tmpIndexTableName);
		
		log.debug(""Verified ""+count+"" index entries "");
		
		state.getConnector().tableOperations().delete(indexTableName);
		state.getConnector().tableOperations().rename(tmpIndexTableName, indexTableName);
	}

}",Return empty string instead.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/util/VerifyTabletAssignments.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/shard/Insert.java,"      if (i > 0)
        sb.append("" "");
        if (delete)
          m.putDelete(token, docId);
        else
          m.put(token, docId, new Value(new byte[0]));
    if (m.size() > 0)
      bw.addMutation(m);","Remove this call to ""exit"" or ensure it is really required."
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/client/Scanner.java," * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
  ",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/bulk/Compact.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/master/state/DistributedStore.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
1039b9ec83b9f3f99e6606d4f2b0849bdab9eb79,server/src/main/java/org/apache/accumulo/server/conf/ZooConfiguration.java,"  private final Map<String,String> fixedProps = Collections.synchronizedMap(new HashMap<String,String>());",Move this variable to comply with Java Code Conventions.
02a26268575ac93d74796ec8fd8798f85b92dac1,server/src/main/java/org/apache/accumulo/server/trace/TraceServer.java,"      indexMutation.put(new Text(s.description), new Text(s.sender), new Value((idString + "":"" + Long.toHexString(diff)).getBytes()));
        connector = serverConfiguration.getInstance().getConnector(conf.get(Property.TRACE_USER), conf.get(Property.TRACE_PASSWORD).getBytes());
    String path = zoo.putEphemeralSequential(root + ""/trace-"", name.getBytes());","Remove this unused method parameter ""ex""."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ClsCommand.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
public class ClsCommand extends ClearCommand {}",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
446a37a9795f2df7adc841154ca05add79cf286e,server/src/test/java/org/apache/accumulo/server/tabletserver/CheckTabletMetadataTest.java,"import org.apache.accumulo.core.metadata.schema.MetadataSchema.TabletsSection;
  
  
      
  
      
  
    put(tabletMeta, ""1<"", TabletsSection.TabletColumnFamily.PREV_ROW_COLUMN, KeyExtent.encodePrevEndRow(null).get());
    put(tabletMeta, ""1<"", TabletsSection.ServerColumnFamily.DIRECTORY_COLUMN, ""/t1"".getBytes());
    put(tabletMeta, ""1<"", TabletsSection.ServerColumnFamily.TIME_COLUMN, ""M0"".getBytes());
    put(tabletMeta, ""1<"", TabletsSection.FutureLocationColumnFamily.NAME, ""4"", ""127.0.0.1:9997"");
    assertFail(tabletMeta, ke, tsi, nk(""1<"", TabletsSection.TabletColumnFamily.PREV_ROW_COLUMN));
    assertFail(tabletMeta, ke, tsi, nk(""1<"", TabletsSection.ServerColumnFamily.DIRECTORY_COLUMN));
    assertFail(tabletMeta, ke, tsi, nk(""1<"", TabletsSection.ServerColumnFamily.TIME_COLUMN));
    
    assertFail(tabletMeta, ke, tsi, nk(""1<"", TabletsSection.FutureLocationColumnFamily.NAME, ""4""));
    put(copy, ""1<"", TabletsSection.CurrentLocationColumnFamily.NAME, ""4"", ""127.0.0.1:9997"");
    assertFail(copy, ke, tsi, nk(""1<"", TabletsSection.FutureLocationColumnFamily.NAME, ""4""));
    put(copy, ""1<"", TabletsSection.CurrentLocationColumnFamily.NAME, ""5"", ""127.0.0.1:9998"");
    put(copy, ""1<"", TabletsSection.CurrentLocationColumnFamily.NAME, ""6"", ""127.0.0.1:9999"");
    put(copy, ""1<"", TabletsSection.FutureLocationColumnFamily.NAME, ""5"", ""127.0.0.1:9998"");
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/iterators/filter/ColumnAgeOffFilter.java,"    if (threshold == null)
      return true;
    if (currentTime - k.getTimestamp() > threshold)
      return false;","Remove this call to ""exit"" or ensure it is really required."
aa7110234e15a017bb1dbc99b4351f0bf06cc73b,test/src/test/java/org/apache/accumulo/test/functional/SparseColumnFamilyIT.java,"
    String scftt = getTableNames(1)[0];










",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/functional/LargeRowTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
8c2ef69058fa4917c9b330ca9c8b8cc2ce548e36,core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsImpl.java,"        client = MasterClient.getConnectionWithRetry(instance);
        client = MasterClient.getConnectionWithRetry(instance);
        client = MasterClient.getConnectionWithRetry(instance);
        client = MasterClient.getConnectionWithRetry(instance);
          client = MasterClient.getConnectionWithRetry(instance);
          client = MasterClient.getConnectionWithRetry(instance);
      client = MasterClient.getConnectionWithRetry(instance);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bfc44fd328c471d06b480835ba826b706dcf6816,test/src/main/java/org/apache/accumulo/test/randomwalk/shard/Reindex.java,"import org.apache.accumulo.core.security.Authorizations;
    Scanner scanner = state.getConnector().createScanner(docTableName, Authorizations.EMPTY);","Remove this unused method parameter ""range""."
e0880e263e4bf8662ba3848405200473a25dfc9f,contrib/accumulo_sample/ingest/src/main/java/normalizer/Normalizer.java,"package normalizer;


public interface Normalizer {

	/**
	 * Creates normalized content for ingest based upon implemented logic.
	 * @param field The field being normalized
	 * @param value The value to normalize
	 * @return a normalized value
	 */
	public String normalizeFieldValue(String field, Object value);

}",Return empty string instead.
01c2f8fc6e9e1d81eb34eb1a095b6fc2dad7d886,proxy/src/test/java/org/apache/accumulo/proxy/SimpleTest.java,"import java.util.UUID;
import org.apache.accumulo.proxy.thrift.TableExistsException;
import org.apache.accumulo.proxy.thrift.UnknownScanner;
import org.apache.accumulo.proxy.thrift.UnknownWriter;
  public void testExists() throws Exception {
    client.createTable(creds, ""ett1"", false, TimeType.MILLIS);
    client.createTable(creds, ""ett2"", false, TimeType.MILLIS);
    try {
      client.createTable(creds, ""ett1"", false, TimeType.MILLIS);
      fail(""exception not thrown"");
    } catch (TableExistsException tee) {}
    try {
      client.renameTable(creds, ""ett1"", ""ett2"");
      fail(""exception not thrown"");
    } catch (TableExistsException tee) {}
    try {
      client.cloneTable(creds, ""ett1"", ""ett2"", false, new HashMap<String,String>(), new HashSet<String>());
      fail(""exception not thrown"");
    } catch (TableExistsException tee) {}
  }
  
  @Test(timeout = 10000)
  public void testUnknownScanner() throws Exception {
    try {
      client.nextEntry(""99999999"");
      fail(""exception not thrown"");
    } catch (UnknownScanner us) {}
    try {
      client.nextK(""99999999"", 6);
      fail(""exception not thrown"");
    } catch (UnknownScanner us) {}
    try {
      client.hasNext(""99999999"");
      fail(""exception not thrown"");
    } catch (UnknownScanner us) {}
    try {
      client.hasNext(UUID.randomUUID().toString());
      fail(""exception not thrown"");
    } catch (UnknownScanner us) {}
  }
  
  @Test(timeout = 10000)
  public void testUnknownWriter() throws Exception {
    try {
      client.flush(""99999"");
      fail(""exception not thrown"");
    } catch (UnknownWriter uw) {}
    try {
      client.flush(UUID.randomUUID().toString());
      fail(""exception not thrown"");
    } catch (UnknownWriter uw) {}
    try {
      client.closeWriter(""99999"");
      fail(""exception not thrown"");
    } catch (UnknownWriter uw) {}
  }
  
  @Test(timeout = 10000)",Either log or rethrow this exception.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/tabletserver/log/LogEntry.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
9461a39feffce7f04edd1430d8fd3ec5c2d5a0df,server/src/main/java/org/apache/accumulo/server/master/state/SetGoalState.java,"import org.apache.accumulo.server.security.SecurityUtil;
    SecurityUtil.serverLogin();
",Move this constructor to comply with Java Code Conventions.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/PasswdCommand.java,"    if (!shellState.getConnector().securityOperations().authenticateUser(currentUser, oldPassword.getBytes()))
      throw new AccumuloSecurityException(user, SecurityErrorCode.BAD_CREDENTIALS);
    if (!password.equals(passwordConfirm))
      throw new IllegalArgumentException(""Passwords do not match"");
    if (shellState.getConnector().whoami().equals(user))
      shellState.updateUser(new AuthInfo(user, ByteBuffer.wrap(pass), shellState.getConnector().getInstance().getInstanceID()));","Remove this call to ""exit"" or ensure it is really required."
8dccbe7e9960c204bf82326c9fe6e28dcb8d647e,core/src/main/java/org/apache/accumulo/core/master/thrift/RecoveryStatus.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",296 duplicated blocks of code must be removed.
390ca3f2ebe75585ed8c97512e9985711f5d641d,test/src/main/java/org/apache/accumulo/test/TestMultiTableIngest.java,"        String expected = String.format(""%06d"", count);
        Mutation m = new Mutation(new Text(String.format(""%06d"", i)));","Use ""Integer.toString"" instead."
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/master/state/MergeStats.java,"import org.apache.accumulo.server.cli.ClientOpts;
    ClientOpts opts = new ClientOpts();
    opts.parseArgs(MergeStats.class.getName(), args);
    
    Connector conn = opts.getConnector();
    Map<String,String> tableIdMap = conn.tableOperations().tableIdMap();
      String path = ZooUtil.getRoot(conn.getInstance().getInstanceID()) + Constants.ZTABLES + ""/"" + tableId.toString() + ""/merge"";","Remove this call to ""exit"" or ensure it is really required."
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/file/rfile/IndexIterator.java,"  
  private Key key;
  private Iterator<IndexEntry> indexIter;
  
  IndexIterator(Iterator<IndexEntry> indexIter) {
    this.indexIter = indexIter;
    if (indexIter.hasNext()) key = indexIter.next().getKey();
    else key = null;
  }
  
  @Override
  public SortedKeyValueIterator<Key,Value> deepCopy(IteratorEnvironment env) {
    throw new UnsupportedOperationException();
  }
  
  @Override
  public Key getTopKey() {
    return key;
  }
  
  @Override
  public Value getTopValue() {
    throw new UnsupportedOperationException();
  }
  
  @Override
  public boolean hasTop() {
    return key != null;
  }
  
  @Override
  public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {
    throw new UnsupportedOperationException();
  }
  
  @Override
  public void next() throws IOException {
    if (indexIter.hasNext()) key = indexIter.next().getKey();
    else key = null;
  }
  
  @Override
  public void seek(Range range, Collection<ByteSequence> columnFamilies, boolean inclusive) throws IOException {
    throw new UnsupportedOperationException();
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,core/src/main/java/org/apache/accumulo/core/client/impl/MultiTableBatchWriterImpl.java,"import org.apache.accumulo.core.security.thrift.Credentials;
  public MultiTableBatchWriterImpl(Instance instance, Credentials credentials, BatchWriterConfig config) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
db4a291f944e8a6ad9d63dcbedfa9fe3108f0ead,src/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"import org.apache.zookeeper.KeeperException;
import org.apache.zookeeper.KeeperException.NoNodeException;
          this.notifyAll();
    if (isClosed()) {
      // don't bother trying to get flush id if closed... could be closed after this check but that is ok... just trying to cut down on uneeded log messages....
      return false;
    }

    long flushId;
    try {
      flushId = getFlushID();
    } catch (NoNodeException e) {
      log.info(""Asked to initiate MinC when there was no flush id "" + getExtent() + "" "" + e.getMessage());
      return false;
    }
  long getFlushID() throws NoNodeException {
    } catch (InterruptedException e) {
    } catch (NumberFormatException nfe) {
      throw new RuntimeException(nfe);
    } catch (KeeperException ke) {
      if (ke instanceof NoNodeException) {
        throw (NoNodeException) ke;
      } else {
        throw new RuntimeException(ke);
      }
  long getCompactionID() throws NoNodeException {
    } catch (InterruptedException e) {
    } catch (NumberFormatException nfe) {
      throw new RuntimeException(nfe);
    } catch (KeeperException ke) {
      if (ke instanceof NoNodeException) {
        throw (NoNodeException) ke;
      } else {
        throw new RuntimeException(ke);
      }
      while (updatingFlushID) {
        try {
          this.wait(50);
        } catch (InterruptedException e) {
          log.error(e.toString());
        }
      }

      try {
        mct = prepareForMinC(getFlushID());
      } catch (NoNodeException e) {
        throw new RuntimeException(e);
      }
      try {
        prepareForMinC(getFlushID()).run();
      } catch (NoNodeException e) {
        throw new RuntimeException(e);
      }
        try {
          compactionId = getCompactionID();
        } catch (NoNodeException e) {
          throw new RuntimeException(e);
        }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
4c3da02bcdb14caec648716679317cac837789cf,server/src/main/java/org/apache/accumulo/server/tabletserver/compaction/DefaultWriter.java,"package org.apache.accumulo.server.tabletserver.compaction;

import java.io.IOException;
import java.util.List;

import org.apache.accumulo.core.data.Key;
import org.apache.accumulo.core.data.Value;
import org.apache.accumulo.core.file.FileSKVWriter;

public class DefaultWriter implements CompactionStrategy.Writer {
  
  @Override
  public void write(Key key, Value value, List<FileSKVWriter> outputFiles) throws IOException {
    outputFiles.get(0).append(key, value);
  }
  
}","Immediately return this expression instead of assigning it to the temporary variable ""openReader""."
20650323e9d45ec61fdb15c51042a92638dab90e,src/core/src/main/java/org/apache/accumulo/core/iterators/OrIterator.java,"import java.util.Collections;
import org.apache.accumulo.core.data.ArrayByteSequence;
    public Collection<ByteSequence> seekColfams;
      this.seekColfams = other.seekColfams;
      // The desired column families for this source is the term itself
      this.seekColfams = Collections.<ByteSequence>singletonList(new ArrayByteSequence(term.getBytes(), 0, term.getLength()));
      currentTerm.iter.seek(newRange, currentTerm.seekColfams, true);
        TS.iter.seek(range, TS.seekColfams, true);
      // Seek only to the term for this source as a column family
      TS.iter.seek(newRange, TS.seekColfams, true);",2 duplicated blocks of code must be removed.
3be979b3598d87b498a5b02d380e5249fd73e10f,server/src/main/java/org/apache/accumulo/server/master/tableOps/DeleteTable.java,"import org.apache.accumulo.core.security.thrift.ThriftSecurityException;
import org.apache.accumulo.server.security.SecurityOperationImpl;
      SecurityOperationImpl.getInstance().deleteTable(SecurityConstants.getSystemCredentials(), tableId);
    } catch (ThriftSecurityException e) {","Remove this unused method parameter ""ex""."
446a37a9795f2df7adc841154ca05add79cf286e,test/src/test/java/org/apache/accumulo/test/MetaSplitTest.java,"import org.apache.accumulo.core.client.AccumuloException;
import org.apache.accumulo.core.metadata.MetadataTable;
import org.apache.accumulo.core.metadata.RootTable;
  @Test(expected = AccumuloException.class)
  public void testRootTableSplit() throws Exception {
    Connector connector = cluster.getConnector(""root"", secret);
    TableOperations opts = connector.tableOperations();
    SortedSet<Text> splits = new TreeSet<Text>();
    splits.add(new Text(""5""));
    opts.addSplits(RootTable.NAME, splits);
  }
  
  @Test
  public void testRootTableMerge() throws Exception {
    Connector connector = cluster.getConnector(""root"", secret);
    TableOperations opts = connector.tableOperations();
    opts.merge(RootTable.NAME, null, null);
  }
  
  public void testMetadataTableSplit() throws Exception {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
3dbd87897442d632a09660f5bb5667c28e4bf9c4,core/src/main/java/org/apache/accumulo/core/master/thrift/TabletSplit.java," * Autogenerated by Thrift Compiler (0.9.0)
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
    // check for sub-struct validity
    if (oldTablet != null) {
      oldTablet.validate();
    }",Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'.
aa7110234e15a017bb1dbc99b4351f0bf06cc73b,test/src/test/java/org/apache/accumulo/test/functional/FateStarvationIT.java,"
    String tableName = getTableNames(1)[0];







",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/BinaryTree.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
cd08a7a18249090e7e9d941f7b10b4b0a0eb6d71,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/SetIterCommand.java,"import org.apache.accumulo.core.iterators.IteratorUtil.IteratorScope;
import org.apache.accumulo.core.iterators.OptionDescriber.IteratorOptions;
import org.apache.accumulo.core.iterators.user.NoVisFilter;
import org.apache.accumulo.core.iterators.user.RegExFilter;
import org.apache.accumulo.core.util.shell.ShellCommandException;
      classname = RegExFilter.class.getName();
      classname = NoVisFilter.class.getName();","Define a constant instead of duplicating this literal ""org.apache.accumulo.core.iterators.WholeRowIterator"" 4 times."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloRowInputFormat.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
9cb95e53d7cb79284598cc73969cf9aec4dbe778,src/core/src/main/java/org/apache/accumulo/core/iterators/TypedValueCombiner.java,"import org.apache.accumulo.core.client.IteratorSetting;
   * A convenience method to set the ""lossy"" option on a TypedValueCombiner. If true, the combiner will ignore any values which fail to decode. Otherwise, the
   * combiner will throw an error which will interrupt the action (and prevent potential data loss). False is the default behavior.
   * 
   * @param is
   *          iterator settings object to configure
   * @param lossy
   *          if true the combiner will ignored values which fail to decode; otherwise error.
   */
  public static void setLossyness(IteratorSetting is, boolean lossy) {
    is.addOption(LOSSY, Boolean.toString(lossy));
  }
  
  /**",Either log or rethrow this exception.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/multitable/CopyTable.java,"package org.apache.accumulo.test.randomwalk.multitable;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
2a81afe5bbd0138f23f95c7ed291d161987222a6,test/src/test/java/org/apache/accumulo/test/TableOperationsIT.java,"    ZooKeeperInstance instance = new ZooKeeperInstance(accumuloCluster.getConfig().getInstanceName(), accumuloCluster.getConfig().getZooKeepers());
  ",Either log or rethrow this exception.
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,core/src/main/java/org/apache/accumulo/core/client/admin/InstanceOperationsImpl.java,"    } catch (AccumuloSecurityException e) {
      throw new AccumuloException(e);",Either log or rethrow this exception.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/logger/LogEvents.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/util/shell/commands/UserCommand.java,    pass = p.getBytes();,"Remove this unused private ""appendProp"" method."
bd77fefdb146ef0dc9bf64b51fb8e8f43c10ce0d,core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/NoSuchScanIDException.java,"  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",300 duplicated blocks of code must be removed.
b8859513a7f9cec03d7af3f45c7516344798fe06,server/src/main/java/org/apache/accumulo/server/master/tableOps/ImportTable.java,import org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException;,1 duplicated blocks of code must be removed.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/file/blockfile/cache/HeapSize.java," * Useful for sizing caches. Its a given that implementation approximations do not account for 32 vs 64 bit nor for different VM implementations.
 * An Object's size is determined by the non-static data members in it, as well as the fixed {@link Object} overhead.
 * 
 *     
 *     int[] numbers;
 *     int x;
    /**
     * @return Approximate 'exclusive deep size' of implementing object. Includes count of payload and hosting object sizings.
     */
    public long heapSize();
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
5597259bbfa3da9833cf047b480efbba6f46ed02,src/core/src/test/java/org/apache/accumulo/core/iterators/filter/ColumnFilterTest.java,"/**
 * @deprecated since 1.4
 */",1 duplicated blocks of code must be removed.
2a73cbcddcd21f5730ba0a5c2f32072fa7243951,src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java,"  public static final Encoder<Long> FIXED_LEN_ENCODER = new FixedLenEncoder();
  public static final Encoder<Long> VAR_LEN_ENCODER = new VarLenEncoder();
  public static final Encoder<Long> STRING_ENCODER = new StringEncoder();
  
    } else {
          encoder = VAR_LEN_ENCODER;
          encoder = FIXED_LEN_ENCODER;
          encoder = STRING_ENCODER;
  public static class VarLenEncoder implements Encoder<Long> {
  public static class FixedLenEncoder implements Encoder<Long> {",Either log or rethrow this exception.
f9506d2552d0e75939b6d67be8c3496b2e734098,server/src/main/java/org/apache/accumulo/server/util/MetadataTable.java,"/**
 * provides a reference to the metadata table for updates by tablet servers
 */",Replace all tab characters in this file by sequences of white-spaces.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/CloneTable.java,"  
  @Override
  public void visit(State state, Properties props) throws Exception {
    Connector conn = state.getConnector();
    Random rand = (Random) state.get(""rand"");
    
    @SuppressWarnings(""unchecked"")
    List<String> tableNames = (List<String>) state.get(""tables"");
    
    String srcTableName = tableNames.get(rand.nextInt(tableNames.size()));
    String newTableName = tableNames.get(rand.nextInt(tableNames.size()));
    boolean flush = rand.nextBoolean();
    
    try {
      conn.tableOperations().clone(srcTableName, newTableName, flush, new HashMap<String,String>(), new HashSet<String>());
      log.debug(""Cloned table "" + srcTableName + "" "" + newTableName + "" "" + flush);
    } catch (TableExistsException e) {
      log.debug(""Clone "" + srcTableName + "" failed, "" + newTableName + "" exist"");
    } catch (TableNotFoundException e) {
      log.debug(""Clone "" + srcTableName + "" failed, doesnt exist"");
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
7585b423e71516848493778e6b661d122da4561b,core/src/main/java/org/apache/accumulo/core/conf/Property.java,"import org.apache.accumulo.core.client.security.tokens.PasswordToken;
  TRACE_USER(""trace.user"", ""root"", PropertyType.STRING, ""The name of the user to store distributed traces""),
  TRACE_PASSWORD(""trace.password"", ""secret"", PropertyType.STRING, ""The password for the user used to store distributed traces""),
  TRACE_TOKEN_PROPERTY_PREFIX(""trace.token.property"", null, PropertyType.PREFIX,
      ""The prefix used to create a token for storing distributed traces.  For each propetry required by trace.token.type, place this prefix in front of it.""),
  TRACE_TOKEN_TYPE(""trace.token.type"", PasswordToken.class.getName(), PropertyType.CLASSNAME, ""An AuthenticationToken type supported by the authorizer""),",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/GrepCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/test/java/org/apache/accumulo/server/tabletserver/InMemoryMapTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
237be1bc39fe60cf9e4c69682452443f0093e42d,core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,"import org.apache.accumulo.core.util.shell.commands.FateCommand;
    Command[] stateCommands = {new AuthenticateCommand(), new ClsCommand(), new ClearCommand(), new FateCommand(), new NoTableCommand(), new SleepCommand(),
        new TableCommand(), new UserCommand(), new WhoAmICommand()};
  public Instance getInstance() {
    return instance;
  }
  
      try {
        while (scanner.hasNextLine())
          execCommand(scanner.nextLine(), true, isVerbose());
      } finally {
        scanner.close();
      }
  @SuppressWarnings(""deprecation"")
","Remove this call to ""exit"" or ensure it is really required."
1b38c037a6c509c64ace9b55f8fe7fc9fb7dac87,start/src/test/java/org/apache/accumulo/test/AccumuloDFSBase.java,"    conf.setLong(DFSConfigKeys.DFS_BLOCK_SIZE_KEY, 1024 * 1024); // 1M blocksize","Cast one of the operands of this multiplication operation to a ""long""."
cb6bcc517b27df03106d7e5eca344ed45699e31f,src/trace/src/main/java/org/apache/accumulo/cloudtrace/thrift/TInfo.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings(""all"") public class TInfo implements org.apache.thrift.TBase<TInfo, TInfo._Fields>, java.io.Serializable, Cloneable {
  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
  private BitSet __isset_bit_vector = new BitSet(2);
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    metaDataMap = Collections.unmodifiableMap(tmpMap);
      __isset_bit_vector = new BitSet(1);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
7942da1d204d271bff01e9e93208cdd67d0eefa3,server/src/test/java/org/apache/accumulo/server/gc/TestConfirmDeletes.java,"import org.apache.accumulo.core.security.thrift.TCredentials;
    TCredentials auth = CredentialHelper.create(""root"", new PasswordToken(new byte[0]), ""instance"");
    TCredentials credential = CredentialHelper.create(""root"", new PasswordToken(new byte[0]), ""instance"");
    Scanner scanner = instance.getConnector(credential.getPrincipal(), CredentialHelper.extractToken(credential)).createScanner(Constants.METADATA_TABLE_NAME,
        Constants.NO_AUTHS);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/RenameTableCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
e148bc7615e5147f306ef70eeb4fe13631daa3c8,src/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"import org.apache.accumulo.core.iterators.system.ColumnFamilySkippingIterator;
      ColumnFamilySkippingIterator cfsi = new ColumnFamilySkippingIterator(delIter);
      
      ColumnQualifierFilter colFilter = new ColumnQualifierFilter(cfsi, options.columnSet);","Use ""Integer.toString"" instead."
30e097294d334bf08cd81652e1633ae80fe74798,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/conf/AggregatorSet.java,"/**
 * @deprecated since 1.4
 */",Either log or rethrow this exception.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/shard/SortTool.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
public class SortTool extends Configured implements Tool {
    protected final Logger log = Logger.getLogger(this.getClass());
    private String outputDir;
    private String seqFile;
    private String splitFile;
    private Collection<Text> splits;
    
        this.outputDir = outputDir;
        this.seqFile = seqFile;
        this.splitFile = splitFile;
        this.splits = splits;
    }
    
    public int run(String[] args) throws Exception {
            log.error(""M/R requires a jar file!  Run mvn package."");
            return 1;
        
        ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f776fd3cb51b92043bfef501804f19b4a057330c,src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletTime.java,"  public static String maxMetadataTime(String mv1, String mv2) {
    if (mv1 == null) {
      checkType(mv2);
      return mv2;
    }
    
    if (mv2 == null) {
      checkType(mv1);
      return mv1;
    }
    
    if (mv1.charAt(0) != mv2.charAt(0)) throw new IllegalArgumentException(""Time types differ "" + mv1 + "" "" + mv2);
    checkType(mv1);
    
    long t1 = Long.parseLong(mv1.substring(1));
    long t2 = Long.parseLong(mv2.substring(1));
    
    if (t1 < t2) return mv2;
    else return mv1;
    
  }
  
  private static void checkType(String mv1) {
    if (mv1.charAt(0) != LOGICAL_TIME_ID && mv1.charAt(0) != MILLIS_TIME_ID) throw new IllegalArgumentException(""Invalid time type "" + mv1);
  }
  ","At most one statement is allowed per line, but 2 statements were found on this line."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/util/CountRowKeys.java,"    if (res != 0)
      System.exit(res);","Remove this call to ""exit"" or ensure it is really required."
7942da1d204d271bff01e9e93208cdd67d0eefa3,core/src/main/java/org/apache/accumulo/core/client/impl/ThriftScanner.java,"import org.apache.accumulo.core.security.thrift.TCredentials;
  public static boolean getBatchFromServer(TCredentials credentials, Text startRow, KeyExtent extent, String server, SortedMap<Key,Value> results,
  static boolean getBatchFromServer(TCredentials credentials, Key key, Key endKey, KeyExtent extent, String server, SortedMap<Key,Value> results,
  static boolean getBatchFromServer(TCredentials credentials, Range range, KeyExtent extent, String server, SortedMap<Key,Value> results,
    TCredentials credentials;
    public ScanState(TCredentials credentials, Text tableName, Authorizations authorizations, Range range, SortedSet<Column> fetchedColumns, int size,
  public static List<KeyValue> scan(Instance instance, TCredentials credentials, ScanState scanState, int timeOut, AccumuloConfiguration conf)",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ecb758fdf4900793f1b82ed067c541d8642afd1d,core/src/main/java/org/apache/accumulo/core/data/Mutation.java,"  public static enum SERIALIZED_FORMAT {
     VERSION1,
     VERSION2
  };
  
  private boolean useOldDeserialize = false;
  private byte[] row;
  private byte[] data;
  private int entries;
  private List<byte[]> values;

    return new ColumnUpdate(cf, cq, cv, hasts, ts, deleted, val);
    return new ColumnUpdate(cf, cq, cv, hasts, ts, deleted, val);
    return new TMutation(java.nio.ByteBuffer.wrap(row), java.nio.ByteBuffer.wrap(data), ByteBufferUtil.toByteBuffers(values), entries);
  public SERIALIZED_FORMAT getSerializedFormat() {
    return this.useOldDeserialize ? SERIALIZED_FORMAT.VERSION1 : SERIALIZED_FORMAT.VERSION2;
  }
","Remove this unused method parameter ""timestamp""."
ff1e582020a1437e9c520ef3a1af99477462d803,core/src/main/java/org/apache/accumulo/core/iterators/SortedKeyValueIterator.java,"   * Seek may be called multiple times with different parameters after {@link #init} is called.
   * 
   * Iterators that examine groups of adjacent key/value pairs (e.g. rows) to determine their top key and value should be sure that they properly handle a seek
   * to a key in the middle of such a group (e.g. the middle of a row). Even if the client always seeks to a range containing an entire group (a,c), the tablet
   * server could send back a batch of entries corresponding to (a,b], then reseek the iterator to range (b,c) when the scan is continued.
   * ",2 duplicated blocks of code must be removed.
43fc925412189045e4fccf0dc6cc87e6b40caa29,proxy/src/main/java/org/apache/accumulo/proxy/Proxy.java,"import org.apache.thrift.protocol.TCompactProtocol;
    boolean useMini = Boolean.parseBoolean(opts.prop.getProperty(""useMiniAccumulo"", ""false""));
    boolean useMock = Boolean.parseBoolean(opts.prop.getProperty(""useMockInstance"", ""false""));
    String instance = opts.prop.getProperty(""instance"");
    String zookeepers = opts.prop.getProperty(""zookeepers"");
    if (!useMini && !useMock && instance == null) {
      System.err.println(""Properties file must contain one of : useMiniAccumulo=true, useMockInstance=true, or instance=<instance name>"");
    if (instance != null && zookeepers == null) {
      System.err.println(""When instance is set in properties file, zookeepers must also be set."");
      System.exit(1);
    }
    
    if (!opts.prop.containsKey(""port"")) {
      System.err.println(""No port property"");
      System.exit(1);
    }
    
    if (useMini) {
      opts.prop.setProperty(""instance"", accumulo.getInstanceName());
      opts.prop.setProperty(""zookeepers"", accumulo.getZooKeepers());
    Class<? extends TProtocolFactory> protoFactoryClass = Class.forName(opts.prop.getProperty(""protocolFactory"", TCompactProtocol.Factory.class.getName()))
        .asSubclass(TProtocolFactory.class);
    int port = Integer.parseInt(opts.prop.getProperty(""port""));
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/util/TableDiskUsage.java,"    if (internalIds.containsKey(tableId))
      throw new IllegalArgumentException(""Already added table "" + tableId);
      if (tablesUsage == null)
        tablesUsage = 0l;
        if (key.get(i) != 0)
          externalKey.add(externalIds.get(i));
      if (tableId == null)
        throw new TableNotFoundException(null, tableName, ""Table "" + tableName + "" not found"");
        } else
          file = ""/"" + tableId + file;
          if (cmp != 0)
            return cmp;","Remove this call to ""exit"" or ensure it is really required."
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/iterators/TypedValueCombiner.java," * 
 * 
 * 
  
  
    
     * 
     * 
     * 
    
    
      
    
    
  
    
  
   * 
  
   * 
  
   * 
  
   * 
  
  
  
  
  
  
  
   * 
  
   * 
   * 
   * ",Replace all tab characters in this file by sequences of white-spaces.
a943f323b6ef9a614edee55c075eb63567b5c80a,test/src/main/java/org/apache/accumulo/test/functional/SplitRecoveryTest.java,"import org.apache.accumulo.server.security.SystemCredentials;
      MetadataTableUtil.addTablet(extent, tdir, SystemCredentials.get().getAsThrift(), TabletTime.LOGICAL_TIME_ID, zl);
      MetadataTableUtil.updateTabletDataFile(tid, extent, mapFiles, ""L0"", SystemCredentials.get().getAsThrift(), zl);
    MetadataTableUtil.splitTablet(high, extent.getPrevEndRow(), splitRatio, SystemCredentials.get().getAsThrift(), zl);
    Writer writer = new Writer(HdfsZooInstance.getInstance(), SystemCredentials.get().getAsThrift(), MetadataTable.ID);
      Map<FileRef,Long> bulkFiles = MetadataTableUtil.getBulkFilesLoaded(SystemCredentials.get().getAsThrift(), extent);
      MetadataTableUtil.addNewTablet(low, ""/lowDir"", instance, lowDatafileSizes, bulkFiles, SystemCredentials.get().getAsThrift(), TabletTime.LOGICAL_TIME_ID
          + ""0"", -1l, -1l, zl);
      MetadataTableUtil.finishSplit(high, highDatafileSizes, highDatafilesToRemove, SystemCredentials.get().getAsThrift(), zl);
      Map<FileRef,Long> lowBulkFiles = MetadataTableUtil.getBulkFilesLoaded(SystemCredentials.get().getAsThrift(), low);
      Map<FileRef,Long> highBulkFiles = MetadataTableUtil.getBulkFilesLoaded(SystemCredentials.get().getAsThrift(), high);
    Scanner scanner = new ScannerImpl(HdfsZooInstance.getInstance(), SystemCredentials.get().getAsThrift(), MetadataTable.ID, Authorizations.EMPTY);
    SortedMap<FileRef,DataFileValue> fixedMapFiles = MetadataTableUtil.getDataFileSizes(extent, SystemCredentials.get().getAsThrift());",Move this constructor to comply with Java Code Conventions.
b8859513a7f9cec03d7af3f45c7516344798fe06,server/src/main/java/org/apache/accumulo/server/util/VerifyTabletAssignments.java,import org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException;,1 duplicated blocks of code must be removed.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReaderIterator.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/test/functional/BatchWriterFlushTest.java,"        if (!iter.hasNext())
          throw new Exception("" row "" + rowToLookup + "" not found after flush"");
        if (iter.hasNext())
          throw new Exception(""Scanner returned too much"");
        if (!iter.hasNext())
          throw new Exception(""Scan stopped permaturely at "" + row);
      if (iter.hasNext())
        throw new Exception(""Scanner returned too much"");","Remove this call to ""exit"" or ensure it is really required."
a1c5667873834cdd74cb3eb5a19ec25486fba290,test/src/test/java/org/apache/accumulo/test/ShellServerTest.java,"import java.io.InputStream;
import jline.console.ConsoleReader;

  public static class StringInputStream extends InputStream {
    private String source = """";
    private int offset = 0;
    
    @Override
    public int read() throws IOException {
      if (offset == source.length())
        return '\n';
      else
        return source.charAt(offset++);
    }
    
    public void set(String other) {
      source = other;
      offset = 0;
    }
  }
  public static StringInputStream input;
  
    input = new StringInputStream();
    shell = new Shell(new ConsoleReader(input, output));
    input.set(""true\n\n\nSTRING"");
    input.set(""secret\nsecret\n"");
    input.set(""secret\nsecret\n"");
    input.set(secret+""\n""+secret+""\n"");
    input.set(""true\n\n\nSTRING\n"");
    input.set(""true\n\n\nSTRING\n"");
    input.set(""true\n\n\nSTRING\n"");
    input.set(""true\n\n\nSTRING\n"");
  @Test//(timeout = 30000)",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f02f263917380114d0d1c56f9f48cd5dd0f29727,src/server/src/main/java/org/apache/accumulo/server/monitor/Monitor.java,"  public static double getLookupRate() {
    return lookupRateTracker.calculateRate();
  }
  ",Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.
99d8e8b55e5b594d6ba4f4cba804aa1e01066f6e,core/src/main/java/org/apache/accumulo/core/client/security/tokens/PasswordToken.java,"    try {
      PasswordToken clone = (PasswordToken) super.clone();
      clone.password = Arrays.copyOf(password, password.length);
      return clone;
    } catch (CloneNotSupportedException e) {
      throw new RuntimeException(e);
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
aaae7f37c421eababf17a045448605e1bdfc8ace,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServerResourceManager.java,"import org.apache.accumulo.server.tabletserver.Tablet.MinorCompactionReason;
              if (!tabletReport.getTablet().initiateMinorCompaction(MinorCompactionReason.SYSTEM)) {
      if (reason == MajorCompactionReason.USER) {
      if (reason == MajorCompactionReason.USER)",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
35f8e2b1868cea9849efae7fae21e8ac789a0817,server/src/main/java/org/apache/accumulo/server/util/Admin.java,"import java.nio.charset.Charset;
    final Charset utf8 = Charset.forName(""UTF8"");
    
      pass = cl.hasOption(""p"") ? cl.getOptionValue(""p"").getBytes(utf8) : null;
              pass = new ConsoleReader().readLine(""Enter current password for '"" + user + ""': "", '*').getBytes(utf8);",Move this variable to comply with Java Code Conventions.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/unit/Ingest.java,"package org.apache.accumulo.server.test.randomwalk.unit;

import java.util.Properties;

import org.apache.accumulo.server.test.randomwalk.State;
import org.apache.accumulo.server.test.randomwalk.Test;


public class Ingest extends Test {

	@Override
	public void visit(State state, Properties props) throws Exception {}
}",Return empty string instead.
d07023b555d5b5d6b706851e9ee5d33d6868b9ad,core/src/main/java/org/apache/accumulo/core/file/blockfile/ABlockReader.java,"  /**
   * An indexable block supports seeking, getting a position, and associating an arbitrary index with the block
   * 
   * @return
   */
  public boolean isIndexable();
  public void seek(int position);
  public int getPosition();
  <T> T getIndex(Class<T> clazz);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
773d9dcba1c3292711b7682bef22136b87c5fb1c,src/server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousVerify.java,"import java.util.HashMap;
import java.util.HashSet;
import java.util.Random;
import org.apache.accumulo.core.client.Connector;
  public int run(String[] args) throws Exception {
    if (args.length != 9) {
          + "" <instance name> <zookeepers> <user> <pass> <table> <output dir> <max mappers> <num reducers> <scan offline>"");
    boolean scanOffline = Boolean.parseBoolean(args[8]);
    String clone = table;
    Connector conn = null;
    if (scanOffline) {
      Random random = new Random();
      clone = table + ""_"" + String.format(""%016x"", Math.abs(random.nextLong()));
      ZooKeeperInstance zki = new ZooKeeperInstance(instance, zookeepers);
      conn = zki.getConnector(user, pass.getBytes());
      conn.tableOperations().clone(table, clone, true, new HashMap<String,String>(), new HashSet<String>());
      conn.tableOperations().offline(clone);
    }

    AccumuloInputFormat.setInputInfo(job.getConfiguration(), user, pass.getBytes(), clone, new Authorizations());
    AccumuloInputFormat.setScanOffline(job.getConfiguration(), scanOffline);
    
    job.getConfiguration().setBoolean(""mapred.map.tasks.speculative.execution"", scanOffline);

    
    if (scanOffline) {
      conn.tableOperations().delete(clone);
    }
","Remove this unused method parameter ""extent""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/test/functional/BulkFileTest.java,"      if (!iter.hasNext())
        throw new Exception(""row "" + i + "" not found"");
      if (!entry.getKey().getRow().equals(new Text(row)))
        throw new Exception(""unexpected row "" + entry.getKey() + "" "" + i);
      if (Integer.parseInt(entry.getValue().toString()) != i)
        throw new Exception(""unexpected value "" + entry + "" "" + i);
    if (iter.hasNext())
      throw new Exception(""found more than expected "" + iter.next());","Remove this call to ""exit"" or ensure it is really required."
ae005f92aaf32248e8bd5b096ff1565a97556c74,start/src/test/java/org/apache/accumulo/start/classloader/vfs/AccumuloVFSClassLoaderTest.java,"@SuppressStaticInitializationFor({""org.apache.accumulo.start.classloader.AccumuloVFSClassLoader"", ""org.apache.log4j.LogManager""})
@PowerMockIgnore({""org.apache.log4j.*"", ""org.apache.hadoop.log.metrics"", ""org.apache.commons.logging.*"", ""org.xml.*"", ""javax.xml.*"", ""org.w3c.dom.*"",
    ""org.apache.hadoop.*""})
  
    // URLClassLoader ucl = (URLClassLoader) acl;
    // URL[] classpath = ucl.getURLs();
    // System.out.println(Arrays.toString(classpath));
    // Create default context directory
    // Copy jar file to TEST_DIR
    Configuration conf = new Configuration(hdfs.getConf());
    
  
    
    // Create default and application1 context directory
    // Copy jar file to DEFAULT and APPLICATION directories
    Configuration conf = new Configuration(hdfs.getConf());
    
    // DEFAULT CONTEXT
    
    // APPLICATION CONTEXT
  
    // Create default and application1 context directory
    // Copy jar file to DEFAULT and APPLICATION directories
    Configuration conf = new Configuration(hdfs.getConf());
    
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2bd8f1b07c42fcbf8742ba08e83dddc264a4aa1b,examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/TableToFile.java,"    String columns = """";
    ToolRunner.run(CachedConfiguration.getInstance(), new TableToFile(), args);",Either log or rethrow this exception.
7aaaa6f397b6c7409cdb74c99dfc6373cfd1d7e6,proxy/src/main/java/org/apache/accumulo/proxy/thrift/IteratorSetting.java,"                org.apache.thrift.protocol.TMap _map16 = iprot.readMapBegin();
                struct.properties = new HashMap<String,String>(2*_map16.size);
                for (int _i17 = 0; _i17 < _map16.size; ++_i17)
                  String _key18; // required
                  String _val19; // required
                  _key18 = iprot.readString();
                  _val19 = iprot.readString();
                  struct.properties.put(_key18, _val19);
          for (Map.Entry<String, String> _iter20 : struct.properties.entrySet())
            oprot.writeString(_iter20.getKey());
            oprot.writeString(_iter20.getValue());
          for (Map.Entry<String, String> _iter21 : struct.properties.entrySet())
            oprot.writeString(_iter21.getKey());
            oprot.writeString(_iter21.getValue());
          org.apache.thrift.protocol.TMap _map22 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.properties = new HashMap<String,String>(2*_map22.size);
          for (int _i23 = 0; _i23 < _map22.size; ++_i23)
            String _key24; // required
            String _val25; // required
            _key24 = iprot.readString();
            _val25 = iprot.readString();
            struct.properties.put(_key24, _val25);",Either log or rethrow this exception.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/util/Stat.java,"  
  long max = Long.MIN_VALUE;
  long min = Long.MAX_VALUE;
  long sum = 0;
  int count = 0;
  double partialStdDev = 0;
  
  public void addStat(long stat) {
    if (stat > max) max = stat;
    if (stat < min) min = stat;
    sum += stat;
    partialStdDev += stat * stat;
    count++;
  }
  
  public long getMin() {
    return min;
  }
  
  public long getMax() {
    return max;
  }
  
  public double getAverage() {
    return ((double) sum) / count;
  }
  
  public double getStdDev() {
    return Math.sqrt(partialStdDev / count - getAverage() * getAverage());
  }
  
  public String toString() {
    return String.format(""%,d %,d %,.2f %,d"", getMin(), getMax(), getAverage(), count);
  }
  
  public void clear() {
    sum = 0;
    count = 0;
    partialStdDev = 0;
  }
  
  public long getSum() {
    return sum;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/file/blockfile/cache/CacheEntry.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
35f8e2b1868cea9849efae7fae21e8ac789a0817,core/src/main/java/org/apache/accumulo/core/file/BloomFilterLayer.java,"import java.nio.charset.Charset;
    final Charset utf8 = Charset.forName(""UTF8"");

      bmfw.append(new org.apache.accumulo.core.data.Key(new Text(""r"" + fi), new Text(""cf1"")), new Value((""v"" + fi).getBytes(utf8)));
      bmfw.append(new org.apache.accumulo.core.data.Key(new Text(""r"" + fi), new Text(""cf2"")), new Value((""v"" + fi).getBytes(utf8)));",Move this variable to comply with Java Code Conventions.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/tabletserver/log/LogEntry.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
        for (String s : logSet) {
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
5c97efc2576278f4b8b6b004ded78c98251cda24,core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloRowInputFormat.java,"import org.apache.accumulo.core.security.Authorizations;
import org.apache.hadoop.mapreduce.InputFormat;
import org.apache.hadoop.mapreduce.Job;
/**
 * This class allows MapReduce jobs to use Accumulo as the source of data. This {@link InputFormat} provides row names as {@link Text} as keys, and a
 * corresponding {@link PeekingIterator} as a value, which in turn makes the {@link Key}/{@link Value} pairs for that row available to the Map function.
 * 
 * The user must specify the following via static configurator methods:
 * 
 * <ul>
 * <li>{@link AccumuloRowInputFormat#setConnectorInfo(Job, String, byte[])}
 * <li>{@link AccumuloRowInputFormat#setInputTableName(Job, String)}
 * <li>{@link AccumuloRowInputFormat#setScanAuthorizations(Job, Authorizations)}
 * <li>{@link AccumuloRowInputFormat#setZooKeeperInstance(Job, String, String)} OR {@link AccumuloRowInputFormat#setMockInstance(Job, String)}
 * </ul>
 * 
 * Other static methods are optional.
 */",Return empty string instead.
1d138a73ad757c12b3d30aa1a6029b63cc3eaa66,core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormat.java,import org.apache.accumulo.core.security.tokens.SecurityToken;,Replace all tab characters in this file by sequences of white-spaces.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/cli/ClientOnDefaultTable.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.server.cli;

import org.apache.accumulo.core.client.Instance;
import org.apache.accumulo.core.client.ZooKeeperInstance;
import org.apache.accumulo.core.client.mock.MockInstance;
import org.apache.accumulo.server.client.HdfsZooInstance;

public class ClientOnDefaultTable extends org.apache.accumulo.core.cli.ClientOnDefaultTable {
  {
    user = ""root"";
  }

  @Override
  synchronized public Instance getInstance() {
    if (cachedInstance != null)
      return cachedInstance;
    
    if (mock)
      return cachedInstance = new MockInstance(instance);
    if (instance == null) {
      return cachedInstance = HdfsZooInstance.getInstance();
    }
    return cachedInstance = new ZooKeeperInstance(this.instance, this.zookeepers);
  }
  public ClientOnDefaultTable(String table) {
    super(table);
  }
}","Remove this call to ""exit"" or ensure it is really required."
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/logger/LogEvents.java,"  // DO NOT CHANGE ORDER OF ENUMS, ORDER IS USED IN SERIALIZATION
  OPEN,
  DEFINE_TABLET,
  MUTATION,
  MANY_MUTATIONS,
  COMPACTION_START,
  COMPACTION_FINISH;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0fcc836dbd80229a0dbcbd5b02019558aa799e4,src/core/src/test/java/org/apache/accumulo/core/client/admin/TableOperationsHelperTest.java,"    
    
    
    
    try {
      t.attachIterator(""table"", setting);
      Assert.fail();
    } catch (IllegalArgumentException e) {}
    setting.setName(""thirdName"");
    try {
      t.attachIterator(""table"", setting);
      Assert.fail();
    } catch (IllegalArgumentException e) {}
    setting.setPriority(10);
    t.attachIterator(""table"", setting);",Either log or rethrow this exception.
b54afa1cd936d482891f994cce3144a651743145,core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteManyCommand.java,"import java.util.concurrent.TimeUnit;

    scanner.setTimeout(getTimeout(cl), TimeUnit.MILLISECONDS);

    final BatchWriter writer = shellState.getConnector()
        .createBatchWriter(tableName, new BatchWriterConfig().setTimeout(getTimeout(cl), TimeUnit.MILLISECONDS));",3 duplicated blocks of code must be removed.
2e3598547a4cfa181a58b3f8cfbf215d1e4f5651,src/server/src/main/java/org/apache/accumulo/server/master/tableOps/CompactRange.java,"import java.util.Iterator;
import org.apache.accumulo.server.master.Master;
			Iterator<Entry<Key,Value>> row = ri.next();
			Entry<Key, Value> entry = null;
			while (row.hasNext()) {
				entry = row.next();
			Text tabletEndRow = new KeyExtent(entry.getKey().getRow(), (Text)null).getEndRow();",Either log or rethrow this exception.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/iterators/NoLabelIterator.java,"package org.apache.accumulo.core.iterators;

import java.io.IOException;
import java.util.Map;

import org.apache.accumulo.core.data.Key;
import org.apache.accumulo.core.data.Value;
import org.apache.accumulo.core.iterators.filter.NoLabelFilter;


public class NoLabelIterator extends SkippingIterator implements OptionDescriber {
	
	private NoLabelFilter ref = new NoLabelFilter();
	
	public NoLabelIterator deepCopy(IteratorEnvironment env)
	{
		return new NoLabelIterator(this, env);
	}
	
	private NoLabelIterator(NoLabelIterator other, IteratorEnvironment env)
	{
		setSource(other.getSource().deepCopy(env));
		ref = other.ref;
	}
	
	public NoLabelIterator(){}
	
	private boolean matches(Key key, Value value){
		return ref.accept(key, value);			
	}
	
	@Override
	protected void consume() throws IOException {
		while(getSource().hasTop() && !matches(getSource().getTopKey(), getSource().getTopValue())){
			getSource().next();
		}
	}
	
	
	
	@Override
	public void init(SortedKeyValueIterator<Key, Value> source, Map<String, String> options, IteratorEnvironment env) throws IOException {
		super.init(source, options, env);
		ref.init(options);		
	}
	
	@Override
	public IteratorOptions describeOptions() {
		return ref.describeOptions();
	}
	
	@Override
	public boolean validateOptions(Map<String, String> options) {
		return ref.validateOptions(options);
	}	
}",Return empty string instead.
ac01b2de06ba7a6bf0db001e4a5f047257a1e436,server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/StopTabletServer.java,"package org.apache.accumulo.server.test.randomwalk.concurrent;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Properties;
import java.util.Set;

import org.apache.accumulo.core.conf.DefaultConfiguration;
import org.apache.accumulo.server.master.LiveTServerSet;
import org.apache.accumulo.server.master.LiveTServerSet.Listener;
import org.apache.accumulo.server.master.state.TServerInstance;
import org.apache.accumulo.server.test.randomwalk.State;
import org.apache.accumulo.server.test.randomwalk.Test;

public class StopTabletServer extends Test {
  
  @Override
  public void visit(State state, Properties props) throws Exception {
    
    LiveTServerSet set = new LiveTServerSet(state.getInstance(), DefaultConfiguration.getDefaultConfiguration(), new Listener() {
      @Override
      public void update(LiveTServerSet current, Set<TServerInstance> deleted, Set<TServerInstance> added) {
        log.info(""Tablet server set changed: "" + deleted + "" deleted and "" + added + "" added"");
      }
    });
    List<TServerInstance> currentServers = new ArrayList<TServerInstance>(set.getCurrentServers());
    Collections.shuffle(currentServers);
    Runtime runtime = Runtime.getRuntime();
    if (currentServers.size() > 1) {
      TServerInstance victim = currentServers.get(0);
      log.info(""Stopping "" + victim.hostPort());
      runtime.exec(new String[] {System.getenv(""ACCUMULO_HOME"") + ""/bin/accumulo"", ""admin"", ""stop"", victim.hostPort()});
      if (set.getCurrentServers().contains(victim))
        throw new RuntimeException(""Failed to stop "" + victim);
    }
  }
  
}",Define and throw a dedicated exception instead of using a generic one.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/master/state/TabletLocationState.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 * When a tablet is assigned, we mark its future location. When the tablet is opened, we set its current location. A tablet should never have both a future and
 * current location.
 * 
 * A tablet server is always associated with a unique session id. If the current tablet server has a different session, we know the location information is
 * out-of-date.
    
    public TabletLocationState(KeyExtent extent, TServerInstance future, TServerInstance current, TServerInstance last, Collection<Collection<String>> walogs,
            boolean chopped) {
        if (walogs == null) walogs = Collections.emptyList();
    
        return extent + ""@("" + future + "","" + current + "","" + last + "")"" + (chopped ? "" chopped"" : """");
    
    
        if (server == null) return TabletState.UNASSIGNED;
            if (liveServers.contains(server)) if (server.equals(future)) {
                return TabletState.ASSIGNED;
            } else {
                return TabletState.HOSTED;
            }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
527a100ef5de9c51fb17b0b340f036ee4cd98590,src/core/src/main/java/org/apache/accumulo/core/gc/thrift/GcCycleStats.java,"@SuppressWarnings(""all"") public class GcCycleStats implements org.apache.thrift.TBase<GcCycleStats, GcCycleStats._Fields>, java.io.Serializable, Cloneable {",13 duplicated blocks of code must be removed.
d631e78ce6361c82ee6de2e98ecf3b0a14b33858,core/src/main/java/org/apache/accumulo/core/util/TableDiskUsage.java,"  public interface Printer {
    void print(String line);
  }
  
  IOException {
    printDiskUsage(acuConf, tables, fs, conn, new Printer() {
      @Override
      public void print(String line) {
        System.out.println(line);
      }
    });
  }
  public static void printDiskUsage(AccumuloConfiguration acuConf, Collection<String> tables, FileSystem fs, Connector conn, Printer printer) throws TableNotFoundException,
  IOException {
  
      printer.print(String.format(""%,24d %s"", entry.getValue(), entry.getKey()));",Either log or rethrow this exception.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/GCLotsOfCandidatesTest.java,"  public static void main(String args[]) throws AccumuloException, AccumuloSecurityException, TableNotFoundException, MutationsRejectedException {
    if (args.length != 4) throw new IllegalArgumentException(""Expected arguments: <instance name> <zookeeper server> <username> <password>"");
    
    Connector conn = new ZooKeeperInstance(args[0], args[1]).getConnector(args[2], args[3].getBytes());
    generateCandidates(conn);
  }
  
  private static void generateCandidates(Connector conn) throws AccumuloException, AccumuloSecurityException, TableNotFoundException,
      MutationsRejectedException {
    conn.securityOperations().grantTablePermission(conn.whoami(), Constants.METADATA_TABLE_NAME, TablePermission.WRITE);
    BatchWriter bw = conn.createBatchWriter(Constants.METADATA_TABLE_NAME, 1L << 20, 0l, 2);
    for (int i = 0; i < 10000; ++i) {
      final Text emptyText = new Text("""");
      Text row = new Text(String.format(""%s%s%020d%s"", Constants.METADATA_DELETE_FLAG_PREFIX, ""/"", i,
          ""aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeeffffffffffgggggggggghhhhhhhhhhiiiiiiiiiijjjjjjjjjj""));
      Mutation delFlag = new Mutation(row);
      delFlag.put(emptyText, emptyText, new Value(new byte[] {}));
      bw.addMutation(delFlag);
    bw.close();
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/monitor/DedupedLogEvent.java,"  
  private LoggingEvent event;
  private int count = 0;
  private int hash = -1;
  
  public DedupedLogEvent(LoggingEvent event) {
    this(event, 1);
  }
  
  public DedupedLogEvent(LoggingEvent event, int count) {
    this.event = event;
    this.count = count;
  }
  
  public LoggingEvent getEvent() {
    return event;
  }
  
  public int getCount() {
    return count;
  }
  
  public void setCount(int count) {
    this.count = count;
  }
  
  @Override
  public int hashCode() {
    if (hash == -1) {
      String eventId = event.getMDC(""application"").toString() + "":"" + event.getLevel().toString() + "":"" + event.getMessage().toString();
      hash = eventId.hashCode();
    return hash;
  }
  
  @Override
  public boolean equals(Object obj) {
    if (obj instanceof DedupedLogEvent) return this.event.equals(event);
    return false;
  }
  
  @Override
  public String toString() {
    return event.getMDC(""application"").toString() + "":"" + event.getLevel().toString() + "":"" + event.getMessage().toString();
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
4661491d0b1de8fe4d5ce1d3534de01546bfb3df,test/src/test/java/org/apache/accumulo/test/functional/HalfDeadTServerIT.java,"public class HalfDeadTServerIT extends ConfigurableMacIT {
    Process ingest = cluster.exec(TestIngest.class, ""-u"", ""root"", ""-i"", cluster.getInstanceName(), ""-z"", cluster.getZooKeepers(), ""-p"", ROOT_PASSWORD, ""--rows"", rows + """");","Use ""Integer.toString"" instead."
a8eed5b2b329b35cae88136e1b4ea71cc875f737,server/src/main/java/org/apache/accumulo/server/test/randomwalk/State.java,"      String username = props.getProperty(""USERNAME"");
      String password = props.getProperty(""PASSWORD"");
      connector = new ZooKeeperInstance(instance, zookeepers).getConnector(username, password.getBytes());",Either log or rethrow this exception.
2ad672a5172124625d719c38c163ab68846c75a6,core/src/test/java/org/apache/accumulo/core/client/impl/TabletLocatorImplTest.java,import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;,Move this constructor to comply with Java Code Conventions.
35f8e2b1868cea9849efae7fae21e8ac789a0817,server/src/main/java/org/apache/accumulo/server/util/ChangeSecret.java,"import java.nio.charset.Charset;

  private static final Charset utf8 = Charset.forName(""UTF8"");
    new_.putPersistentData(path, newInstanceId.getBytes(utf8), NodeExistsPolicy.OVERWRITE);",Move this variable to comply with Java Code Conventions.
38932fefb38e1ef2df70fc23a5ed88ff6930afdf,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/InputFormatBase.java,"   *          The Hadoop job object
   *          if true, enable usage of the IsolatedScanner. Otherwise, disable.
  
   *          The Hadoop configuration object
   *          if true, enable usage of the IsolatedScanner. Otherwise, disable.
   *          The Hadoop job object
   *          if true, enable usage of the ClientSideInteratorScanner. Otherwise, disable.
  
   * @param conf
   *          The Hadoop configuration object
   *          if true, enable usage of the ClientSideInteratorScanner. Otherwise, disable.
  
  
  
   * @deprecated Use {@link #setRanges(Configuration,Collection)} instead
  
  
  
   * @deprecated Use {@link #fetchColumns(Configuration,Collection)} instead
  
  
  
  
   * 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
    
    
    
    
      ",Either log or rethrow this exception.
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,core/src/main/java/org/apache/accumulo/core/client/mock/MockInstance.java,"import org.apache.accumulo.core.security.tokens.SecurityToken;
@SuppressWarnings(""deprecation"")
   * @deprecated @since 1.5, use {@link #getConnector(SecurityToken)}
  public Connector getConnector(SecurityToken token) throws AccumuloException, AccumuloSecurityException {
   * @deprecated @since 1.5, use {@link #getConnector(SecurityToken)}
   * @deprecated @since 1.5, use {@link #getConnector(SecurityToken)}
   * @deprecated @since 1.5, use {@link #getConnector(SecurityToken)}",Either log or rethrow this exception.
7aaaa6f397b6c7409cdb74c99dfc6373cfd1d7e6,proxy/src/main/java/org/apache/accumulo/proxy/ProxyServer.java,"import org.apache.accumulo.proxy.thrift.DiskUsage;
              flush, wait);

  @Override
  public List<DiskUsage> getDiskUsage(ByteBuffer login, Set<String> tables) throws org.apache.accumulo.proxy.thrift.AccumuloException,
          org.apache.accumulo.proxy.thrift.AccumuloSecurityException, org.apache.accumulo.proxy.thrift.TableNotFoundException, TException {
    try {
      List<org.apache.accumulo.core.client.admin.DiskUsage> diskUsages = getConnector(login).tableOperations().getDiskUsage(tables);
      List<DiskUsage> retUsages = new ArrayList<DiskUsage>();
      for(org.apache.accumulo.core.client.admin.DiskUsage diskUsage : diskUsages) {
        DiskUsage usage = new DiskUsage();
        usage.setTables(new ArrayList<String>(diskUsage.getTables()));
        usage.setUsage(diskUsage.getUsage());
        retUsages.add(usage);
      }
      return retUsages;
    } catch(Exception e) {
      handleExceptionTNF(e);
      return null;
    }
  }",Either log or rethrow this exception.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/ingest/src/test/java/org/apache/accumulo/examples/wikisearch/reader/AggregatingRecordReaderTest.java,"package org.apache.accumulo.examples.wikisearch.reader;
import org.apache.accumulo.examples.wikisearch.reader.AggregatingRecordReader;","Rename ""table"" which hides the field declared at line 107."
cb45e89b0f78d170cb0f5383ab08dea780c9386e,server/src/main/java/org/apache/accumulo/server/tabletserver/FileManager.java,"        if (!file.contains("":""))
          throw new IllegalArgumentException(""Expected uri, got : "" + file);
        Path path = new Path(file);","Remove this unused private ""FileType"" constructor."
190fc92eab965a787f19797fda3754bece6a1ae2,core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActiveScan.java,"                  Map<String,String> _val17; // required
                      String _val21; // required
            Map<String,String> _val39; // required
                String _val43; // required",Rename this package name to match the regular expression '^[a-z]+(\.[a-z][a-z0-9]*)*$'.
81255af4059c86a03f03d88f4d6ec973a93604b1,server/src/main/java/org/apache/accumulo/server/master/state/ZooTabletStateStore.java,"    Iterator<TabletLocationState> currentIter = iterator();
    TabletLocationState current = currentIter.next();
    if (current.current != null) {
      throw new IllegalDSException(""Trying to set the root tablet location: it is already set to "" + current.current);
    }
    Iterator<TabletLocationState> currentIter = iterator();
    TabletLocationState current = currentIter.next();
    if (current.current != null) {
      throw new IllegalDSException(""Trying to set the root tablet location: it is already set to "" + current.current);
    }
    if (!current.future.equals(assignment.server)) {
      throw new IllegalDSException(""Root tablet is already assigned to "" + current.future);
    }
    // Make the following unnecessary by making the entire update atomic ",Move this variable to comply with Java Code Conventions.
8dccbe7e9960c204bf82326c9fe6e28dcb8d647e,core/src/main/java/org/apache/accumulo/core/master/thrift/TableOperation.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",296 duplicated blocks of code must be removed.
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,trace/src/main/java/org/apache/accumulo/trace/thrift/SpanReceiver.java,package org.apache.accumulo.trace.thrift;,Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/conf/AggregatorConfiguration.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/monitor/util/celltypes/ProgressChartType.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    private double max;
    
    public ProgressChartType() {
        this(1.0);
    }
    
    public ProgressChartType(Double total) {
        max = total == null ? 1.0 : total;
    }
    
    @Override
    public String format(Object obj) {
        if (obj == null) return ""-"";
        Double num = (Double) obj;
        return getChart(num, max);
    }
    
    public static String getChart(double num, double total) {
        StringBuilder result = new StringBuilder();
        double percent = 0;
        if (total != 0) percent = (num / total) * 100;
        
        int width = 0;
        if (percent < 1) width = 0;
        else if (percent > 100) width = 100;
        else width = (int) percent;
        
        result.append(""<div class='progress-chart'>"");
        result.append(""<div style='width: "").append(width).append(""%;'></div>"");
        result.append(""</div>&nbsp;"");
        result.append((percent < 1 && percent > 0) ? ""&lt;1"" : (int) percent).append(""%"");
        return result.toString();
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteManyCommand.java,"  private Option forceOpt, tableOpt;
  
  public int execute(String fullCommand, CommandLine cl, Shell shellState) throws AccumuloException, AccumuloSecurityException, TableNotFoundException,
      IOException, ParseException {
    String tableName;
    if (cl.hasOption(tableOpt.getOpt())) {
      tableName = cl.getOptionValue(tableOpt.getOpt());
      if (!shellState.getConnector().tableOperations().exists(tableName)) throw new TableNotFoundException(null, tableName, null);
    else {
      shellState.checkTableState();
      tableName = shellState.getTableName();
    // handle first argument, if present, the authorizations list to
    // scan with
    Authorizations auths = getAuths(cl, shellState);
    final Scanner scanner = shellState.getConnector().createScanner(tableName, auths);
    
    scanner.addScanIterator(new IteratorSetting(1, ""NOVALUE"", SortedKeyIterator.class));
    
    // handle remaining optional arguments
    scanner.setRange(getRange(cl));
    
    // handle columns
    fetchColumns(cl, scanner);
    
    // output / delete the records
    BatchWriter writer = shellState.getConnector().createBatchWriter(tableName, 1024 * 1024, 1000L, 4);
    shellState.printLines(new DeleterFormatter(writer, scanner, cl.hasOption(timestampOpt.getOpt()), shellState, cl.hasOption(forceOpt.getOpt())), false);
    
    return 0;
  }
  
  @Override
  public String description() {
    return ""scans a table and deletes the resulting records"";
  }
  
  @Override
  public Options getOptions() {
    forceOpt = new Option(""f"", ""force"", false, ""forces deletion without prompting"");
    Options opts = super.getOptions();
    
    tableOpt = new Option(Shell.tableOption, ""table"", true, ""table to be created"");
    tableOpt.setArgName(""table"");
    opts.addOption(forceOpt);
    opts.addOption(tableOpt);
    return opts;
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousStatsCollector.java,"import org.apache.accumulo.server.cli.ClientOnRequiredTable;
    private Opts opts;
    public StatsCollectionTask(Opts opts) {
      this.opts = opts;
      this.tableId = Tables.getNameToIdMap(opts.getInstance()).get(opts.tableName);
      Connector conn = opts.getConnector();
      Scanner scanner = conn.createScanner(Constants.METADATA_TABLE_NAME, opts.auths);
      scanner.setBatchSize(opts.scanBatchSize);
        client = MasterClient.getConnectionWithRetry(opts.getInstance());
  static class Opts extends ClientOnRequiredTable {
  }
  
    Opts opts = new Opts();
    opts.parseArgs(ContinuousStatsCollector.class.getName(), args);
    jtimer.schedule(new StatsCollectionTask(opts), 0, 30000);","Remove this call to ""exit"" or ensure it is really required."
8a33be695e0bcb769412db499df9cbec23004740,server/src/main/java/org/apache/accumulo/server/test/continuous/UndefinedAnalyzer.java,"import org.apache.accumulo.core.cli.BatchScannerOpts;
    BatchScannerOpts bsOpts = new BatchScannerOpts();
    opts.parseArgs(UndefinedAnalyzer.class.getName(), args, opts);
    BatchScanner bscanner = conn.createBatchScanner(opts.getTableName(), opts.auths, bsOpts.scanThreads);
    bscanner.setTimeout(bsOpts.scanTimeout, TimeUnit.MILLISECONDS);","Remove this unused method parameter ""opts""."
55bb75e2b594140e5528407d5b74de1591d67341,src/server/src/main/java/org/apache/accumulo/server/master/state/TabletStateChangeIterator.java,import org.apache.accumulo.core.iterators.user.WholeRowIterator;,"Remove the literal ""false"" boolean value."
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/functional/BulkSplitOptimizationTest.java,"  
  private static final String TABLE_NAME = ""test_ingest"";
  
  @Override
  public void cleanup() throws Exception {
    FileSystem fs = FileSystem.get(CachedConfiguration.getInstance());
    fs.delete(new Path(""/testmf""), true);
    fs.delete(new Path(""/testmf_failures""), true);
  }
  
  @Override
  public Map<String,String> getInitialConfig() {
    return parseConfig(Property.TSERV_MAJC_DELAY + ""=1s"");
  }
  
  @Override
  public List<TableSetup> getTablesToCreate() {
    return Collections.singletonList(new TableSetup(TABLE_NAME, parseConfig(Property.TABLE_MAJC_RATIO + ""=1000"", Property.TABLE_FILE_MAX + ""=1000"",
        Property.TABLE_SPLIT_THRESHOLD + ""=1G"")));
  }
  
  @Override
  public void run() throws Exception {
    FileSystem fs = FileSystem.get(CachedConfiguration.getInstance());
    fs.delete(new Path(""/testmf""), true);
    CreateMapFiles.main(new String[] {""testmf"", ""8"", ""0"", ""100000"", ""99""});
    bulkImport(fs, TABLE_NAME, ""/testmf"");
    checkSplits(TABLE_NAME, 0, 0);
    checkMapFiles(TABLE_NAME, 1, 1, 100, 100);
    
    // initiate splits
    getConnector().tableOperations().setProperty(TABLE_NAME, Property.TABLE_SPLIT_THRESHOLD.getKey(), ""100K"");
    UtilWaitThread.sleep(2000);
    
    // wait until over split threshold
    while (getConnector().tableOperations().getSplits(TABLE_NAME).size() < 50) {
      UtilWaitThread.sleep(500);
    
    checkSplits(TABLE_NAME, 50, 100);
    
    VerifyIngest.main(new String[] {""-timestamp"", ""1"", ""-size"", ""50"", ""-random"", ""56"", ""100000"", ""0"", ""1""});
    
    // ensure each tablet does not have all map files
    checkMapFiles(TABLE_NAME, 50, 100, 1, 4);
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
446a37a9795f2df7adc841154ca05add79cf286e,server/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java,"import org.apache.accumulo.core.metadata.MetadataTable;
import org.apache.accumulo.core.metadata.schema.MetadataSchema;
import org.apache.accumulo.core.metadata.schema.MetadataSchema.TabletsSection;
    return new MetaDataTableScanner(instance, auths, MetadataSchema.TabletsSection.getRange(), state);
        m.put(TabletsSection.CurrentLocationColumnFamily.NAME, cq, assignment.server.asMutationValue());
        m.putDelete(TabletsSection.FutureLocationColumnFamily.NAME, cq);
        m.put(TabletsSection.FutureLocationColumnFamily.NAME, assignment.server.asColumnQualifier(), assignment.server.asMutationValue());
          m.putDelete(TabletsSection.CurrentLocationColumnFamily.NAME, tls.current.asColumnQualifier());
          m.putDelete(TabletsSection.FutureLocationColumnFamily.NAME, tls.future.asColumnQualifier());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
9b0751a7e22c8ba88ae5f78589541b041055b09b,src/core/src/main/java/org/apache/accumulo/core/iterators/GrepIterator.java," * @deprecated since 1.4, replaced by {@link org.apache.accumulo.core.iterators.user.GrepIterator}",Do not forget to remove this deprecated code someday.
c8b5f1755c0563e93f21036ecf88da37b567aa74,core/src/main/java/org/apache/accumulo/core/util/shell/commands/TableOperation.java,"  public int execute(final String fullCommand, final CommandLine cl, final Shell shellState) throws Exception {
    final SortedSet<String> tableSet = new TreeSet<String>();
        if (table.matches(cl.getOptionValue(optTablePattern.getOpt()))) {
        }
      for (String tableName : cl.getArgs()) {
      }
      if (!more) {
      }
      if (!shellState.getConnector().tableOperations().exists(tableName)) {
      }
      if (operate) {
      }
    final Options o = new Options();
    final OptionGroup opg = new OptionGroup();
    return useCommandLine ? Shell.NO_FIXED_ARG_LENGTH_CHECK : 0;
  public void registerCompletion(final Token root, final Map<Command.CompletionSet,Set<String>> special) {",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
99da5641c28784c7b717cce6749673863c2ec8cf,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchDeleter.java,"import org.apache.accumulo.core.security.Credentials;
  private Credentials credentials;
  public TabletServerBatchDeleter(Instance instance, Credentials credentials, String tableId, Authorizations authorizations, int numQueryThreads,","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
aad8ec865da935dd4bc411e9fe8e0c45e3468c60,proxy/src/test/java/org/apache/accumulo/proxy/SimpleTest.java,"import org.apache.accumulo.proxy.thrift.UserPass;
  private static UserPass userpass = new UserPass(""root"", ByteBuffer.wrap(secret.getBytes()));
  private static ByteBuffer creds = null;



  

    creds = client.login(userpass);


    loop:
    for (int i = 0; i < 100; i++) {
      for (String tserver: client.getTabletServers(creds)) {
       scans = client.getActiveScans(creds, tserver);
       if (!scans.isEmpty())
         break loop;
       UtilWaitThread.sleep(10);
    assertEquals(""root"", scan.getUser());
    loop2:
    for (int i = 0; i < 100; i++) {
      for (String tserver: client.getTabletServers(creds)) {

    HashSet<ByteBuffer> auths = new HashSet<ByteBuffer>(Arrays.asList(s2bb(""A""),s2bb(""B"")));
    client.changeUserPassword(creds, ""stooge"", s2bb(""""));
    ByteBuffer stooge = client.login(new UserPass(""stooge"", s2bb("""")));
    
    } catch (TException ex) {
    }
    } catch (TException ex) {
    }
    } catch (Exception ex) {
    }
    HashMap<String, String> options = new HashMap<String, String>();
    } catch (Exception ex) {
    }
      client.updateAndFlush(creds, ""test"", mutation(""row""+i, ""cf"", ""cq"", """"+i));
    Map<String, Set<String>> groups = new HashMap<String, Set<String>>();


","Immediately return this expression instead of assigning it to the temporary variable ""connector""."
5424b913156b5c3d99cd917db5213ee61d534772,src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingArrayCombiner.java,"    io.setName(""sumarray"");
    io.setDescription(""SummingArrayCombiner can interpret Values as arrays of Longs using a variety of encodings (arrays of variable length longs or fixed length longs, or comma-separated strings) before summing element-wise."");",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/security/SecurityConstants.java,"    if (Arrays.equals(SYSTEM_PASSWORD, base64encodedPassword))
      return TabletServerState.RESERVED;
      if (in.available() > 0)
        throw new IOException();
      if (instanceFails)
        return confFails ? TabletServerState.BAD_VERSION_AND_INSTANCE_AND_CONFIG : TabletServerState.BAD_VERSION_AND_INSTANCE;
    if (instanceFails)
      return confFails ? TabletServerState.BAD_INSTANCE_AND_CONFIG : TabletServerState.BAD_INSTANCE;","Remove this call to ""exit"" or ensure it is really required."
5c97efc2576278f4b8b6b004ded78c98251cda24,core/src/main/java/org/apache/accumulo/core/client/admin/SecurityOperationsImpl.java,"   * @deprecated since 1.5, use {@link #authenticateUser(AccumuloToken)}
    return authenticateUser(new UserPassToken(user, password));
  }
  
  /**
   * Verify a username/password combination is valid
   * 
   * @param token
   *          the AccumuloToken of the principal to authenticate
   * @return true if the user asking is allowed to know and the specified AccumuloToken is valid, false otherwise
   * @throws AccumuloException
   *           if a general error occurs
   * @throws AccumuloSecurityException
   *           if the user does not have permission to ask
   */
  public boolean authenticateUser(final AccumuloToken<?,?> token2) throws AccumuloException, AccumuloSecurityException {
    ArgumentChecker.notNull(token2);
        return client.authenticateUser(Tracer.traceInfo(), token.toThrift(), TokenHelper.wrapper(token2));
    if (!(this.token.getToken() instanceof PasswordUpdatable) || !(newToken instanceof PasswordUpdatable))",Return empty string instead.
52911c52255a7643214587fe83eb40f1ea5802fd,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/InputFormatBase.java,"    if (iteratorName == null || key == null || value == null)
        this.key = URLDecoder.decode(tokenizer.nextToken(), ""UTF-8"");
        return new String(iteratorName + FIELD_SEP + URLEncoder.encode(key, ""UTF-8"") + FIELD_SEP + URLEncoder.encode(value, ""UTF-8""));","Remove the literal ""true"" boolean value."
5f83564549f7f9e94fb6619c983d8e3d12607e74,core/src/main/java/org/apache/accumulo/core/util/shell/commands/HiddenCommand.java,"  public int execute(final String fullCommand, final CommandLine cl, final Shell shellState) throws Exception {
    } else {
    }
    return ""accvmvlo"";",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
99da5641c28784c7b717cce6749673863c2ec8cf,core/src/main/java/org/apache/accumulo/core/client/impl/ScannerImpl.java,"import org.apache.accumulo.core.security.Credentials;
 * ""Clients can iterate over multiple column families, and there are several mechanisms for limiting the rows, columns, and timestamps traversed by a scan. For
 * example, we could restrict [a] scan ... to only produce anchors whose columns match [a] regular expression ..., or to only produce anchors whose timestamps
 * fall within ten days of the current time.""
  private Credentials credentials;
  public ScannerImpl(Instance instance, Credentials credentials, String table, Authorizations authorizations) {","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
bd77fefdb146ef0dc9bf64b51fb8e8f43c10ce0d,core/src/main/java/org/apache/accumulo/core/security/thrift/AuthInfo.java,"  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",300 duplicated blocks of code must be removed.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/upgrade/UpgradeMetadataTable.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/security/crypto/CryptoModule.java," * 
 * 
  
    
    
    
  
   * 
  
   * 
   * 
  
   * 
  
   * ",Replace all tab characters in this file by sequences of white-spaces.
e0880e263e4bf8662ba3848405200473a25dfc9f,contrib/cloudtrace-0.2.0/src/test/java/cloudtrace/instrument/PerformanceTest.java,"package cloudtrace.instrument;

import org.junit.Test;

public class PerformanceTest {
    
    @Test
    public void test() {
        
    }
    
    public static void main(String[] args) {
        
        long now = System.currentTimeMillis();
        for (long i = 0; i < 1000*1000; i++) {
            @SuppressWarnings(""unused"")
            Long x = new Long(i);
        }
        System.out.println(String.format(""Trivial took %d millis"", System.currentTimeMillis() - now));
        now = System.currentTimeMillis();
        for (long i = 0; i < 1000*1000; i++)
        {
            Span s = Trace.start(""perf"");
            s.stop();
        }
        System.out.println(String.format(""Span Loop took %d millis"", System.currentTimeMillis() - now));
        now = System.currentTimeMillis();
        Trace.on(""test"");
        for (long i = 0; i < 1000*1000; i++)
        {
            Span s = Trace.start(""perf"");
            s.stop();
        }
        Trace.off();
        System.out.println(String.format(""Trace took %d millis"", System.currentTimeMillis() - now));
    }
}",Return empty string instead.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ExitCommand.java,"package org.apache.accumulo.core.util.shell.commands;

import org.apache.accumulo.core.util.shell.Shell;
import org.apache.accumulo.core.util.shell.Shell.Command;
import org.apache.commons.cli.CommandLine;


public class ExitCommand extends Command {
	@Override
	public int execute(String fullCommand, CommandLine cl, Shell shellState) {
		shellState.setExit(true);
		return 0;
	}

	@Override
	public String description() {
		return ""exits the shell"";
	}

	@Override
	public int numArgs() {
		return 0;
	}
}",Return empty string instead.
f423648a208cbcc2a3dd7c82ec427cc6375c1bf8,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/SetIterCommand.java,"import java.util.EnumSet;
    EnumSet<IteratorScope> scopes = EnumSet.noneOf(IteratorScope.class);
      scopes.add(IteratorScope.minc);
      scopes.add(IteratorScope.majc);
      scopes.add(IteratorScope.scan);
    if (scopes.isEmpty())
    
    IteratorSetting setting = new IteratorSetting(priority, name, classname, scopes, options);","Remove this unused method parameter ""hasStart""."
176df80fd404e7ba68bceedbb1ab2b3a53862857,core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActiveScan.java,"                  org.apache.accumulo.core.data.thrift.TColumn _elem10; // required
                  org.apache.accumulo.core.data.thrift.IterInfo _elem13; // required
                  ByteBuffer _elem24; // required
            org.apache.accumulo.core.data.thrift.TColumn _elem37; // required
            org.apache.accumulo.core.data.thrift.IterInfo _elem40; // required
            ByteBuffer _elem51; // required","Remove this unused method parameter ""table""."
4325cd202245dc839d860ed6ce5ebc24bb452586,fate/src/main/java/org/apache/accumulo/fate/Fate.java,"package org.apache.accumulo.fate;
import org.apache.accumulo.fate.TStore.TStatus;
import org.apache.accumulo.fate.util.Daemon;
import org.apache.accumulo.fate.util.LoggingRunnable;","Remove this call to ""exit"" or ensure it is really required."
30ef1aca3b5ef33b41059b61c10505702373ef24,fate/src/main/java/org/apache/accumulo/fate/zookeeper/ZooReaderWriter.java,"  private final String scheme;
  private final byte[] auth;
    return getSession(keepers, timeout, scheme, auth);
  public ZooReaderWriter(String string, int timeInMillis, String scheme, byte[] auth) {
    this.scheme = scheme;
    this.auth = auth;
  public static synchronized ZooReaderWriter getInstance(String zookeepers, int timeInMillis, String scheme, byte[] auth) {
      instance = new ZooReaderWriter(zookeepers, timeInMillis, scheme, auth);
  public static synchronized IZooReaderWriter getRetryingInstance(String zookeepers, int timeInMillis, String scheme, byte[] auth) {
      final IZooReaderWriter inst = getInstance(zookeepers, timeInMillis, scheme, auth);",Move this constructor to comply with Java Code Conventions.
98cd224fc0c5e1e0cd2cbf407599c2bd69228c9d,core/src/main/java/org/apache/accumulo/core/conf/Experimental.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.conf;

import java.lang.annotation.Inherited;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

/**
 * An annotation to denote experimental {@link AccumuloConfiguration} {@link Property} keys.
 */
@Inherited
@Retention(RetentionPolicy.RUNTIME)
@interface Experimental {
  
}","Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
38932fefb38e1ef2df70fc23a5ed88ff6930afdf,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/StringSummation.java," * @deprecated since 1.4, replaced by {@link org.apache.accumulo.core.iterators.user.SummingCombiner} with
 *             {@link org.apache.accumulo.core.iterators.LongCombiner.Type#STRING}",Either log or rethrow this exception.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/test/TestRandomDeletes.java,"      if (result != 0)
        return result;
        if (half == 0)
          break;","Remove this call to ""exit"" or ensure it is really required."
af2a1a98f2f556230870ef6b39fa4597edcd59c2,core/src/main/java/org/apache/accumulo/core/client/impl/OfflineScanner.java,"  
  
    
      
  
      
      
      
    
    
    
      
      
  
    
  
    
  
  @Deprecated
  @Deprecated
  ",3 duplicated blocks of code must be removed.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/unit/Ingest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
af9a1216a1853a7bd6e89ab581fadaf682cb69a0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ExecfileCommand.java,"    verboseOption = new Option(""v"", ""verbose"", false, ""display command prompt as commands are executed"");
}",Replace all tab characters in this file by sequences of white-spaces.
6c648a38001b9915e4d0c0241dcba645622e7c35,test/src/main/java/org/apache/accumulo/test/randomwalk/security/WalkingSecurity.java,"    Object obj = state.get(getSysUserName() + userPass);
    if (obj instanceof PasswordToken) {
      return ((PasswordToken)obj).getPassword();
    }
    return null;
    Object obj = state.get(getSysUserName() + userPass);
    if (obj instanceof PasswordToken) {
      return ((PasswordToken)obj).getPassword();
    }
    return null;",Return an empty array instead of null.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/master/thrift/TabletSplit.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */","Remove this unused private ""appendProp"" method."
c31bf3aa2092782c65bf23839aac442f44127b39,src/trace/src/main/java/cloudtrace/instrument/receivers/ZooSpanClient.java,"  
  private static final Logger log = Logger.getLogger(ZooSpanClient.class);
  private static final int TOTAL_TIME_WAIT_CONNECT_MS = 10 * 1000;
  private static final int TIME_WAIT_CONNECT_CHECK_MS = 100;
  
  final ZooKeeper zoo;
  final String path;
  final Random random = new Random();
  final List<String> hosts = new ArrayList<String>();
  
  public ZooSpanClient(String keepers, String path, String host, String service, long millis) throws IOException, KeeperException, InterruptedException {
    super(host, service, millis);
    this.path = path;
    zoo = new ZooKeeper(keepers, 30 * 1000, this);
    for (int i = 0; i < TOTAL_TIME_WAIT_CONNECT_MS; i += TIME_WAIT_CONNECT_CHECK_MS) {
      if (zoo.getState().equals(States.CONNECTED)) break;
      try {
        Thread.sleep(TIME_WAIT_CONNECT_CHECK_MS);
      } catch (InterruptedException ex) {
        break;
      }
    zoo.getChildren(path, true);
  }
  
  synchronized private void updateHosts(String path, List<String> children) {
    log.debug(""Scanning trace hosts in zookeeper: "" + path);
    try {
      List<String> hosts = new ArrayList<String>();
      for (String child : children) {
        byte[] data = zoo.getData(path + ""/"" + child, null, null);
        hosts.add(new String(data));
      }
      this.hosts.clear();
      this.hosts.addAll(hosts);
      log.debug(""Trace hosts: "" + this.hosts);
    } catch (Exception ex) {
      log.error(""unable to get destination hosts in zookeeper"", ex);
  }
  
  @Override
  synchronized protected String getSpanKey(Map<String,String> data) {
    if (hosts.size() > 0) {
      String host = hosts.get(random.nextInt(hosts.size()));
      log.debug(""sending data to "" + host);
      return host;
    return null;
  }
  
  @Override
  public void process(WatchedEvent event) {
    try {
      updateHosts(path, zoo.getChildren(path, null));
    } catch (Exception ex) {
      log.error(""unable to get destination hosts in zookeeper"", ex);
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b425d20bd0080f697c18c7afaca39b94953f7736,server/src/main/java/org/apache/accumulo/server/master/tableOps/ImportTable.java,"  public Repo<Master> call(long tid, Master master) throws Exception {
      FileSystem fs = master.getFileSystem();
  public Repo<Master> call(long tid, Master master) throws Exception {
      FileSystem fs = master.getFileSystem();
      mbw = master.getConnector().createBatchWriter(Constants.METADATA_TABLE_NAME, new BatchWriterConfig());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f5b0460dfe969ad764d43d30ceac961aaac4998f,core/src/main/java/org/apache/accumulo/core/cli/ClientOnRequiredTable.java,"    AccumuloInputFormat.setConnectorInfo(job, user, getPassword());
    AccumuloInputFormat.setInputTableName(job, tableName);
    AccumuloInputFormat.setScanAuthorizations(job, auths);
    AccumuloOutputFormat.setConnectorInfo(job, user, getPassword());
    AccumuloOutputFormat.setCreateTables(job, true);
    AccumuloOutputFormat.setDefaultTableName(job, tableName);",Either log or rethrow this exception.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/constraints/UnsatisfiableConstraint.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
2e3598547a4cfa181a58b3f8cfbf215d1e4f5651,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloRowInputFormat.java,"import org.apache.accumulo.core.util.PeekingIterator;
public class AccumuloRowInputFormat extends InputFormatBase<Text, PeekingIterator<Entry<Key, Value>>> {
	public RecordReader<Text, PeekingIterator<Entry<Key, Value>>> createRecordReader(
		return new RecordReaderBase<Text, PeekingIterator<Entry<Key, Value>>>() {
				currentV = null;
				currentV = new PeekingIterator<Entry<Key, Value>>(rowIterator.next());
				numKeysRead = rowIterator.getKVCount();
				currentKey = currentV.peek().getKey();
				currentK = new Text(currentKey.getRow());",Either log or rethrow this exception.
223cedceeac4c97d10739a31be0b0b1bba97d7b6,proxy/src/main/java/org/apache/accumulo/proxy/TestProxyClient.java,"    String writer = tpc.proxy().createWriter(userpass, testTable, null);",Remove this unused import 'java.util.Arrays'.
aea4313624e0bbe815c3de2c0a6aa4af4ad82c26,test/src/test/java/org/apache/accumulo/test/functional/SparseColumnFamilyIT.java,"import org.apache.accumulo.core.client.Connector;
import org.junit.Test;
public class SparseColumnFamilyIT extends MacTest {
  @Test(timeout=30*1000)
  public void sparceColumnFamily() throws Exception {
    Connector c = getConnector();
    c.tableOperations().create(""scftt"");
    BatchWriter bw = c.createBatchWriter(""scftt"", new BatchWriterConfig());
    c.tableOperations().flush(""scftt"", null, null, true);
    c.tableOperations().flush(""scftt"", null, null, true);
    Scanner scanner = c.createScanner(""scftt"", Authorizations.EMPTY);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
398bc97b1b550cc663f2760a7bebcc2e21c5af41,examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/RegexExample.java,"    @Override
    @Parameter(names = ""--rowRegex"")
    @Parameter(names = ""--columnFamilyRegex"")
    @Parameter(names = ""--columnQualifierRegex"")
    @Parameter(names = ""--valueRegex"")
    @Parameter(names = ""--output"", required = true)
  @Override
    AccumuloInputFormat.addIterator(job, regex);",Move this variable to comply with Java Code Conventions.
f89c45bf477393978fd175c6c4ed6db04fffa790,core/src/test/java/org/apache/accumulo/core/util/LocalityGroupUtilTest.java,"import static org.junit.Assert.*;
      assertEquals(1, groups.size());
      assertNotNull(groups.get(""lg1""));
      assertEquals(2, groups.get(""lg1"").size());
      assertTrue(groups.get(""lg1"").contains(new ArrayByteSequence(""cf1"")));
      fail();
      fail();
    assertEquals(bs1, bs2);
    assertEquals(ecf, LocalityGroupUtil.encodeColumnFamily(bs2));
    assertEquals(in2, out);",6 duplicated blocks of code must be removed.
5e0d7e7bafa48a1151451714231a7158b1d9b74e,test/src/test/java/org/apache/accumulo/test/functional/SimpleBalancerFairnessIT.java,"import org.apache.accumulo.core.security.Credentials;
    Map<String,String> siteConfig = new HashMap<String,String>();
    cfg.setSiteConfig(siteConfig);
  @Test(timeout = 120 * 1000)
    UtilWaitThread.sleep(15 * 1000);
    Credentials creds = new Credentials(""root"", new PasswordToken(ROOT_PASSWORD));
      stats = client.getMasterStats(Tracer.traceInfo(), creds.toThrift(c.getInstance()));
    for (TabletServerStatus server : stats.tServerInfo) {",Remove this hard-coded password.
83ec5ed392729a90ab458173dc14f98140654da5,src/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/MutationLogger.java,"        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bit_vector = new BitSet(1);",Move this variable to comply with Java Code Conventions.
0f6858515559dd03811ff189abe50bc74c9cb84a,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/filedata/FileDataIngest.java,"import org.apache.accumulo.core.client.IteratorSetting;
    if (!conn.tableOperations().exists(dataTable)) {
      conn.tableOperations().attachIterator(dataTable, new IteratorSetting(1, ChunkCombiner.class));
    }",Either log or rethrow this exception.
9cc068dd87d479bbc6f1445e9003b02682144751,core/src/test/java/org/apache/accumulo/core/client/lexicoder/UUIDLexicoderTest.java,"/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.client.lexicoder;

import java.util.ArrayList;
import java.util.UUID;

public class UUIDLexicoderTest extends LexicoderTest {
  public void testSortOrder() {
    
    assertSortOrder(new UUIDLexicoder(), UUID.randomUUID(), UUID.randomUUID(), UUID.randomUUID(), UUID.randomUUID(), UUID.randomUUID(), UUID.randomUUID());
    
    ArrayList<UUID> uuids = new ArrayList<UUID>();
    
    for (long ms = -260l; ms < 260l; ms++) {
      for (long ls = -2l; ls < 2; ls++) {
        uuids.add(new UUID(ms, ls));
      }
    }
    
    assertSortOrder(new UUIDLexicoder(), uuids.toArray(new UUID[0]));
  }
}",Rename this generic name to match the regular expression '^[A-Z]$'.
7e63948e273b0c282f006dd2a72c449586d1801f,server/src/main/java/org/apache/accumulo/server/master/state/TabletStateChangeIterator.java,"import org.apache.accumulo.server.master.state.TabletLocationState.BadLocationStateException;
      TabletLocationState tls;
      try {
        tls = MetaDataTableScanner.createTabletLocationState(k, v);
      } catch (BadLocationStateException e) {
        // maybe the master can do something with a tablet with bad/inconsistent state
        return;
      }",Either log or rethrow this exception.
84a508592afc8fde6e035f6fef7f5990752256f2,core/src/test/java/org/apache/accumulo/core/client/mock/MockConnectorTest.java,"import org.apache.accumulo.core.security.tokens.UserPassToken;
    c.securityOperations().createUser(new UserPassToken(""greg"", new byte[0]));
    Connector c = mockInstance.getConnector(new UserPassToken(""root"", """"));
    assertEquals(mockInstance, mockInstance.getConnector(new UserPassToken(""foo"", ""bar"")).getInstance());
    assertEquals(name, mockInstance.getConnector(new UserPassToken(""foo"", ""bar"")).getInstance().getInstanceName());","Immediately return this expression instead of assigning it to the temporary variable ""ret""."
3132b2bf3cbdd088f156fcbc3d1a1c77fc36ae1d,core/src/test/java/org/apache/accumulo/core/data/MutationTest.java,"    Mutation m = new Mutation(""r1"");
    Mutation m = new Mutation(""r1"");
    assertEquals(""r1"", new String(m.getRow()));
  public void testByteArrays() {
    Mutation m = new Mutation(""r1"".getBytes());
    
    m.put(""cf1"".getBytes(), ""cq1"".getBytes(), ""v1"".getBytes());
    m.put(""cf2"".getBytes(), ""cq2"".getBytes(), new ColumnVisibility(""cv2""), ""v2"".getBytes());
    m.put(""cf3"".getBytes(), ""cq3"".getBytes(), 3l, ""v3"".getBytes());
    m.put(""cf4"".getBytes(), ""cq4"".getBytes(), new ColumnVisibility(""cv4""), 4l, ""v4"".getBytes());
    
    m.putDelete(""cf5"".getBytes(), ""cq5"".getBytes());
    m.putDelete(""cf6"".getBytes(), ""cq6"".getBytes(), new ColumnVisibility(""cv6""));
    m.putDelete(""cf7"".getBytes(), ""cq7"".getBytes(), 7l);
    m.putDelete(""cf8"".getBytes(), ""cq8"".getBytes(), new ColumnVisibility(""cv8""), 8l);
    
    assertEquals(8, m.size());
    
    List<ColumnUpdate> updates = m.getUpdates();
    
    assertEquals(8, m.size());
    assertEquals(8, updates.size());
    
    assertEquals(updates.get(0), ""cf1"", ""cq1"", """", 0l, false, false, ""v1"");
    assertEquals(updates.get(1), ""cf2"", ""cq2"", ""cv2"", 0l, false, false, ""v2"");
    assertEquals(updates.get(2), ""cf3"", ""cq3"", """", 3l, true, false, ""v3"");
    assertEquals(updates.get(3), ""cf4"", ""cq4"", ""cv4"", 4l, true, false, ""v4"");
    
    assertEquals(updates.get(4), ""cf5"", ""cq5"", """", 0l, false, true, """");
    assertEquals(updates.get(5), ""cf6"", ""cq6"", ""cv6"", 0l, false, true, """");
    assertEquals(updates.get(6), ""cf7"", ""cq7"", """", 7l, true, true, """");
    assertEquals(updates.get(7), ""cf8"", ""cq8"", ""cv8"", 8l, true, true, """");
  }
","Method has 10 parameters, which is greater than 7 authorized."
dcf10c2ddec15e0bb905524f0951ce515cc480af,src/core/src/main/java/org/apache/accumulo/core/Constants.java,"  public static final String ZUSERS = ""/users"";","Remove the literal ""true"" boolean value."
24809551c8cd178fbce29d169507831fbac9d277,test/src/test/java/org/apache/accumulo/test/MetaSplitTest.java,"    Connector connector = cluster.getConnector(""root"", secret);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
aea4313624e0bbe815c3de2c0a6aa4af4ad82c26,test/src/test/java/org/apache/accumulo/test/functional/ReadWriteIT.java,"  static final int ROWS = 200000;
  public static void ingest(Connector connector, int rows, int cols, int width, int offset) throws Exception {
  public static void ingest(Connector connector, int rows, int cols, int width, int offset, String colf) throws Exception {
  private static void verify(Connector connector, int rows, int cols, int width, int offset) throws Exception {
  private static void verify(Connector connector, int rows, int cols, int width, int offset, String colf) throws Exception {
    interleaveTest(connector);
  }
 
  static void interleaveTest(final Connector connector) throws Exception {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
33a117af6a5f74c4ed0e193b7b54fb1e58506c2b,src/core/src/test/java/org/apache/accumulo/core/client/mapreduce/AccumuloInputFormatTest.java,"   * Test adding iterator options where the keys and values contain both the FIELD_SEPARATOR character (':') and ITERATOR_SEPARATOR (',') characters. There
   * should be no exceptions thrown when trying to parse these types of option entries.
   * 
   * This test makes sure that the expected raw values, as appears in the Job, are equal to what's expected.
   */
  @Test
  public void testIteratorOptionEncoding() throws Throwable {
    String key = ""colon:delimited:key"";
    String value = ""comma,delimited,value"";
    IteratorSetting someSetting = new IteratorSetting(1, ""iterator"", ""Iterator.class"");
    someSetting.addOption(key, value);
    Job job = new Job();
    AccumuloInputFormat.addIterator(job, someSetting);
    
    final String rawConfigOpt = new AccumuloIteratorOption(""iterator"", key, value).toString();
    
    assertEquals(rawConfigOpt, job.getConfiguration().get(""AccumuloInputFormat.iterators.options""));
    
    List<AccumuloIteratorOption> opts = AccumuloInputFormat.getIteratorOptions(job);
    assertEquals(1, opts.size());
    assertEquals(opts.get(0).getKey(), key);
    assertEquals(opts.get(0).getValue(), value);
    
    someSetting.addOption(key + ""2"", value);
    someSetting.setPriority(2);
    someSetting.setName(""it2"");
    AccumuloInputFormat.addIterator(job, someSetting);
    opts = AccumuloInputFormat.getIteratorOptions(job);
    assertEquals(3, opts.size());
    for (AccumuloIteratorOption opt : opts) {
      assertEquals(opt.getKey().substring(0, key.length()), key);
      assertEquals(opt.getValue(), value);
    }
  }
  
  /**",Define and throw a dedicated exception instead of using a generic one.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/examples/src/main/java/org/apache/accumulo/examples/filedata/VisibilityCombiner.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
bd5f4f05975ec1cf0f3cf715d9d0094ababd8e73,test/src/main/java/org/apache/accumulo/test/randomwalk/security/Authenticate.java,"import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;
import org.apache.accumulo.core.security.CredentialHelper;
    authenticate(WalkingSecurity.get(state).getSysUserName(), WalkingSecurity.get(state).getSysToken(), state, props);
  public static void authenticate(String principal, AuthenticationToken token, State state, Properties props) throws Exception {
    Connector conn = state.getInstance().getConnector(principal, token);
    boolean hasPermission = WalkingSecurity.get(state).canAskAboutUser(CredentialHelper.create(principal, token, state.getInstance().getInstanceID()), target);","Immediately return this expression instead of assigning it to the temporary variable ""connector""."
c31bf3aa2092782c65bf23839aac442f44127b39,src/examples/src/main/java/org/apache/accumulo/examples/constraints/AlphaNumKeyConstraint.java,"  
  private static final short NON_ALPHA_NUM_ROW = 1;
  private static final short NON_ALPHA_NUM_COLF = 2;
  private static final short NON_ALPHA_NUM_COLQ = 3;
  
  private boolean isAlphaNum(byte bytes[]) {
    for (byte b : bytes) {
      boolean ok = ((b >= 'a' && b <= 'z') || (b >= 'A' && b <= 'Z') || (b >= '0' && b <= '9'));
      if (!ok) return false;
    return true;
  }
  
  private List<Short> addViolation(List<Short> violations, short violation) {
    if (violations == null) {
      violations = new ArrayList<Short>();
      violations.add(violation);
    } else if (!violations.contains(violation)) {
      violations.add(violation);
    return violations;
  }
  
  @Override
  public List<Short> check(Environment env, Mutation mutation) {
    List<Short> violations = null;
    if (!isAlphaNum(mutation.getRow())) violations = addViolation(violations, NON_ALPHA_NUM_ROW);
    
    Collection<ColumnUpdate> updates = mutation.getUpdates();
    for (ColumnUpdate columnUpdate : updates) {
      if (!isAlphaNum(columnUpdate.getColumnFamily())) violations = addViolation(violations, NON_ALPHA_NUM_COLF);
      
      if (!isAlphaNum(columnUpdate.getColumnQualifier())) violations = addViolation(violations, NON_ALPHA_NUM_COLQ);
    return violations;
  }
  
  @Override
  public String getViolationDescription(short violationCode) {
    
    switch (violationCode) {
      case NON_ALPHA_NUM_ROW:
        return ""Row was not alpha numeric"";
      case NON_ALPHA_NUM_COLF:
        return ""Column family was not alpha numeric"";
      case NON_ALPHA_NUM_COLQ:
        return ""Column qualifier was not alpha numeric"";
    return null;
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bfc44fd328c471d06b480835ba826b706dcf6816,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/CheckBalance.java,"import org.apache.accumulo.core.security.Authorizations;
  
    Scanner scanner = state.getConnector().createScanner(Constants.METADATA_TABLE_NAME, Authorizations.EMPTY);","Remove this unused method parameter ""range""."
24809551c8cd178fbce29d169507831fbac9d277,minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloCluster.java,"  public Process exec(Class<? extends Object> clazz, String... args) throws IOException {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f343540ca4b9e4359c43d6f990e486de960b637c,core/src/main/java/org/apache/accumulo/core/util/shell/commands/InsertCommand.java,"    Mutation m = new Mutation(new Text(cl.getArgs()[0].getBytes(Shell.CHARSET)));
    Text colf = new Text(cl.getArgs()[1].getBytes(Shell.CHARSET));
    Text colq = new Text(cl.getArgs()[2].getBytes(Shell.CHARSET));
    Value val = new Value(cl.getArgs()[3].getBytes(Shell.CHARSET));
        m.put(colf, colq, le, Long.parseLong(cl.getOptionValue(timestampOpt.getOpt())), val);
        m.put(colf, colq, le, val);
      m.put(colf, colq, Long.parseLong(cl.getOptionValue(timestampOpt.getOpt())), val);
      m.put(colf, colq, val);",Either log or rethrow this exception.
c31bf3aa2092782c65bf23839aac442f44127b39,src/trace/src/main/java/cloudtrace/instrument/receivers/SendSpansViaThrift.java,"  
  private static final org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(SendSpansViaThrift.class);
  
  private static final String THRIFT = ""thrift://"";
  
  public SendSpansViaThrift(String host, String service, long millis) {
    super(host, service, millis);
  }
  
  @Override
  protected Client createDestination(String destination) throws Exception {
    try {
      String[] hostAddr = destination.split("":"", 2);
      log.debug(""Connecting to "" + hostAddr[0] + "":"" + hostAddr[1]);
      InetSocketAddress addr = new InetSocketAddress(hostAddr[0], Integer.parseInt(hostAddr[1]));
      Socket sock = new Socket();
      sock.connect(addr);
      TTransport transport = new TSocket(sock);
      TProtocol prot = new TBinaryProtocol(transport);
      return new Client(prot);
    } catch (Exception ex) {
      log.error(ex, ex);
      return null;
  }
  
  @Override
  protected void send(Client client, RemoteSpan s) throws Exception {
    client.span(s);
  }
  
  protected String getSpanKey(Map<String,String> data) {
    String dest = data.get(""dest"");
    if (dest != null && dest.startsWith(THRIFT)) {
      String hostAddress = dest.substring(THRIFT.length());
      String[] hostAddr = hostAddress.split("":"", 2);
      if (hostAddr.length == 2) {
        return hostAddress;
      }
    return null;
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/file/blockfile/cache/CachedBlockQueue.java," * 
 * 
  
  
  
  
   * 
   * 
  
   * 
  
   * 
  
   * ",Replace all tab characters in this file by sequences of white-spaces.
6a5500a5b3f34b26386877e332973e7b926aa4ce,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReaderIterator.java,"import org.apache.accumulo.core.security.thrift.Credential;
  private final Credential credentials;
  public TabletServerBatchReaderIterator(Instance instance, Credential credentials, String table, Authorizations authorizations, ArrayList<Range> ranges,
      ResultReceiver receiver, List<Column> columns, Credential credentials, ScannerOptions options, Authorizations authorizations, AccumuloConfiguration conf)
      ResultReceiver receiver, List<Column> columns, Credential credentials, ScannerOptions options, Authorizations authorizations, AccumuloConfiguration conf,",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/test/WrongTabletTest.java,"import org.apache.accumulo.server.cli.ClientOpts;
import com.beust.jcommander.Parameter;

  
  static class Opts extends ClientOpts {
    @Parameter(names=""--location"", required=true)
    String location;
  }
    Opts opts = new Opts();
    opts.parseArgs(WrongTabletTest.class.getName(), args);
    
    ServerConfiguration conf = new ServerConfiguration(opts.getInstance());
      TabletClientService.Iface client = ThriftUtil.getTServerClient(opts.location, conf.getConfiguration());
      client.update(Tracer.traceInfo(), opts.getAuthInfo(), new KeyExtent(new Text(""!!""), null, new Text(""row_0003750000"")).toThrift(), mutation.toThrift());","Remove this call to ""exit"" or ensure it is really required."
93773813e5839ac9ffb4f5a2b2b70bcedb106286,server/src/test/java/org/apache/accumulo/server/gc/TestConfirmDeletes.java,"import org.apache.accumulo.core.util.MetadataTable;
    Scanner scanner = instance.getConnector(credential.getPrincipal(), CredentialHelper.extractToken(credential)).createScanner(MetadataTable.NAME,
    BatchWriter bw = conn.createBatchWriter(MetadataTable.NAME, new BatchWriterConfig());","Use ""Long.toString"" instead."
c670f27bb90f011a3d0609ebe7831d555e0ab76a,server/src/main/java/org/apache/accumulo/server/monitor/Monitor.java,"    if (total.minors == null)
      total.minors = new Compacting();
    if (total.majors == null)
      total.majors = new Compacting();
    if (more.minors != null) {
      total.minors.running += more.minors.running;
      total.minors.queued += more.minors.queued;
    if (more.majors != null) {
      total.majors.running += more.majors.running;
      total.majors.queued += more.majors.queued;
    summary.majors = new Compacting();
    summary.minors = new Compacting();
        
          majorCompactions += summary.majors.running;
          minorCompactions += summary.minors.running;",Refactor the code to remove this label and the need for it.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/FormatterCommand.java,"    if (cl.hasOption(resetOption.getOpt()))
      shellState.setFormatterClass(DefaultFormatter.class);
    else if (cl.hasOption(formatterClassOption.getOpt()))
      shellState.setFormatterClass(AccumuloClassLoader.loadClass(cl.getOptionValue(formatterClassOption.getOpt()), Formatter.class));
    else if (cl.hasOption(listClassOption.getOpt()))
      shellState.getReader().printString(shellState.getFormatterClass().getName() + ""\n"");","Remove this call to ""exit"" or ensure it is really required."
446a37a9795f2df7adc841154ca05add79cf286e,server/src/main/java/org/apache/accumulo/server/master/tableOps/ExportTable.java,"import org.apache.accumulo.core.metadata.MetadataTable;
import org.apache.accumulo.core.metadata.schema.MetadataSchema.TabletsSection;
import org.apache.accumulo.core.metadata.schema.MetadataSchema.TabletsSection.DataFileColumnFamily;
import org.apache.accumulo.core.metadata.schema.MetadataSchema.TabletsSection.LogColumnFamily;
    metaScanner.fetchColumnFamily(TabletsSection.CurrentLocationColumnFamily.NAME);
    metaScanner.fetchColumnFamily(TabletsSection.FutureLocationColumnFamily.NAME);
    metaScanner.fetchColumnFamily(LogColumnFamily.NAME);
  private static Map<String,String> exportMetadata(VolumeManager fs, Connector conn, String tableID, ZipOutputStream zipOut, DataOutputStream dataOut)
      throws IOException, TableNotFoundException {
    metaScanner.fetchColumnFamily(DataFileColumnFamily.NAME);
    TabletsSection.TabletColumnFamily.PREV_ROW_COLUMN.fetch(metaScanner);
    TabletsSection.ServerColumnFamily.TIME_COLUMN.fetch(metaScanner);
      if (entry.getKey().getColumnFamily().equals(DataFileColumnFamily.NAME)) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
af59f0ad10af71de2f7de9880a1dbe1595956cc5,server/src/main/java/org/apache/accumulo/server/security/handler/Authorizor.java,import org.apache.accumulo.core.security.thrift.ThriftSecurityException;,1 duplicated blocks of code must be removed.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloInputFormat.java,"package org.apache.accumulo.core.client.mapreduce;

import java.io.IOException;
import java.util.Map.Entry;

import org.apache.accumulo.core.data.Key;
import org.apache.accumulo.core.data.Value;
import org.apache.accumulo.core.util.format.DefaultFormatter;
import org.apache.hadoop.mapreduce.InputSplit;
import org.apache.hadoop.mapreduce.RecordReader;
import org.apache.hadoop.mapreduce.TaskAttemptContext;


/**
 * This class allows MapReduce jobs to use Accumulo as the source of data. This
 * input format provides keys and values of type Key and Value to the Map() and
 * Reduce() functions.
 * 
 * The user must specify the following via static methods:
 * 
 * <ul>
 * <li>AccumuloInputFormat.setInputTableInfo(job, username, password, table,
 * auths)
 * <li>AccumuloInputFormat.setZooKeeperInstance(job, instanceName, hosts)
 * </ul>
 * 
 * Other static methods are optional
 */

public class AccumuloInputFormat extends InputFormatBase<Key,Value> {
	@Override
	public RecordReader<Key, Value> createRecordReader(InputSplit split,
			TaskAttemptContext context) throws IOException,
			InterruptedException {
		log.setLevel(getLogLevel(context));
		return new RecordReaderBase<Key,Value>(){
			@Override
			public boolean nextKeyValue() throws IOException, InterruptedException {
				if (scannerIterator.hasNext()) {
					++numKeysRead;
					Entry<Key, Value> entry = scannerIterator.next();
					currentK = currentKey = entry.getKey();
					currentV = currentValue = entry.getValue();
					if (log.isTraceEnabled())
						log.trace(""Processing key/value pair: "" + DefaultFormatter.formatEntry(entry, true));
					return true;
				}
				return false;
			}		
		};
	}
}",Return empty string instead.
3dbd87897442d632a09660f5bb5667c28e4bf9c4,core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TableOperation.java, * Autogenerated by Thrift Compiler (0.9.0),Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,contrib/cloudtrace-0.2.0/src/main/java/cloudtrace/instrument/TraceRunnable.java,"package cloudtrace.instrument;

/**
 * Wrap a Runnable with a Span that survives a change in threads.
 * 
 */
public class TraceRunnable implements Runnable, Comparable<TraceRunnable> {
    
    private final Span parent;
    private final Runnable runnable;

    public TraceRunnable(Runnable runnable) { 
        this(Trace.currentTrace(), runnable); 
    }
        
    public TraceRunnable(Span parent, Runnable runnable) {
        this.parent = parent;
        this.runnable = runnable;
    }

    @Override
    public void run() {
        if (parent != null) {
            Span chunk = Trace.startThread(parent, Thread.currentThread().getName());
            try {
                runnable.run();
            } finally {
                Trace.endThread(chunk);
            }
        } else {
            runnable.run();
        }
    }

	@SuppressWarnings({ ""rawtypes"", ""unchecked"" })
    @Override
	public int compareTo(TraceRunnable o) {
		return ((Comparable)this.runnable).compareTo(o.runnable);
	}
}",Return empty string instead.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/trace/src/main/java/cloudtrace/instrument/receivers/SpanReceiver.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
1d138a73ad757c12b3d30aa1a6029b63cc3eaa66,core/src/main/java/org/apache/accumulo/core/client/mapred/InputFormatBase.java,import org.apache.accumulo.core.security.tokens.SecurityToken;,Replace all tab characters in this file by sequences of white-spaces.
5e72fc1fc41b730445bcda7fe9f75a2aa5427cb0,src/server/src/main/java/org/apache/accumulo/server/test/functional/ServerSideErrorTest.java,"    Combiner.setColumns(is, Collections.singletonList(new IteratorSetting.Column(""acf"")));","Remove this unused method parameter ""scopes""."
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,server/src/main/java/org/apache/accumulo/server/security/SecurityConstants.java,"import org.apache.accumulo.core.client.AccumuloSecurityException;
import org.apache.accumulo.core.security.tokens.SecurityToken;
import org.apache.log4j.Logger;
  static Logger log = Logger.getLogger(SecurityConstants.class);
  private static final SecurityToken systemToken = new UserPassToken(SYSTEM_USERNAME, SYSTEM_PASSWORD);
    try {
      return systemCredentials.toThrift();
    } catch (AccumuloSecurityException e) {
      log.error(""This shouldn't be happening. This is very bad."");
      log.error(e);
      throw new RuntimeException(e);
    }",Either log or rethrow this exception.
9476b8775f48dfcbc67b06ccc07719e09d7469fe,core/src/main/java/org/apache/accumulo/core/util/TableDiskUsage.java,"    HashSet<String> emptyTableIds = new HashSet<String>();
      if(!mdScanner.iterator().hasNext()) {
        emptyTableIds.add(tableId);
      }
      

    if(!emptyTableIds.isEmpty()) {
      TreeSet<String> emptyTables = new TreeSet<String>();
      for (String tableId : emptyTableIds) {
        emptyTables.add(reverseTableIdMap.get(tableId));
      }
      usage.put(emptyTables, 0L);
    }",1 duplicated blocks of code must be removed.
9e2ebc51b9cf1b2e58dac56ce49caf916a1cfeec,src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingArrayCombiner.java,"/**
 * A Combiner that interprets Values as arrays of Longs and returns an array of element-wise sums.
 */",1 duplicated blocks of code must be removed.
9c355f10d6dd3099d6d25578ada1779ce05ff04f,core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java,"      throw new TableNotFoundException(null, tableName, ""The table was not found"");
    
        FileSKVIterator importIterator = FileOperations.getInstance().openReader(importStatus.getPath().toString(), true, fs, fs.getConf(),
            AccumuloConfiguration.getDefaultConfiguration());
            mutation.put(key.getColumnFamily(), key.getColumnQualifier(), new ColumnVisibility(key.getColumnVisibilityData().toArray()), key.getTimestamp(),
                value);
            mutation.putDelete(key.getColumnFamily(), key.getColumnQualifier(), new ColumnVisibility(key.getColumnVisibilityData().toArray()),
          failureWriter = fs.create(failurePath.suffix(""/"" + importStatus.getPath().getName()));
  }
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
aa7110234e15a017bb1dbc99b4351f0bf06cc73b,minicluster/src/test/java/org/apache/accumulo/minicluster/MiniAccumuloClusterGCTest.java,"  private static File testDir = new File(System.getProperty(""user.dir"") + ""/target/"" + MiniAccumuloClusterGCTest.class.getName());
    FileUtils.deleteQuietly(testDir);
    testDir.mkdir();
    macConfig = new MiniAccumuloConfig(testDir, passwd);

    File accumuloDir = new File(testDir, ""accumulo"");

",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f67d4cefde90dbd5f3cb1a240bfaf4776fb88a60,server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import org.apache.accumulo.server.master.tableOps.CompactRange.CompactionIterators;
      CompactionIterators iters = new CompactionIterators();

      if (tokens.length > 1) {
        ByteArrayInputStream bais = new ByteArrayInputStream(hex.decode(tokens[1].split(""="")[1].getBytes()));
        DataInputStream dis = new DataInputStream(bais);
        
        try {
          iters.readFields(dis);
        } catch (IOException e) {
          throw new RuntimeException(e);
        }
        
        KeyExtent ke = new KeyExtent(extent.getTableId(), iters.getEndRow(), iters.getStartRow());
        
        if (!ke.overlaps(extent)) {
          // only use iterators if compaction range overlaps
          iters = new CompactionIterators();
        }

      return new Pair<Long,List<IteratorSetting>>(compactID, iters.getIterators());
              + datafileManager.abs2rel(new Path(compactTmpName)) + ""  "" + compactionIterators);","Introduce a new variable instead of reusing the parameter ""iterators""."
dd13a9eeb16e8a72de90c60912549fa84536becb,src/server/src/main/java/org/apache/accumulo/server/master/tableOps/BulkImport.java,        UtilWaitThread.sleep(100);,Define and throw a dedicated exception instead of using a generic one.
8811859f537f74b6cdc0e5b4d6ffddae46e9ef39,core/src/main/java/org/apache/accumulo/core/Constants.java,"  public static final String ZTABLE_COMPACT_CANCEL_ID = ""/compact-cancel-id"";",Rename this package name to match the regular expression '^[a-z]+(\.[a-z][a-z0-9]*)*$'.
0811c7958ecc1a9a2c8f80702273856f1cd2eab8,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/trace/ListType.java,import org.apache.accumulo.cloudtrace.thrift.RemoteSpan;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloInputFormat.java,"  @Override
  public RecordReader<Key,Value> createRecordReader(InputSplit split, TaskAttemptContext context) throws IOException, InterruptedException {
    log.setLevel(getLogLevel(context));
    return new RecordReaderBase<Key,Value>() {
      @Override
      public boolean nextKeyValue() throws IOException, InterruptedException {
        if (scannerIterator.hasNext()) {
          ++numKeysRead;
          Entry<Key,Value> entry = scannerIterator.next();
          currentK = currentKey = entry.getKey();
          currentV = currentValue = entry.getValue();
          if (log.isTraceEnabled()) log.trace(""Processing key/value pair: "" + DefaultFormatter.formatEntry(entry, true));
          return true;
        }
        return false;
      }
    };
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
3c886c912a1c40901fec50a6219f988541bd3d1f,core/src/test/java/org/apache/accumulo/core/client/IteratorSettingTest.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
6a5500a5b3f34b26386877e332973e7b926aa4ce,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/CreateUser.java,"import org.apache.accumulo.core.security.thrift.tokens.PasswordToken;
      conn.securityOperations().createUser(userName, new PasswordToken().setPassword((userName + ""pass"").getBytes()));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
322e0359ac5d35d3774c47507aed07760397513a,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/iterator/AbstractEvaluatingIterator.java,"   * Provides the ability to skip this key and all of the following ones that match using the comparator.
   * @return true if the key should be acted upon, otherwise false.",1 duplicated blocks of code must be removed.
51610c1fcd8726de75be7e4a799c8eafce51a8bf,server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousBatchWalker.java,"    Scanner scanner = conn.createScanner(opts.getTableName(), auths);
    BatchScanner bs = conn.createBatchScanner(opts.getTableName(), auths, opts.scanThreads);",Reorder the modifiers to comply with the Java Language Specification.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/security/AlterTable.java,"  
  @Override
  public void visit(State state, Properties props) throws Exception {
    Connector conn = SecurityHelper.getSystemConnector(state);
    String tableName = SecurityHelper.getTableName(state);
    
    boolean exists = SecurityHelper.getTableExists(state);
    boolean hasPermission = false;
    if (SecurityHelper.getSysPerm(state, SecurityHelper.getSysUserName(state), SystemPermission.ALTER_TABLE)
        || SecurityHelper.getTabPerm(state, SecurityHelper.getSysUserName(state), TablePermission.ALTER_TABLE)) hasPermission = true;
    String newTableName = String.format(""security_%s_%s_%d"", InetAddress.getLocalHost().getHostName().replaceAll(""[-.]"", ""_""), state.getPid(),
        System.currentTimeMillis());
    renameTable(conn, state, tableName, newTableName, hasPermission, exists);
  }
  
  public static void renameTable(Connector conn, State state, String oldName, String newName, boolean hasPermission, boolean tableExists)
      throws AccumuloSecurityException, AccumuloException, TableExistsException {
    try {
      conn.tableOperations().rename(oldName, newName);
    } catch (AccumuloSecurityException ae) {
      if (ae.getErrorCode().equals(SecurityErrorCode.PERMISSION_DENIED)) {
        if (hasPermission) throw new AccumuloException(""Got a security exception when I should have had permission."", ae);
        else return;
      }
      throw new AccumuloException(""Got unexpected ae error code"", ae);
    } catch (TableNotFoundException tnfe) {
      if (tableExists) throw new TableExistsException(null, oldName, ""Got a TableNotFoundException but it should exist"", tnfe);
      else return;
    SecurityHelper.setTableName(state, newName);
    if (!hasPermission) throw new AccumuloException(""Didn't get Security Exception when we should have"");
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
4567e03696904bf5905da7b02f5892a6d2c7b16c,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/ArticleExtractor.java,"import org.apache.hadoop.io.Text;
      Text foo = new Text();
      foo.readFields(in);
      title = foo.toString();
      foo.readFields(in);
      comments = foo.toString();
      foo.readFields(in);
      text = foo.toString();
      (new Text(title)).write(out);
      (new Text(comments)).write(out);
      (new Text(text)).write(out);
  private static XMLInputFactory xmlif = XMLInputFactory.newInstance();

  static
  {
  }
  
  public Article extract(Reader reader) {",Move this variable to comply with Java Code Conventions.
55bb75e2b594140e5528407d5b74de1591d67341,src/server/src/main/java/org/apache/accumulo/server/master/state/MetaDataTableScanner.java,import org.apache.accumulo.core.iterators.user.WholeRowIterator;,"Remove the literal ""false"" boolean value."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/iterators/system/ColumnFamilySkippingIterator.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
f23e08147fcc05637c69996475e92db89e323a68,server/src/main/java/org/apache/accumulo/server/zookeeper/DistributedWorkQueue.java,    SimpleTimer.getInstance().schedule(new Runnable() {,Either log or rethrow this exception.
3dbd87897442d632a09660f5bb5667c28e4bf9c4,core/src/main/java/org/apache/accumulo/core/client/impl/BatchWriterImpl.java,"    ArgumentChecker.notNull(instance, credentials, table, config);",Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'.
b89ba1894dabf562a40c417499e01b656085c297,src/core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,"        new ImportDirectoryCommand(), new InfoCommand(), new InsertCommand(), new ListIterCommand(), new ListScansCommand(), new MaxRowCommand(),
        new MergeCommand(), new NoTableCommand(), new OfflineCommand(), new OnlineCommand(), new PasswdCommand(), new QuestionCommand(), new QuitCommand(),
        new RenameTableCommand(), new RevokeCommand(), new ScanCommand(), new SetAuthsCommand(), new SetGroupsCommand(), new SetIterCommand(),
        new SetScanIterCommand(), new SleepCommand(), new SystemPermissionsCommand(), new TableCommand(), new TablePermissionsCommand(), new TablesCommand(),
        new TraceCommand(), new UserCommand(), new UserPermissionsCommand(), new UsersCommand(), new WhoAmICommand(),};",1 duplicated blocks of code must be removed.
766cb2ca5c0e8eb723a163cf425257bd7bc7289f,src/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/MutationLogger.java,"        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bit_vector = new BitSet(1);",Either log or rethrow this exception.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/iterators/system/ColumnQualifierFilter.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
10b44e79544b5f16cd747de7926af23739bf5726,server/src/test/java/org/apache/accumulo/server/gc/TestConfirmDeletes.java,"import org.apache.accumulo.server.gc.SimpleGarbageCollector.Opts;
    SimpleGarbageCollector gc = new SimpleGarbageCollector(new Opts());","Remove this unused method parameter ""threadName""."
1f33efbbd0058dcc6a4b9e05fa0b0355f0db9ef0,server/src/main/java/org/apache/accumulo/server/monitor/servlets/VisServlet.java,"    cfg.url = urlsb.toString();
    sb.append(""<script src='web/vis.js' type='text/javascript'></script>"");",Replace all tab characters in this file by sequences of white-spaces.
f423648a208cbcc2a3dd7c82ec427cc6375c1bf8,src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java,"import java.util.EnumSet;
import org.apache.accumulo.core.iterators.IteratorUtil.IteratorScope;
   * @param scopes
   *          the scopes of the iterator
  public void removeIterator(String tableName, String name, EnumSet<IteratorScope> scopes) throws AccumuloSecurityException, AccumuloException,
      TableNotFoundException;
   * Get the settings for an iterator.
   * @param scope
   *          the scope of the iterator
  public IteratorSetting getIteratorSetting(String tableName, String name, IteratorScope scope) throws AccumuloSecurityException, AccumuloException,
      TableNotFoundException;
  public Set<String> listIterators(String tableName) throws AccumuloSecurityException, AccumuloException, TableNotFoundException;","Remove this unused method parameter ""hasStart""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/util/Halt.java,"      if (runnable != null)
        runnable.run();","Remove this call to ""exit"" or ensure it is really required."
ff226a78995057518ac354e671d90f1bb4c30884,server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"      try {
        synchronized (Tablet.this) {
          if (blockNewScans) {
            if (reservationsBlocked)
              throw new IllegalStateException();
            
            reservationsBlocked = true;
          }
          for (FileRef path : pathsToWaitFor) {
            while (fileScanReferenceCounts.get(path) > 0 && System.currentTimeMillis() - startTime < maxWaitTime) {
              try {
                Tablet.this.wait(100);
              } catch (InterruptedException e) {
                log.warn(e, e);
              }
          
          for (FileRef path : pathsToWaitFor) {
            if (fileScanReferenceCounts.get(path) > 0)
              inUse.add(path);
          }
          
          if (blockNewScans) {
            reservationsBlocked = false;
            Tablet.this.notifyAll();
          }
          
      } finally {
        waitForScans.stop();
      CompactionStats stats;
      try {
        count = memTable.getNumEntries();
        
        DataFileValue dfv = null;
        if (mergeFile != null)
          dfv = datafileManager.getDatafileSizes().get(mergeFile);
        
        MinorCompactor compactor = new MinorCompactor(conf, fs, memTable, mergeFile, dfv, tmpDatafile, acuTableConf, extent, mincReason);
        stats = compactor.call();
      } finally {
        span.stop();
      }
      try {
        datafileManager.bringMinorCompactionOnline(tmpDatafile, newDatafile, mergeFile, new DataFileValue(stats.getFileSize(), stats.getEntriesWritten()),
            commitSession, flushId);
      } finally {
        span.stop();
      }
    try {
      synchronized (this) {
        // check that compaction is still needed - defer to splitting
        majorCompactionQueued.remove(reason);
        
        if (closing || closed || !needsMajorCompaction(reason) || majorCompactionInProgress || needsSplit()) {
          return null;
        }
        
        majorCompactionInProgress = true;",Define and throw a dedicated exception instead of using a generic one.
057b8d6cb0ccbf472067a755d76eba7ee2e3fd71,test/src/test/java/org/apache/accumulo/test/functional/NativeMapIT.java,"public class NativeMapIT extends SimpleMacIT {
    assertEquals(0, exec(NativeMapTest.class).waitFor());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
604382ebc3be76dac9eb18bb5a8485bfd2aede07,server/src/main/java/org/apache/accumulo/server/monitor/servlets/BasicServlet.java,"  private static String bannerText;
  private static String bannerColor;
  private static String bannerBackground;","Remove this unused method parameter ""tservers""."
acf5aea33d2799a5d8eb2400069b158beeeb4933,contrib/accumulo_sample/query/src/main/java/iterator/AbstractEvaluatingIterator.java,"        log.debug(""Iterator.hasTop() == false"");",Define and throw a dedicated exception instead of using a generic one.
75fc470e543790906017f772c56ee4f8cf241e29,core/src/main/java/org/apache/accumulo/core/client/impl/TabletType.java,"    if (ke.isRootTablet())
    if (ke.isMeta())",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2496efb93eacc4bd6695cdeaeb4d9acd2917bd91,server/src/main/java/org/apache/accumulo/server/security/AuditedSecurityOperation.java,"  
  public static synchronized SecurityOperation getInstance(String instanceId, boolean initialize) {
      instance = new AuditedSecurityOperation(getAuthorizor(instanceId, initialize), getAuthenticator(instanceId, initialize), getPermHandler(instanceId,
          initialize), instanceId);
  
      log.debug(ex);
   throw ex;
      log.debug(ex);
    
    try {
      return getUserAuthorizations(credentials, credentials.getPrincipal());
    } catch (ThriftSecurityException ex) {
      log.debug(ex);
      throw ex;
    }
      log.debug(ex);
    throw ex;
      log.debug(ex);
  throw ex;
      log.debug(ex);
  throw ex;
      log.debug(ex);
  throw ex;
      log.debug(ex);
      log.debug(ex);
      log.debug(ex);
      log.debug(ex);
      log.debug(ex);
      log.debug(ex);
      log.debug(ex);
      log.debug(ex);
  throw ex;
  
    log.info(""Initialized root user with username: "" + token.getPrincipal() + "" at the request of user "" + credentials.getPrincipal());","Remove this call to ""exit"" or ensure it is really required."
31990b212bcc68b9658ee33a54a9541e028a6209,server/src/main/java/org/apache/accumulo/server/security/AuditedSecurityOperation.java,"/*
import org.apache.accumulo.core.security.tokens.SecurityToken;
  
  @Override
      throw ex;
  @Override
  @Override
  @Override
      throw ex;
  @Override
      throw ex;
  @Override
      throw ex;
  @Override
      throw ex;
  @Override
  @Override
  @Override
  @Override
  @Override
  @Override
  @Override
  @Override
      throw ex;",Remove this empty statement.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java,"  @Override
  public Long typedReduce(Key key, Iterator<Long> iter) {
    long sum = 0;
    while (iter.hasNext()) {
      sum = safeAdd(sum, iter.next());
    return sum;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
31990b212bcc68b9658ee33a54a9541e028a6209,server/src/main/java/org/apache/accumulo/server/security/handler/ZKSecurityTool.java,"/*
 * model more easily, as we only need to check to make sure zooCache is cleared when things are written to ZooKeeper in methods that might use it. These won't,
 * and so don't need to be checked.
  
}",Remove this empty statement.
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/normalizer/NoOpNormalizer.java,package org.apache.accumulo.examples.wikisearch.normalizer;,2 duplicated blocks of code must be removed.
a943f323b6ef9a614edee55c075eb63567b5c80a,server/src/main/java/org/apache/accumulo/server/master/TabletGroupWatcher.java,"import org.apache.accumulo.server.security.SystemCredentials;
            MetadataTableUtil.addDeleteEntries(extent, datafiles, SystemCredentials.get().getAsThrift());
            MetadataTableUtil.addDeleteEntries(extent, datafiles, SystemCredentials.get().getAsThrift());
      MetadataTableUtil.addDeleteEntries(extent, datafiles, SystemCredentials.get().getAsThrift());
        MetadataTableUtil.addTablet(new KeyExtent(extent.getTableId(), null, extent.getPrevEndRow()), Constants.DEFAULT_TABLET_LOCATION, SystemCredentials
            .get().getAsThrift(), timeType, this.master.masterLock);",Move this constructor to comply with Java Code Conventions.
65b5a3a3708dc96e09e95c00a0fbe72e60edf3ad,core/src/main/java/org/apache/accumulo/core/conf/SiteConfiguration.java,"  
  /**
   * method here to support testing, do not call
   */
  public synchronized void clearAndNull() {
    if (xmlConfig != null) {
      xmlConfig.clear();
      xmlConfig = null;
    }
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/StringMax.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/util/TabletOperations.java,"package org.apache.accumulo.server.util;

import java.io.IOException;

import org.apache.accumulo.core.Constants;
import org.apache.accumulo.core.util.CachedConfiguration;
import org.apache.accumulo.core.util.UtilWaitThread;
import org.apache.accumulo.server.tabletserver.UniqueNameAllocator;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.Text;
import org.apache.log4j.Logger;


public class TabletOperations {

	private static final Logger log = Logger.getLogger(TabletOperations.class);
	
	public static String createTabletDirectory(FileSystem fs, String tableDir, Text endRow){
		String lowDirectory;
		
		UniqueNameAllocator namer = UniqueNameAllocator.getInstance();
		
		while(true){
			try {
				if(endRow == null){
					lowDirectory = Constants.DEFAULT_TABLET_LOCATION;
					Path lowDirectoryPath = new Path(tableDir + lowDirectory);
					if(fs.exists(lowDirectoryPath) || fs.mkdirs(lowDirectoryPath))
						return lowDirectory;
					log.warn(""Failed to create ""+lowDirectoryPath+"" for unknown reason"");
				}else{
					lowDirectory = ""/t-""+namer.getNextName();
					Path lowDirectoryPath = new Path(tableDir + lowDirectory);
					if(fs.exists(lowDirectoryPath))
						throw new IllegalStateException(""Dir exist when it should not ""+lowDirectoryPath);
					if(fs.mkdirs(lowDirectoryPath))
						return lowDirectory;		
				}
			} catch (IOException e) {
				log.warn(e);
			}
			
		
			log.warn(""Failed to create dir for tablet in table ""+tableDir+"" will retry ..."");
			UtilWaitThread.sleep(3000);

		}	
	}

	public static String createTabletDirectory(String tableDir, Text endRow) {
		while(true){
			try {
				FileSystem fs = FileSystem.get(CachedConfiguration.getInstance());
				return createTabletDirectory(fs, tableDir, endRow);
			} catch (IOException e) {
				log.warn(e);
			}
			UtilWaitThread.sleep(3000);
		}
	}
}",Return empty string instead.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/client/impl/TabletLocator.java,"      if (o instanceof LocatorKey)
        return equals((LocatorKey) o);
      if (result == 0)
        result = tablet_location.compareTo(o.tablet_location);","Remove this call to ""exit"" or ensure it is really required."
ee3a264e704c17de90c186065f50a0775ce4ad10,src/server/src/main/java/org/apache/accumulo/server/gc/GarbageCollectWriteAheadLogs.java,"import org.apache.accumulo.server.zookeeper.IZooReaderWriter;
    IZooReaderWriter zk = ZooReaderWriter.getInstance();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bd5f4f05975ec1cf0f3cf715d9d0094ababd8e73,test/src/main/java/org/apache/accumulo/test/randomwalk/security/CreateUser.java,"    Connector conn = state.getInstance().getConnector(WalkingSecurity.get(state).getSysUserName(), WalkingSecurity.get(state).getSysToken());","Immediately return this expression instead of assigning it to the temporary variable ""connector""."
f934fe81eeb97d679335952a755994d803575446,src/core/src/test/java/org/apache/accumulo/core/iterators/DefaultIteratorEnvironment.java,"import org.apache.accumulo.core.iterators.system.MapFileIterator;
  public SortedKeyValueIterator<Key,Value> reserveMapFileReader(String mapFileName) throws IOException {
    return new MapFileIterator(this.conf, fs, mapFileName, conf);","Remove this unused method parameter ""acuconf""."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/file/blockfile/cache/BlockCache.java,"/**
 * Copyright 2009 The Apache Software Foundation
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.file.blockfile.cache;


/**
 * Block cache interface.
 * TODO: Add filename or hash of filename to block cache key.
 */
public interface BlockCache {
  /**
   * Add block to cache.
   * @param blockName Zero-based file block number.
   * @param buf The block contents wrapped in a ByteBuffer.
   * @param inMemory Whether block should be treated as in-memory
   */
  public void cacheBlock(String blockName, byte buf[], boolean inMemory);
  
  /**
   * Add block to cache (defaults to not in-memory).
   * @param blockName Zero-based file block number.
   * @param buf The block contents wrapped in a ByteBuffer.
   */
  public void cacheBlock(String blockName, byte buf[]);
  
  /**
   * Fetch block from cache.
   * @param blockName Block number to fetch.
   * @return Block or null if block is not in the cache.
   */
  public byte[] getBlock(String blockName);

  /**
   * Shutdown the cache.
   */
  public void shutdown();
}",Return empty string instead.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,core/src/main/java/org/apache/accumulo/core/client/mapreduce/lib/util/InputConfigurator.java,"import java.nio.ByteBuffer;
import org.apache.accumulo.core.security.thrift.Credentials;
  public static TabletLocator getTabletLocator(Class<?> implementingClass, Configuration conf) throws TableNotFoundException {
    String username = getPrincipal(implementingClass, conf);
    byte[] password = getToken(implementingClass, conf);
    return TabletLocator.getInstance(instance, new Credentials(username, ByteBuffer.wrap(password), instance.getInstanceID()),
        new Text(Tables.getTableId(instance, tableName)));
      Connector c = getInstance(implementingClass, conf).getConnector(getPrincipal(implementingClass, conf), getToken(implementingClass, conf));
      if (!c.securityOperations().authenticateUser(getPrincipal(implementingClass, conf), getToken(implementingClass, conf)))
      if (!c.securityOperations().hasTablePermission(getPrincipal(implementingClass, conf), getInputTableName(implementingClass, conf), TablePermission.READ))",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/InfoCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/image/TableOp.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
fc943cc3f2ec3f35fcd3a940b0e747aefa3b667b,core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloOutputFormat.java,"  private static final String PASSWORD = PREFIX + "".password"";
    conf.set(PASSWORD, new String(Base64.encodeBase64(passwd)));
   * WARNING: The password is stored in the Configuration and shared with all MapReduce tasks; It is BASE64 encoded to provide a charset safe conversion to a
   * string, and is not intended to be secure.
  protected static byte[] getPassword(Configuration conf) {
    return Base64.decodeBase64(conf.get(PASSWORD, """").getBytes());",1 duplicated blocks of code must be removed.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/util/Pair.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    A first;
    B second;
    
    public Pair(A f, B s) {
        this.first = f;
        this.second = s;
    }
    
    private int hashCode(Object o) {
        if (o == null) return 0;
        return o.hashCode();
    }
    
    @Override
    public int hashCode() {
        return hashCode(first) + hashCode(second);
    }
    
    private boolean equals(Object o1, Object o2) {
        if (o1 == null || o2 == null) return o1 == o2;
        
        return o1.equals(o2);
    }
    
    @Override
    public boolean equals(Object o) {
        if (o instanceof Pair<?,?>) {
            Pair<?,?> op = (Pair<?,?>) o;
            return equals(first, op.first) && equals(second, op.second);
        }
        return false;
    }
    
    public A getFirst() {
        return first;
    }
    
    public B getSecond() {
        return second;
    }
    
    public String toString() {
        return ""("" + first + "","" + second + "")"";
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
0987628299165740230de132f85b3c63789ad584,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"  protected static void ensureHdfsSyncIsEnabled(FileSystem fs) {
            String msg = ""Accumulo requires that dfs.support.append to true. "" + ticketMessage;
            log.fatal(msg);
            throw new RuntimeException(msg);
        log.warn(""Error while checking for "" + DFS_SUPPORT_APPEND + "". The user should ensure that Hadoop is configured to properly supports append and sync. ""
            + ticketMessage, e);
        String msg = ""Accumulo requires that "" + DFS_SUPPORT_APPEND + "" and "" + DFS_DURABLE_SYNC + "" not be configured as false. "" + ticketMessage;
        log.fatal(msg);
        throw new RuntimeException(msg);",Define and throw a dedicated exception instead of using a generic one.
ff1e582020a1437e9c520ef3a1af99477462d803,core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteRowsCommand.java,"    return ""deletes a range of rows in a table.  Note that rows matching the start row ARE NOT deleted, but rows matching the end row ARE deleted."";
    tableOpt = new Option(Shell.tableOption, ""tableName"", true, ""table to delete a row range from"");",2 duplicated blocks of code must be removed.
cb6bcc517b27df03106d7e5eca344ed45699e31f,src/core/src/main/java/org/apache/accumulo/core/gc/thrift/GCMonitorService.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
527a100ef5de9c51fb17b0b340f036ee4cd98590,src/core/src/main/java/org/apache/accumulo/core/data/thrift/MapFileInfo.java,"@SuppressWarnings(""all"") public class MapFileInfo implements org.apache.thrift.TBase<MapFileInfo, MapFileInfo._Fields>, java.io.Serializable, Cloneable {",13 duplicated blocks of code must be removed.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/upgrade/ZooKeeperUpgrade.java,"          if (tableIds.containsKey(table))
            move(zoo, ZKUserPath + ""/"" + user + ""/Tables.old/"" + table, ZKUserPath + ""/"" + user + ""/Tables/"" + tableIds.get(table));
          else
            System.err.println(""WARN : User "" + user + "" has permissions for non-existant table "" + table);
      if (!tableName.equals(Constants.METADATA_TABLE_NAME))
        tableId = tii.next();
      else
        tableId = Constants.METADATA_TABLE_ID;
      if (zoo.exists(oldConfDir))
        if (tableId.equals(Constants.METADATA_TABLE_ID))
          zoo.recursiveDelete(oldConfDir, NodeMissingPolicy.SKIP);
        else
          zoo.recursiveCopyPersistent(oldConfDir, zkInstanceRoot + Constants.ZTABLES + ""/"" + tableId + Constants.ZTABLE_CONF, NodeExistsPolicy.OVERWRITE);
      if (!tableId.equals(Constants.METADATA_TABLE_ID))
        validateConfig(tableId, zoo);
      else
        initMetadataConfig();
    if (zoo.exists(zkInstanceRoot + OLD_TABLE_CONF_DIR))
      tableNames.addAll(zoo.getChildren(zkInstanceRoot + OLD_TABLE_CONF_DIR));","Remove this call to ""exit"" or ensure it is really required."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/FlushCommand.java,"    if (cl.hasOption(optStartRow.getOpt()))
      startRow = new Text(cl.getOptionValue(optStartRow.getOpt()));
    if (cl.hasOption(optEndRow.getOpt()))
      endRow = new Text(cl.getOptionValue(optEndRow.getOpt()));","Remove this call to ""exit"" or ensure it is really required."
86c7a24494b2d41e9ac3277a09d1f7fe5d09fd19,server/src/main/java/org/apache/accumulo/server/test/randomwalk/security/DropTable.java,"import org.apache.accumulo.core.security.thrift.AuthInfo;
    AuthInfo auth;
      auth = WalkingSecurity.get(state).getTabAuthInfo();
      conn = WalkingSecurity.get(state).getTableConnector();
      auth = WalkingSecurity.get(state).getSysAuthInfo();
      conn = WalkingSecurity.get(state).getSystemConnector();
    String tableName = WalkingSecurity.get(state).getTableName();
    boolean exists = WalkingSecurity.get(state).getTableExists();
    boolean hasPermission = WalkingSecurity.get(state).canDeleteTable(auth, tableName);
          WalkingSecurity.get(state).cleanTablePermissions(tableName);
        if (WalkingSecurity.get(state).userPassTransient(conn.whoami()))
    WalkingSecurity.get(state).cleanTablePermissions(tableName);","Reduce this switch case number of lines from 44 to at most 5, for example by extracting code into methods."
8773302cfebff3d1c129b32e7f92dec4094496da,core/src/test/java/org/apache/accumulo/core/client/mapreduce/AccumuloRowInputFormatTest.java,"    final Connector conn = instance.getConnector(""root"", new PasswordToken(""""));","Rename ""connector"" which hides the field declared at line 67."
cb6bcc517b27df03106d7e5eca344ed45699e31f,src/proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanState.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package org.apache.accumulo.proxy.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

@SuppressWarnings(""all"") public enum ScanState implements org.apache.thrift.TEnum {
  IDLE(0),
  RUNNING(1),
  QUEUED(2);

  private final int value;

  private ScanState(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static ScanState findByValue(int value) { 
    switch (value) {
      case 0:
        return IDLE;
      case 1:
        return RUNNING;
      case 2:
        return QUEUED;
      default:
        return null;
    }
  }
}",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
3c4012cfb4602f5675f54013525104c011728ad8,core/src/main/java/org/apache/accumulo/core/client/IteratorSetting.java,"import java.util.Collections;
   * @deprecated Since 1.4.1, see {@link IteratorSetting.getOptions}
   * @deprecated Since 1.4.1, see {@link IteratorSetting.clearOptions} and {@link IteratorSetting.setOptions}
   * @deprecated Since 1.4.1, see {@link IteratorSetting.getOptions} and test {@link Map.isEmpty}
   * Get the configuration parameters for this iterator.
   * 
   * @return the properties
   */
  public Map<String,String> getOptions() {
    return Collections.unmodifiableMap(properties);
  }
  
  /**",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
548bb3cdefebccea8630c210855d6e3186c8c99f,server/src/main/java/org/apache/accumulo/server/monitor/ZooKeeperStatus.java,"import java.util.SortedSet;
import java.util.TreeSet;
  public static class ZooKeeperState implements Comparable<ZooKeeperState> {
    
    @Override
    public int compareTo(ZooKeeperState other) {
      if (this == other) {
        return 0;
      } else if (other == null) {
        return 1;
      } else {
        if (this.keeper == other.keeper) {
          return 0;
        } else if (null == this.keeper) {
          return -1;
        } else if (null == other.keeper) {
          return 1;
        } else {
          return this.keeper.compareTo(other.keeper);
        }
      }
    }
  private static SortedSet<ZooKeeperState> status = new TreeSet<ZooKeeperState>();
      TreeSet<ZooKeeperState> update = new TreeSet<ZooKeeperState>();","Override ""equals(Object obj)"" to comply with the contract of the ""compareTo(T o)"" method."
cd08a7a18249090e7e9d941f7b10b4b0a0eb6d71,src/examples/src/main/java/org/apache/accumulo/examples/mapreduce/RegexExample.java,"import org.apache.accumulo.core.iterators.user.RegExFilter;
    IteratorSetting regex = new IteratorSetting(50, ""regex"", RegExFilter.class);
    RegExFilter.setRegexs(regex, args[5], args[6], args[7], args[8], false);","Define a constant instead of duplicating this literal ""org.apache.accumulo.core.iterators.WholeRowIterator"" 4 times."
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/shard/Grep.java,"package org.apache.accumulo.test.randomwalk.shard;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
82f1106343e0d07feb4c8dcb702dceba3e2e30c4,test/src/test/java/org/apache/accumulo/fate/zookeeper/ZooLockTest.java,import org.apache.accumulo.mini.MiniAccumuloCluster;,This block of commented-out lines of code should be removed.
3b62690ceb7c98383e2231d82204aed90fb592ed,src/core/src/main/java/org/apache/accumulo/core/iterators/FilteringIterator.java,"      throw new IllegalArgumentException(e);
      throw new IllegalArgumentException(e);
      throw new IllegalArgumentException(e);",Complete the task associated to this TODO comment.
933d760dddf8a6e135d0cf7b3a9ea9c95599e559,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/logic/AbstractQueryLogic.java,"import org.apache.accumulo.examples.wikisearch.parser.EventFields.FieldValue;
import org.apache.accumulo.examples.wikisearch.parser.RangeCalculator;
    Document doc = new Document();
",31 duplicated blocks of code must be removed.
e0880e263e4bf8662ba3848405200473a25dfc9f,contrib/accumulo_sample/query/src/main/java/sample/Field.java,"package sample;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlValue;

@XmlAccessorType(XmlAccessType.FIELD)
public class Field {
	
	@XmlAttribute
	private String name = null;
	@XmlValue
	private String value = null;
	
	public Field() {
		super();
	}

	public Field(String fieldName, String fieldValue) {
		super();
		this.name = fieldName;
		this.value = fieldValue;
	}

	public String getFieldName() {
		return name;
	}

	public String getFieldValue() {
		return value;
	}

	public void setFieldName(String fieldName) {
		this.name = fieldName;
	}

	public void setFieldValue(String fieldValue) {
		this.value = fieldValue;
	}
	
}",Return empty string instead.
75fc470e543790906017f772c56ee4f8cf241e29,server/src/main/java/org/apache/accumulo/server/conf/TableConfiguration.java,"import java.util.Map.Entry;
          tablePropCache = new ZooCache(inst.getZooKeepers(), inst.getZooKeepersSessionTimeOut(), new TableConfWatcher(inst));
  
  public String getTableId() {
    return table;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
8b4f7b02fae7517e3482b0b5274456333b512e3d,core/src/main/java/org/apache/accumulo/core/data/KeyExtent.java,"    Constants.METADATA_PREV_ROW_COLUMN.put(m, encodePrevEndRow(ke.getPrevEndRow()));",Replace all tab characters in this file by sequences of white-spaces.
2d9b208fb83df755e0cc32908318743f79e2793f,proxy/src/main/java/org/apache/accumulo/proxy/thrift/TablePermission.java,"/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.accumulo.proxy.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum TablePermission implements org.apache.thrift.TEnum {
  READ(2),
  WRITE(3),
  BULK_IMPORT(4),
  ALTER_TABLE(5),
  GRANT(6),
  DROP_TABLE(7);

  private final int value;

  private TablePermission(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static TablePermission findByValue(int value) { 
    switch (value) {
      case 2:
        return READ;
      case 3:
        return WRITE;
      case 4:
        return BULK_IMPORT;
      case 5:
        return ALTER_TABLE;
      case 6:
        return GRANT;
      case 7:
        return DROP_TABLE;
      default:
        return null;
    }
  }
}",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
38932fefb38e1ef2df70fc23a5ed88ff6930afdf,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/iterator/AndIterator.java,"   * @return The given key's dataLocation
   * @return The given key's term
   * @return The given key's DocID
   * @return The given key's UID
   * @return A Key object built from the given row and dataLocation.
   * @return A Key object built from the given row, dataLocation, and term.
   * @return The key directly following the given key.
   * @return A Base64 encoded string (using a \n delimiter) of all columns to intersect on.
   * @return A Base64 encoded string (using a \n delimiter) of all terms to intersect on.
   * @return A base64 encoded string of which columns are NOT'ed
   * @return A Text array of the decoded columns
   * @return A Text array of decoded terms.
   * @return A boolean array of decoded NOT flags",Either log or rethrow this exception.
057b8d6cb0ccbf472067a755d76eba7ee2e3fd71,test/src/main/java/org/apache/accumulo/test/TestIngest.java,"    
      if (opts.debug)
        Logger.getLogger(TabletServerBatchWriter.class.getName()).setLevel(Level.TRACE);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/test/java/org/apache/accumulo/core/client/impl/TabletLocatorImplTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
a9efdd884330d37d46c0f8b9dc59cdce0a91c5f7,examples/simple/src/main/java/org/apache/accumulo/examples/simple/client/RandomBatchWriter.java,"import java.util.Map.Entry;
import org.apache.accumulo.core.client.security.SecurityErrorCode;",Do not forget to remove this deprecated code someday.
db4a291f944e8a6ad9d63dcbedfa9fe3108f0ead,src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"import org.apache.zookeeper.KeeperException.NoNodeException;
          try {
            flushID = tablet.getFlushID();
          } catch (NoNodeException e) {
            // table was probably deleted
            log.info(""Asked to flush table that has no flush id "" + ke + "" "" + e.getMessage());
            return;
          }
        try {
          tablet.flush(tablet.getFlushID());
        } catch (NoNodeException nne) {
          log.info(""Asked to flush tablet that has no flush id "" + new KeyExtent(textent) + "" "" + nne.getMessage());
        }
          try {
            compactionId = tablet.getCompactionID();
          } catch (NoNodeException e) {
            log.info(""Asked to compact table with no compaction id "" + ke + "" "" + e.getMessage());
            return;
          }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
5bd33fa1e9625e3c088ee39f626c256aca75b0da,examples/simple/src/main/java/org/apache/accumulo/examples/simple/isolation/InterferenceTest.java,"import org.apache.accumulo.core.client.BatchWriterConfig;
    Thread writer = new Thread(new Writer(conn.createBatchWriter(table, new BatchWriterConfig())));","Remove this unused method parameter ""e""."
5597259bbfa3da9833cf047b480efbba6f46ed02,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/LongSummation.java,"/**
 * @deprecated since 1.4
 * @use org.apache.accumulo.core.iterators.user.SummingCombiner with SummingCombiner.Type.LONG
 */",1 duplicated blocks of code must be removed.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/util/time/SimpleTimer.java,"package org.apache.accumulo.server.util.time;

import java.util.Timer;
import java.util.TimerTask;

/**
 * Generic singleton timer: don't use it if you are going to do anything that will take very long. Please use it 
 * to reduce the number of threads dedicated to simple events.
 *
 */
public class SimpleTimer {
    
    private static SimpleTimer instance;
    private Timer timer;
    
    public static synchronized SimpleTimer getInstance() {
        if (instance == null)
            instance = new SimpleTimer();
        return instance;
    }

    private SimpleTimer() {
        timer = new Timer(""SimpleTimer"", true);
    }
    
    public void schedule(TimerTask task, long delay) {
        timer.schedule(task, delay);
    }
    
    public void schedule(TimerTask task, long delay, long period) {
        timer.schedule(task, delay, period);
    }
    
}",Return empty string instead.
f765888e3decac70571cf836e5300fb9a015b38e,server/src/main/java/org/apache/accumulo/server/test/TestIngest.java,"      System.out.printf(""%,12d records written | %,8d records/sec | %,12d bytes written | %,8d bytes/sec | %6.3f secs   %n"", totalValues,",Use isEmpty() to check whether the collection is empty or not.
a263f3e57501ee2a3872cde23f6cfc9958526b42,src/server/src/main/java/org/apache/accumulo/server/zookeeper/IZooReaderWriter.java,"  public String putEphemeralData(String zPath, byte[] data) throws KeeperException, InterruptedException;
",Move this variable to comply with Java Code Conventions.
5ef6cf189fdae233bb698f0d063810330ba546d5,src/server/src/main/java/org/apache/accumulo/server/trace/TraceServer.java,"import org.apache.accumulo.core.trace.TraceFormatter;
        connector.tableOperations().setProperty(table, Property.TABLE_FORMATTER_CLASS.getKey(), TraceFormatter.class.getName());","The Cyclomatic Complexity of this method ""update"" is 13 which is greater than 10 authorized."
aea4313624e0bbe815c3de2c0a6aa4af4ad82c26,test/src/test/java/org/apache/accumulo/test/functional/DeleteIT.java,"    c.tableOperations().create(""test_ingest"");
    deleteTest(c);
    assertEquals(0, cluster.exec(Admin.class, ""stopAll"").waitFor());
  }

  public static void deleteTest(Connector c) throws Exception {
    vopts.rows = opts.rows = 1000;
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,examples/simple/src/main/java/org/apache/accumulo/examples/simple/client/RowOperations.java,"  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   * @param opts 
   * 
  
   * 
  
   * 
  
   * @param opts 
   * 
  ",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/IsolatedScan.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
446a37a9795f2df7adc841154ca05add79cf286e,core/src/main/java/org/apache/accumulo/core/util/shell/commands/FlushCommand.java,import org.apache.accumulo.core.metadata.MetadataTable;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
729ed59186097b1ae93bbb32bef118abf5d1b83a,core/src/main/java/org/apache/accumulo/core/cli/ClientOpts.java,"  public Password password = new Password(""secret"");",This block of commented-out lines of code should be removed.
e8f4c93bf3236b87e3590d91a0eb202f36e72439,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java,"    if (startRow == null && endRow == null && size < 0) {
      shellState.getReader().flushConsole();
      String line = shellState.getReader().readLine(""Merge the entire table { "" + tableName + "" } into one tablet (yes|no)? "");
      if (line == null)
        return 0;
      if (!line.equalsIgnoreCase(""y"") && !line.equalsIgnoreCase(""yes""))
        return 0;
    }
    if (size < 0) {
    } else {",Return empty string instead.
cd08a7a18249090e7e9d941f7b10b4b0a0eb6d71,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/InputFormatBase.java," * Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for
 * additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the ""License""); you may not
 * use this file except in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
       
        // randomly between 100 and 200 ms
            // divide ranges into smaller ranges, based on the tablets","Define a constant instead of duplicating this literal ""org.apache.accumulo.core.iterators.WholeRowIterator"" 4 times."
c831e44d5e258d56840b02b84901c81b685406a8,src/core/src/main/java/org/apache/accumulo/core/data/Key.java,"import static org.apache.accumulo.core.util.ByteBufferUtil.toBytes;

    return appendPrintableString(ba, offset, len, maxLen, new StringBuilder()).toString();
  }
  
  public static StringBuilder appendPrintableString(byte ba[], int offset, int len, int maxLen, StringBuilder sb) {
    return sb;
  }
  
  private StringBuilder rowColumnStringBuilder() {
    StringBuilder sb = new StringBuilder();
    appendPrintableString(row, 0, row.length, Constants.MAX_DATA_TO_PRINT, sb);
    sb.append("" "");
    appendPrintableString(colFamily, 0, colFamily.length, Constants.MAX_DATA_TO_PRINT, sb);
    sb.append("":"");
    appendPrintableString(colQualifier, 0, colQualifier.length, Constants.MAX_DATA_TO_PRINT, sb);
    sb.append("" ["");
    appendPrintableString(colVisibility, 0, colVisibility.length, Constants.MAX_DATA_TO_PRINT, sb);
    sb.append(""]"");
    return sb;
    StringBuilder sb = rowColumnStringBuilder();
    sb.append("" "");
    sb.append(Long.toString(timestamp));
    sb.append("" "");
    sb.append(deleted);
    return sb.toString();
    return rowColumnStringBuilder().toString();",Move the array designator from the variable to the type.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/impl/ScannerImpl.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,core/src/main/java/org/apache/accumulo/core/util/ThriftUtil.java,"import org.apache.accumulo.trace.instrument.Span;
import org.apache.accumulo.trace.instrument.Trace;",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/functional/BatchScanSplitTest.java,package org.apache.accumulo.test.functional;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
2167c76e3ec2c8e7032de886613888c06b55a723,server/src/main/java/org/apache/accumulo/server/client/HdfsZooInstance.java,"      @SuppressWarnings(""deprecation"")
      String instanceIdFromFile = ZooKeeperInstance.getInstanceIDFromHdfs(ServerConstants.getInstanceIdLocation());
      instanceId = instanceIdFromFile;
  @Deprecated",Extract the assignment out of this expression.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/conf/ServerConfiguration.java,"  
  private static Map<String,TableConfiguration> tableInstances = new HashMap<String,TableConfiguration>(1);
  private static SecurityPermission CONFIGURATION_PERMISSION = new SecurityPermission(""configurationPermission"");
  
  public static synchronized SiteConfiguration getSiteConfiguration() {
    checkPermissions();
    return SiteConfiguration.getInstance(getDefaultConfiguration());
  }
  
  private static void checkPermissions() {
    SecurityManager sm = System.getSecurityManager();
    if (sm != null) {
      sm.checkPermission(CONFIGURATION_PERMISSION);
  }
  
  private static synchronized ZooConfiguration getZooConfiguration() {
    checkPermissions();
    return ZooConfiguration.getInstance(getSiteConfiguration());
  }
  
  public static synchronized DefaultConfiguration getDefaultConfiguration() {
    checkPermissions();
    return DefaultConfiguration.getInstance();
  }
  
  public static synchronized AccumuloConfiguration getSystemConfiguration() {
    return getZooConfiguration();
  }
  
  public static TableConfiguration getTableConfiguration(String instanceId, String tableId) {
    checkPermissions();
    synchronized (tableInstances) {
      TableConfiguration conf = tableInstances.get(tableId);
      if (conf == null) {
        conf = new TableConfiguration(instanceId, tableId, getSystemConfiguration());
        ConfigSanityCheck.validate(conf);
        tableInstances.put(tableId, conf);
      }
      return conf;
  }
  
  public static TableConfiguration getTableConfiguration(String tableId) {
    return getTableConfiguration(HdfsZooInstance.getInstance().getInstanceID(), tableId);
  }
  
  static void removeTableIdInstance(String tableId) {
    synchronized (tableInstances) {
      tableInstances.remove(tableId);
  }
  
  static void expireAllTableObservers() {
    synchronized (tableInstances) {
      for (Entry<String,TableConfiguration> entry : tableInstances.entrySet()) {
        entry.getValue().expireAllObservers();
      }
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
75fc470e543790906017f772c56ee4f8cf241e29,server/src/main/java/org/apache/accumulo/server/tabletserver/LargestFirstMemoryManager.java,"  private long maxMemory = -1;
  private int maxConcurrentMincs;
  private int numWaitingMultiplier;
  private ServerConfiguration config = null;
    this();
  }
  
  public void init(ServerConfiguration conf) {
    this.config = conf;
    maxMemory = conf.getConfiguration().getMemoryInBytes(Property.TSERV_MAXMEM);
    maxConcurrentMincs = conf.getConfiguration().getCount(Property.TSERV_MINC_MAXCONCURRENT);
    numWaitingMultiplier = Constants.TSERV_MINC_MAXCONCURRENT_NUMWAITING_MULTIPLIER;
  }
  
  LargestFirstMemoryManager() {
    if (maxMemory < 0)
      throw new IllegalStateException(""need to initialize Largst"");
          mincIdleThresholds.put(tableId, config.getTableConfiguration(tableId.toString()).getTimeInMillis(Property.TABLE_MINC_COMPACT_IDLETIME));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
aaa34fc0bf50997063acd5284e473c5d7cb4ef1f,test/src/test/java/org/apache/accumulo/test/ShellServerTest.java,"    exec(""classpath"", true, ""Level 2: Accumulo Start Classloader (Loads the classloader) URL classpath items are"", true);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/util/ZooZap.java,"import org.apache.accumulo.fate.zookeeper.IZooReaderWriter;
import org.apache.accumulo.fate.zookeeper.ZooUtil.NodeMissingPolicy;","Remove this call to ""exit"" or ensure it is really required."
6514a41544b418fc9a3f92a08d45c9b209c0cfde,test/src/main/java/org/apache/accumulo/test/randomwalk/security/SecurityFixture.java,    WalkingSecurity.clearInstance();,1 duplicated blocks of code must be removed.
190fc92eab965a787f19797fda3754bece6a1ae2,core/src/main/java/org/apache/accumulo/core/data/thrift/UpdateErrors.java,"                  long _val53; // required
            long _val69; // required",Rename this package name to match the regular expression '^[a-z]+(\.[a-z][a-z0-9]*)*$'.
9291beebf7f6ef323a2f7a211edf121251e5741f,server/src/main/java/org/apache/accumulo/server/security/AuditedSecurityOperation.java,"import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map.Entry;
  private static final int MAX_ELEMENTS_TO_LOG = 10;
  
  private static List<String> truncate(Collection<? extends Object> list) {
    List<String> result = new ArrayList<String>();
    int i = 0;
    for (Object obj : list) {
      if (i > MAX_ELEMENTS_TO_LOG) {
        result.add("" and "" + (list.size() - MAX_ELEMENTS_TO_LOG) + "" more "");
        break;
      }
      result.add(obj.toString());
    }
    return result;
  }
      List<String> convertedColumns = truncate(Translator.translate(columns, new Translator.TColumnTranslator()));
      Map<KeyExtent, List<String>> truncated = new HashMap<KeyExtent, List<String>>();
      for (Entry<KeyExtent,List<Range>> entry : convertedBatch.entrySet()) {
          truncated.put(entry.getKey(), truncate(entry.getValue()));
      }",Move this variable to comply with Java Code Conventions.
c41a19f0eb25f7354637fe1570657d4e1d1a0264,src/core/src/test/java/org/apache/accumulo/core/data/MapFileTest.java,"import java.util.Random;
/**
 * @deprecated since 1.4
 */",6 duplicated blocks of code must be removed.
446a37a9795f2df7adc841154ca05add79cf286e,server/src/main/java/org/apache/accumulo/server/master/tableOps/BulkImport.java,"import org.apache.accumulo.core.metadata.MetadataTable;
import org.apache.accumulo.core.metadata.schema.MetadataSchema.TabletsSection;
import org.apache.accumulo.server.util.MetadataTableUtil;
    loop: for (String dir : fs.getFileSystems().keySet()) {
    MetadataTableUtil.addBulkLoadInProgressFlag(""/"" + bulkDir.getParent().getName() + ""/"" + bulkDir.getName());
    MetadataTableUtil.removeBulkLoadInProgressFlag(""/"" + bulkDir.getParent().getName() + ""/"" + bulkDir.getName());
    MetadataTableUtil.addDeleteEntry(tableId, ""/"" + bulkDir.getName());
    MetadataTableUtil.removeBulkLoadEntries(conn, tableId, tid);
    mscanner.fetchColumnFamily(TabletsSection.BulkFileColumnFamily.NAME);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,test/src/main/java/org/apache/accumulo/test/randomwalk/security/Authenticate.java,"import org.apache.accumulo.core.security.tokens.UserPassToken;
      result = conn.securityOperations().authenticateUser(new UserPassToken(target, password));",Either log or rethrow this exception.
29162e701b32acf443063fcb1ceb1d2a03de6bea,core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TIteratorSetting.java,"                org.apache.thrift.protocol.TMap _map88 = iprot.readMapBegin();
                struct.properties = new HashMap<String,String>(2*_map88.size);
                for (int _i89 = 0; _i89 < _map88.size; ++_i89)
                  String _key90; // required
                  String _val91; // required
                  _key90 = iprot.readString();
                  _val91 = iprot.readString();
                  struct.properties.put(_key90, _val91);
          for (Map.Entry<String, String> _iter92 : struct.properties.entrySet())
            oprot.writeString(_iter92.getKey());
            oprot.writeString(_iter92.getValue());
          for (Map.Entry<String, String> _iter93 : struct.properties.entrySet())
            oprot.writeString(_iter93.getKey());
            oprot.writeString(_iter93.getValue());
          org.apache.thrift.protocol.TMap _map94 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.properties = new HashMap<String,String>(2*_map94.size);
          for (int _i95 = 0; _i95 < _map94.size; ++_i95)
            String _key96; // required
            String _val97; // required
            _key96 = iprot.readString();
            _val97 = iprot.readString();
            struct.properties.put(_key96, _val97);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
50f47f759f1fcda4b68716a07b74baab440c7251,server/src/main/java/org/apache/accumulo/server/client/HdfsZooInstance.java,"    AuthenticationToken authToken = authenticator.login(principal, props);","Remove this unused method parameter ""principal""."
eafe0661f57dd5fb5604439354affe8c43f07500,src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingArrayCombiner.java,"/**
 * A Combiner that interprets Values as arrays of Longs and returns an array of element-wise sums.
 */","Remove the literal ""true"" boolean value."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/shard/Merge.java,"package org.apache.accumulo.server.test.randomwalk.shard;

import java.util.Collection;
import java.util.Properties;
import java.util.SortedSet;
import java.util.TreeSet;

import org.apache.accumulo.server.test.randomwalk.State;
import org.apache.accumulo.server.test.randomwalk.Test;
import org.apache.hadoop.io.Text;


public class Merge extends Test {

    @Override
    public void visit(State state, Properties props) throws Exception {
        String indexTableName = (String)state.get(""indexTableName"");
        
        Collection<Text> splits = state.getConnector().tableOperations().getSplits(indexTableName);
        SortedSet<Text> splitSet = new TreeSet<Text>(splits);
        log.debug(""merging "" + indexTableName);
        state.getConnector().tableOperations().merge(indexTableName, null, null);
        org.apache.accumulo.core.util.Merge merge = new org.apache.accumulo.core.util.Merge();
        merge.mergomatic(state.getConnector(), indexTableName, null, null, 256 * 1024 * 1024, true);
        splits = state.getConnector().tableOperations().getSplits(indexTableName);
        if (splits.size() > splitSet.size())
        {
        	//throw an excpetion so that test will die an no further changes to table will occur... 
        	//this way table is left as is for debugging.
            throw new Exception(""There are more tablets after a merge: "" + splits.size() + "" was "" + splitSet.size());
        }
    }

}",Return empty string instead.
99d8e8b55e5b594d6ba4f4cba804aa1e01066f6e,core/src/test/java/org/apache/accumulo/core/data/OldMutation.java,"    if (o instanceof OldMutation)
      return equals((OldMutation) o);
  public boolean equals(OldMutation m) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
aa8fb304d30d68cfb6ef44ce5c462feb4de7091f,proxy/src/test/java/org/apache/accumulo/proxy/TestProxyReadWrite.java,"import org.apache.accumulo.proxy.thrift.BatchScanOptions;
import org.apache.accumulo.proxy.thrift.ScanOptions;
    BatchScanOptions options = new BatchScanOptions();
    options.ranges = Collections.singletonList(new Range(null, false, stop, false));
    String cookie = tpc.proxy().createBatchScanner(userpass, testtable, options);
    BatchScanOptions opts = new BatchScanOptions();
    opts.iterators = Collections.singletonList(pis);
    String cookie = tpc.proxy().createBatchScanner(userpass, testtable, opts);
    ScanOptions opts = new ScanOptions();
    opts.range = new Range(null, false, stop, false);
    String cookie = tpc.proxy().createScanner(userpass, testtable, opts);
    ScanOptions opts = new ScanOptions();
    opts.iterators = Collections.singletonList(pis);
    String cookie = tpc.proxy().createScanner(userpass, testtable, opts);
    String cookie = tpc.proxy().createBatchScanner(userpass, testtable, null);
    BatchScanOptions opts = new BatchScanOptions();
    opts.iterators = Collections.singletonList(pis);
    String cookie = tpc.proxy().createBatchScanner(userpass, testtable, opts);
    BatchScanOptions opts = new BatchScanOptions();
    opts.authorizations = auths;
    String cookie = tpc.proxy().createBatchScanner(userpass, testtable, opts);",Either log or rethrow this exception.
040f891216154de5f7c8a87e25cefc0f816aea9c,test/src/test/java/org/apache/accumulo/test/functional/SplitRecoveryIT.java,  @Test(timeout = 10 * 1000),Either log or rethrow this exception.
ca10f6d48d0e072ba202013e89c57905bb2573d8,core/src/main/java/org/apache/accumulo/core/file/blockfile/cache/BlockCache.java, * Block cache interface.,"Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
7ddc1fe6ef1dfee7a9dc3a9d9dc2f3869139116f,core/src/test/java/org/apache/accumulo/core/client/lexicoder/ReverseLexicoderTest.java,"/*
    ReverseLexicoder<Date> revLex = new ReverseLexicoder<Date>(new DateLexicoder());
    
    ","Override ""equals(Object obj)"" to comply with the contract of the ""compareTo(T o)"" method."
eafe0661f57dd5fb5604439354affe8c43f07500,src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java,"/**
 * A Combiner that interprets Values as Longs and returns their sum.
 */","Remove the literal ""true"" boolean value."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/problems/ProblemReports.java,  private final LRUMap problemReports = new LRUMap(1000);,"Remove this unused private ""appendProp"" method."
a650bc93ce99a5f771fb10615334c5fbea8b40a4,proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanOptions.java,"                  ByteBuffer _elem28; // optional
                  ScanColumn _elem31; // optional
                  IteratorSetting _elem34; // optional
            ByteBuffer _elem43; // optional
            ScanColumn _elem46; // optional
            IteratorSetting _elem49; // optional",277 duplicated blocks of code must be removed.
22cdcbc700e4c68b21738ab7087a35ef784b0fc1,test/src/main/java/org/apache/accumulo/test/functional/SplitRecoveryTest.java,"import org.apache.accumulo.server.ServerConstants;
import org.apache.accumulo.server.fs.FileRef;
import org.apache.accumulo.server.util.FileUtil;
    SortedMap<FileRef,DataFileValue> splitMapFiles = null;
      String tdir = ServerConstants.getTablesDirs()[0] + ""/"" + extent.getTableId().toString() + ""/dir_"" + i;
      SortedMap<FileRef,DataFileValue> mapFiles = new TreeMap<FileRef,DataFileValue>();
      mapFiles.put(new FileRef(tdir + ""/"" + RFile.EXTENSION + ""_000_000""), new DataFileValue(1000017 + i, 10000 + i));
  private void splitPartiallyAndRecover(KeyExtent extent, KeyExtent high, KeyExtent low, double splitRatio, SortedMap<FileRef,DataFileValue> mapFiles,
    SortedMap<FileRef,DataFileValue> lowDatafileSizes = new TreeMap<FileRef,DataFileValue>();
    SortedMap<FileRef,DataFileValue> highDatafileSizes = new TreeMap<FileRef,DataFileValue>();
    List<FileRef> highDatafilesToRemove = new ArrayList<FileRef>();
    MetadataTable.splitDatafiles(extent.getTableId(), midRow, splitRatio, new HashMap<FileRef,FileUtil.FileInfo>(), mapFiles, lowDatafileSizes,
      Map<FileRef,Long> bulkFiles = MetadataTable.getBulkFilesLoaded(SecurityConstants.getSystemCredentials(), extent);
      Map<FileRef,Long> lowBulkFiles = MetadataTable.getBulkFilesLoaded(SecurityConstants.getSystemCredentials(), low);
      Map<FileRef,Long> highBulkFiles = MetadataTable.getBulkFilesLoaded(SecurityConstants.getSystemCredentials(), high);
  private void ensureTabletHasNoUnexpectedMetadataEntries(KeyExtent extent, SortedMap<FileRef,DataFileValue> expectedMapFiles) throws Exception {
    SortedMap<FileRef,DataFileValue> fixedMapFiles = MetadataTable.getDataFileSizes(extent, SecurityConstants.getSystemCredentials());
  private void verifySame(SortedMap<FileRef,DataFileValue> datafileSizes, SortedMap<FileRef,DataFileValue> fixedDatafileSizes) throws Exception {
    for (Entry<FileRef,DataFileValue> entry : datafileSizes.entrySet()) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bfc44fd328c471d06b480835ba826b706dcf6816,core/src/main/java/org/apache/accumulo/core/Constants.java,"  public static final Range METADATA_DELETES_FOR_METADATA_KEYSPACE = new Range(new Key(new Text(METADATA_DELETE_FLAG_FOR_METADATA_PREFIX)), true, new Key(
      new Text(""!!~dem"")), false);
  /**
   * @deprecated since 1.6.0; Use {@link Authorizations#EMPTY} instead
   */
  @Deprecated
  public static final Authorizations NO_AUTHS = Authorizations.EMPTY;
  
  public static final String AUDITLOG = ""Audit"";","Remove this unused method parameter ""range""."
e9645e91a04345b482865968b438fc5eddfed0b3,core/src/main/java/org/apache/accumulo/core/client/impl/Tables.java,"  public static String getPrintableTableInfoFromId(Instance instance, String tableId) {
    String tableName = null;
    try {
      tableName = getTableName(instance, tableId);
    } catch (TableNotFoundException e) {
      //handled in the string formatting
    }
    return tableName == null ? String.format(""?(ID:%s)"", tableId) : String.format(""%s(ID:%s)"", tableName, tableId);
  }
  
  public static String getPrintableTableInfoFromName(Instance instance, String tableName) {
    String tableId = null;
    try {
      tableId = getTableId(instance, tableName);
    } catch (TableNotFoundException e) {
      //handled in the string formatting
    }
    return tableId == null ? String.format(""%s(?)"", tableName) : String.format(""%s(ID:%s)"", tableName, tableId);
  }
  ",Either log or rethrow this exception.
7a1075a47299afd6d27225b17814c11eb62432d2,test/src/test/java/org/apache/accumulo/test/functional/BloomFilterIT.java,"  @Test(timeout=200*1000)
    write(c, ""bt1"", 1, 0, 1000000000, 250);
    write(c, ""bt2"", 2, 0, 1000000000, 250);
    write(c, ""bt3"", 3, 0, 1000000000, 250);
    long t1 = query(c, ""bt1"", 1, 0, 1000000000, 100000, 250);
    long t2 = query(c, ""bt2"", 2, 0, 1000000000, 100000, 250);
    long t3 = query(c, ""bt3"", 3, 0, 1000000000, 100000, 250);
    long tb1 = query(c, ""bt1"", 1, 0, 1000000000, 100000, 250);
    long tb2 = query(c, ""bt2"", 2, 0, 1000000000, 100000, 250);
    long tb3 = query(c, ""bt3"", 3, 0, 1000000000, 100000, 250);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/multitable/MultiTableFixture.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/BatchScan.java,"package org.apache.accumulo.test.randomwalk.concurrent;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/util/shell/commands/ActiveScanIterator.java,"          scans.add(String.format(""%21s |%21s |%9s |%9s |%7s |%6s |%8s |%8s |%10s |%20s |%10s |%10s | %s"", tserver, as.getClient(),
              as.getTable(), as.getColumns(), as.getAuthorizations(), (as.getType() == ScanType.SINGLE ? as.getExtent() : ""N/A""), as.getSsiList(), as.getSsio()));
    final String header = String.format("" %-21s| %-21s| %-9s| %-9s| %-7s| %-6s| %-8s| %-8s| %-10s| %-20s| %-10s| %-10s | %s"", ""TABLET SERVER"", ""CLIENT"", ""AGE"",
        ""LAST"", ""STATE"", ""TYPE"", ""USER"", ""TABLE"", ""COLUMNS"", ""AUTHORIZATIONS"", ""TABLET"", ""ITERATORS"", ""ITERATOR OPTIONS"");","Remove this unused private ""appendProp"" method."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/client/IsolatedScanner.java,"    private final Scanner scanner;
    @Override
  @Deprecated
  @Deprecated","Remove this unused private ""appendProp"" method."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/util/time/BaseRelativeTime.java,"package org.apache.accumulo.server.util.time;

/**
 * Provide time from a local source and a hint from a time source.
 * 
 * RelativeTime and BaseRelativeTime are separated to provide unit tests of the core functionality of Relative timekeeping.
 *
 */
public class BaseRelativeTime implements ProvidesTime {
    
    private long diff = 0;
    private long lastReportedTime = 0;
    ProvidesTime local;
    
    BaseRelativeTime(ProvidesTime real, long lastReportedTime) {
        this.local = real;
        this.lastReportedTime = lastReportedTime;
    }

    BaseRelativeTime(ProvidesTime real) {
        this(real, 0);
    }

    @Override
    synchronized public long currentTime() {
        long localNow = local.currentTime();
        long result = localNow + diff;
        if (result < lastReportedTime)
            return lastReportedTime;
        lastReportedTime = result;
        return result;
    }
    
    synchronized public void updateTime(long advice) {
        long localNow = local.currentTime();
        long diff = advice - localNow;
        // smooth in 20% of the change, not the whole thing.
        this.diff = (this.diff * 4 / 5) + diff / 5; 
    }

}",Return empty string instead.
a91c8a29db004048b028f3990bb1b18cd7952ffa,server/src/main/java/org/apache/accumulo/server/util/EmbeddedWebServer.java,"  Server server = null;
  SocketConnector sock;
  ContextHandlerCollection handler;
  Context root;
  boolean usingSsl;
  
  public EmbeddedWebServer() {
    this(""0.0.0.0"", 0);
  public EmbeddedWebServer(String host, int port) {
    server = new Server();
    handler = new ContextHandlerCollection();
    root = new Context(handler, ""/"", new SessionHandler(), null, null, null);
    
    if (Monitor.getSystemConfiguration().get(Property.MONITOR_SSL_KEYSTORE) == """"
        || Monitor.getSystemConfiguration().get(Property.MONITOR_SSL_KEYSTOREPASS) == """"
        || Monitor.getSystemConfiguration().get(Property.MONITOR_SSL_TRUSTSTORE) == """"
        || Monitor.getSystemConfiguration().get(Property.MONITOR_SSL_TRUSTSTOREPASS) == """") {
      sock = new SocketConnector();
      usingSsl = false;
    } else {
      sock = new SslSocketConnector();
      ((SslSocketConnector) sock).setKeystore(Monitor.getSystemConfiguration().get(Property.MONITOR_SSL_KEYSTORE));
      ((SslSocketConnector) sock).setKeyPassword(Monitor.getSystemConfiguration().get(Property.MONITOR_SSL_KEYSTOREPASS));
      ((SslSocketConnector) sock).setTruststore(Monitor.getSystemConfiguration().get(Property.MONITOR_SSL_TRUSTSTORE));
      ((SslSocketConnector) sock).setTrustPassword(Monitor.getSystemConfiguration().get(Property.MONITOR_SSL_TRUSTSTOREPASS));
      usingSsl = true;
    }
    sock.setHost(host);
    sock.setPort(port);
  public void addServlet(Class<? extends HttpServlet> klass, String where) {
    root.addServlet(klass, where);
  }
    return sock.getLocalPort();
  public void start() {
    try {
      server.addConnector(sock);
      server.setHandler(handler);
      server.start();
    } catch (Exception e) {
      stop();
      throw new RuntimeException(e);
    }
  public void stop() {
    try {
      server.stop();
    } catch (Exception e) {
      throw new RuntimeException(e);
  
  public boolean isUsingSsl() {
    return usingSsl;
  }","Make this IP ""0.0.0.0"" address configurable."
cfc4fd9df9d7dbb9fece4fc47fd8ba99b0aac9cf,core/src/main/java/org/apache/accumulo/core/iterators/user/RegExFilter.java,"      return ( 
          (matches(rowMatcher, rowMatcher == null ? null : key.getRowData())) || 
          (matches(colfMatcher, colfMatcher == null ? null : key.getColumnFamilyData())) || 
          (matches(colqMatcher, colqMatcher == null ? null : key.getColumnQualifierData())) || 
          (matches(valueMatcher, value.get(), 0, value.get().length))
          );
    return (
        (matches(rowMatcher, rowMatcher == null ? null : key.getRowData())) && 
        (matches(colfMatcher, colfMatcher == null ? null : key.getColumnFamilyData())) && 
        (matches(colqMatcher, colqMatcher == null ? null : key.getColumnQualifierData())) &&
        (matches(valueMatcher, value.get(), 0, value.get().length))
        );",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/test/java/org/apache/accumulo/core/util/AddressUtilTest.java,"  public void testAddress() {
    InetSocketAddress addr = AddressUtil.parseAddress(""127.0.0.1"", 12345);
    assertTrue(addr.equals(new InetSocketAddress(""127.0.0.1"", 12345)));
    InetSocketAddress addr2 = AddressUtil.parseAddress(""127.0.0.1:1234"", 12345);
    assertTrue(addr2.equals(new InetSocketAddress(""127.0.0.1"", 1234)));
    InetSocketAddress addr3 = AddressUtil.parseAddress(""127.0.0.1:"", 12345);
    assertTrue(addr3.equals(new InetSocketAddress(""127.0.0.1"", 12345)));
    try {
      AddressUtil.parseAddress(""127.0.0.1:junk"", 12345);
      fail(""Number Format Exception Not Thrown"");
    } catch (NumberFormatException ex) {
      assertTrue(true);
    InetSocketAddress addr5 = AddressUtil.parseAddress(new Text(""127.0.0.1:543""), 12345);
    assertTrue(addr5.equals(new InetSocketAddress(""127.0.0.1"", 543)));
    TSocket sock = AddressUtil.createTSocket(""127.0.0.11111"", 0);
    // lame:
    assertTrue(sock != null);
  }
  
  public void testToString() {
    assertTrue(AddressUtil.toString(new InetSocketAddress(""127.0.0.1"", 1234)).equals(""127.0.0.1:1234""));
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ccaad172643805d56f5dd46cbbc7dcd1a5519cbf,src/trace/src/main/java/org/apache/accumulo/cloudtrace/instrument/Tracer.java,"package org.apache.accumulo.cloudtrace.instrument;
import org.apache.accumulo.cloudtrace.instrument.impl.NullSpan;
import org.apache.accumulo.cloudtrace.instrument.impl.RootMilliSpan;
import org.apache.accumulo.cloudtrace.instrument.receivers.SpanReceiver;
import org.apache.accumulo.cloudtrace.thrift.TInfo;
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/file/keyfunctor/RowFunctor.java,"package org.apache.accumulo.core.file.keyfunctor;

import org.apache.accumulo.core.data.ByteSequence;
import org.apache.accumulo.core.data.PartialKey;
import org.apache.accumulo.core.data.Range;
import org.apache.hadoop.util.bloom.Key;


public class RowFunctor implements KeyFunctor{
	
	@Override
	public org.apache.hadoop.util.bloom.Key transform(org.apache.accumulo.core.data.Key acuKey) {
		byte keyData[];
		
		  ByteSequence row = acuKey.getRowData();
		  keyData = new byte[row.length()];
		  System.arraycopy(row.getBackingArray(), 0, keyData, 0, row.length());

		return new org.apache.hadoop.util.bloom.Key(keyData,1.0);
	}

	@Override
	public Key transform(Range range) {
		if(isRangeInBloomFilter(range, PartialKey.ROW)){
			return transform(range.getStartKey());
		}
		return null;
	}

	static boolean isRangeInBloomFilter(Range range, PartialKey keyDepth) {

		if(range.getStartKey() == null || range.getEndKey() == null){
			return false;
		}

		if(range.getStartKey().equals(range.getEndKey(), keyDepth))
			return true;

		//include everything but the deleted flag in the comparison... 
		return range.getStartKey().followingKey(keyDepth).equals(range.getEndKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS_TIME) && !range.isEndKeyInclusive();
	}
}",Return empty string instead.
ef0f6ddcd9b722a57ec6f0299ba883ce4747b6a3,core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,"    
      
      
      
      
      try {
        while (scanner.hasNextLine() && !hasExited()) {
          execCommand(scanner.nextLine(), true, isVerbose());
        }
      } finally {
        scanner.close();
      }",1 duplicated blocks of code must be removed.
6a5500a5b3f34b26386877e332973e7b926aa4ce,core/src/main/java/org/apache/accumulo/core/util/MetadataTable.java,"import org.apache.accumulo.core.security.CredentialHelper;
import org.apache.accumulo.core.security.thrift.Credential;
  public static SortedMap<Text,SortedMap<ColumnFQ,Value>> getTabletEntries(Instance instance, KeyExtent ke, List<ColumnFQ> columns, Credential credentials) {
  public static void getTabletAndPrevTabletKeyValues(Instance instance, SortedMap<Key,Value> tkv, KeyExtent ke, List<ColumnFQ> columns, Credential credentials) {
  public static void getEntries(Instance instance, Credential credentials, String table, boolean isTid, Map<KeyExtent,String> locations,
    Scanner scanner = instance.getConnector(credentials.getPrincipal(), CredentialHelper.extractToken(credentials)).createScanner(Constants.METADATA_TABLE_NAME, Constants.NO_AUTHS);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0fcc836dbd80229a0dbcbd5b02019558aa799e4,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteIterCommand.java,"    if (scopes.isEmpty())
      throw new IllegalArgumentException(""You must select at least one scope to configure"");
}",Either log or rethrow this exception.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/monitor/Monitor.java,"      if (obj.getFirst() - get(0).getFirst() > maxDelta)
        remove(0);
    if (total.minor == null)
      total.minor = new Compacting();
    if (total.major == null)
      total.major = new Compacting();
    if (total.scans == null)
      total.scans = new Compacting();
    if (currentTime - lastRecalc < REFRESH_TIME * 1000)
      return;
      if (fetching)
        return;
          if (client != null)
            MasterClient.close(client);
        if (status != null)
          totalLoad += status.osLoad;
    if (req > 0)
      hitRate.add(new Pair<Long,Double>(currentTime, cacheHits.calculateCount() / (double) cacheReq.calculateCount()));
    else
      hitRate.add(new Pair<Long,Double>(currentTime, null));","Remove this call to ""exit"" or ensure it is really required."
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,trace/src/test/java/org/apache/accumulo/trace/instrument/TracerTest.java,"package org.apache.accumulo.trace.instrument;
import org.apache.accumulo.trace.instrument.Span;
import org.apache.accumulo.trace.instrument.Trace;
import org.apache.accumulo.trace.instrument.Tracer;
import org.apache.accumulo.trace.instrument.receivers.SpanReceiver;
import org.apache.accumulo.trace.instrument.thrift.TraceWrap;
import org.apache.accumulo.trace.thrift.TInfo;
import org.apache.accumulo.trace.thrift.TestService;
import org.apache.accumulo.trace.thrift.TestService.Iface;
import org.apache.accumulo.trace.thrift.TestService.Processor;",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
6e526d702caaae157c44254b041497d18af761d0,server/src/main/java/org/apache/accumulo/server/client/HdfsZooInstance.java,"import java.util.Properties;
import org.apache.accumulo.core.security.handler.Authenticator;
  
  @Override
  public Authenticator getAuthenticator() throws AccumuloException {
    String authenticatorName = getAuthenticatorClassName();
    try {
      Class<?> clazz = Class.forName(authenticatorName);
      Class<? extends Authenticator> authClass = clazz.asSubclass(Authenticator.class);
      Authenticator authenticator = authClass.newInstance();
      return authenticator;
    } catch (ClassNotFoundException e) {
      throw new AccumuloException(e);
    } catch (InstantiationException e) {
      throw new AccumuloException(e);
    } catch (IllegalAccessException e) {
      throw new AccumuloException(e);
    }
  }
  
  public Connector getConnector(String principal, Properties props) throws AccumuloException, AccumuloSecurityException {
    Authenticator authenticator = getAuthenticator();
    AuthenticationToken authToken = authenticator.login(props);
    return getConnector(principal, authToken);
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
fc502a15605a57422926dd8cbaad42d582290a96,core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java,    if (startRow == null && endRow == null && size < 0) {,1 duplicated blocks of code must be removed.
446a37a9795f2df7adc841154ca05add79cf286e,core/src/main/java/org/apache/accumulo/core/metadata/MetadataTable.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.metadata;


public class MetadataTable {
  
  public static final String ID = ""!0"";
  public static final String NAME = ""!METADATA"";
  
}",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a89e29730b51274fea44af776a8a50c6c10301ca,proxy/src/test/java/org/apache/accumulo/proxy/SimpleTest.java,"import java.util.ArrayList;
import org.apache.accumulo.test.functional.SlowIterator;
import org.apache.thrift.protocol.TProtocolFactory;
  private static Class<? extends TProtocolFactory> protocolClass;

  static Class<? extends TProtocolFactory> getRandomProtocol() {
    List<Class<? extends TProtocolFactory>> protocolFactories = new ArrayList<Class<? extends TProtocolFactory>>();
    protocolFactories.add(org.apache.thrift.protocol.TJSONProtocol.Factory.class);
    protocolFactories.add(org.apache.thrift.protocol.TBinaryProtocol.Factory.class);
    protocolFactories.add(org.apache.thrift.protocol.TTupleProtocol.Factory.class);
    protocolFactories.add(org.apache.thrift.protocol.TCompactProtocol.Factory.class);
    
    Random rand = new Random();
    return protocolFactories.get(rand.nextInt(protocolFactories.size()));
  }

    protocolClass = getRandomProtocol();
    System.out.println(protocolClass.getName());

        protocolClass, props);
    client = new TestProxyClient(""localhost"", proxyPort, protocolClass.newInstance()).proxy();
          Client client2 = new TestProxyClient(""localhost"", proxyPort, protocolClass.newInstance()).proxy();
        } catch (Exception e) {
          Client client2 = new TestProxyClient(""localhost"", proxyPort, protocolClass.newInstance()).proxy();
        } catch (Exception e) {
    // folder.delete();",This block of commented-out lines of code should be removed.
7e63948e273b0c282f006dd2a72c449586d1801f,server/src/main/java/org/apache/accumulo/server/master/state/TabletLocationState.java,"  static public class BadLocationStateException extends Exception {
    private static final long serialVersionUID = 1L;

    BadLocationStateException(String msg) { super(msg); }
  }
      boolean chopped) throws BadLocationStateException {
      throw new BadLocationStateException(extent + "" is both assigned and hosted, which should never happen: "" + this);",Either log or rethrow this exception.
cb6bcc517b27df03106d7e5eca344ed45699e31f,src/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/NotServingTabletException.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bfc44fd328c471d06b480835ba826b706dcf6816,test/src/main/java/org/apache/accumulo/test/functional/DeleteRowsSplitTest.java,"import org.apache.accumulo.core.security.Authorizations;
  
  
      
      
      
      final boolean fail[] = {false};
        @Override
      
      
      Scanner scanner = getConnector().createScanner(TABLE, Authorizations.EMPTY);
    
  ","Remove this unused method parameter ""range""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/file/rfile/RelativeKey.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
3cc736ca4ad45481df124ab6c08d751c774e2c10,src/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"        
        // if there is more work to be done, queue another major compaction
        if (needsMajorCompaction(reason))
          initiateMajorCompaction(reason);
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ImportDirectoryCommand.java,"package org.apache.accumulo.core.util.shell.commands;

import java.io.IOException;

import org.apache.accumulo.core.client.AccumuloException;
import org.apache.accumulo.core.client.AccumuloSecurityException;
import org.apache.accumulo.core.client.TableNotFoundException;
import org.apache.accumulo.core.util.CachedConfiguration;
import org.apache.accumulo.core.util.shell.Shell;
import org.apache.accumulo.core.util.shell.Shell.Command;
import org.apache.commons.cli.CommandLine;
import org.apache.hadoop.fs.FileStatus;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;


public class ImportDirectoryCommand extends Command {

	@Override
	public String description() {
		return ""bulk imports an entire directory of data files to the current table.  The boolean argument determines if accumulo sets the time."";
	}

	@Override
	public int execute(String fullCommand, CommandLine cl, Shell shellState) throws IOException, AccumuloException, AccumuloSecurityException, TableNotFoundException {
		shellState.checkTableState();

		String dir = cl.getArgs()[0];
		String failureDir = cl.getArgs()[1];
		boolean setTime = Boolean.parseBoolean(cl.getArgs()[2]);
		
		FileSystem fs = FileSystem.get(CachedConfiguration.getInstance());
		FileStatus failStatus = fs.getFileStatus(new Path(failureDir));
		if (failStatus == null || !failStatus.isDir() || fs.listStatus(new Path(failureDir)).length != 0)
		    throw new AccumuloException(failureDir + "" is not an empty directory"");
		shellState.getConnector().tableOperations().importDirectory(shellState.getTableName(), dir, failureDir, setTime);
		return 0;
	}

	@Override
	public int numArgs() {
		return 3;
	}

	@Override
	public String usage() {
		return getName() + "" <directory> <failureDirectory> true|false"";
	}

}",Return empty string instead.
f343540ca4b9e4359c43d6f990e486de960b637c,core/src/main/java/org/apache/accumulo/core/util/shell/commands/FlushCommand.java,"  private Option waitOpt;
    startRow = OptUtil.getStartRow(cl);
    endRow = OptUtil.getEndRow(cl);
    opts.addOption(OptUtil.startRowOpt());
    opts.addOption(OptUtil.endRowOpt());",Either log or rethrow this exception.
75fc470e543790906017f772c56ee4f8cf241e29,server/src/main/java/org/apache/accumulo/server/constraints/ConstraintLoader.java,"import org.apache.accumulo.server.conf.TableConfiguration;
  public static ConstraintChecker load(TableConfiguration conf) throws IOException {
          log.debug(""Loaded constraint "" + clazz.getName() + "" for "" + conf.getTableId());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2ad672a5172124625d719c38c163ab68846c75a6,core/src/main/java/org/apache/accumulo/core/security/thrift/ThriftSecurityException.java,"/**
 * @deprecated since 1.5, see org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException
 * *
 */",Move this constructor to comply with Java Code Conventions.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/test/continuous/TimeBinner.java,"import java.util.Map.Entry;

import org.apache.accumulo.core.cli.ClientOpts.TimeConverter;
import org.apache.accumulo.core.cli.Help;

import com.beust.jcommander.Parameter;
  static class Opts extends Help {
    @Parameter(names=""--period"", description=""period"", converter=TimeConverter.class, required=true)
    long period = 0;
    @Parameter(names=""--timeColumn"", description=""time column"", required=true)
    int timeColumn = 0;
    @Parameter(names=""--dataColumn"", description=""data column"", required=true)
    int dataColumn = 0;
    @Parameter(names=""--operation"", description=""one of: AVG, SUM, MIN, MAX, COUNT"", required=true)
    String operation;
    @Parameter(names=""--dateFormat"", description=""a SimpleDataFormat string that describes the data format"")
    String dateFormat = ""MM/dd/yy-HH:mm:ss"";
  }
  
    Opts opts = new Opts();
    opts.parseArgs(TimeBinner.class.getName(), args);
    Operation operation = Operation.valueOf(opts.operation);
    SimpleDateFormat sdf = new SimpleDateFormat(opts.dateFormat);
        long time = (long) Double.parseDouble(tokens[opts.timeColumn]);
        double data = Double.parseDouble(tokens[opts.dataColumn]);
        time = (time / opts.period) * opts.period;
            data_min = Double.parseDouble(tokens[opts.dataColumn - 2]);
            data_max = Double.parseDouble(tokens[opts.dataColumn - 1]);","Remove this call to ""exit"" or ensure it is really required."
897613840017ed4ed636efa1c988df830ab05b92,core/src/main/java/org/apache/accumulo/core/client/mock/MockInstance.java,"  public Connector getConnector(org.apache.accumulo.core.security.thrift.AuthInfo auth) throws AccumuloException, AccumuloSecurityException {",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/test/NullBatchWriter.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    private int mutationsAdded;
    private long startTime;
    
    @Override
    public void addMutation(Mutation m) throws MutationsRejectedException {
        if (mutationsAdded == 0) {
            startTime = System.currentTimeMillis();
        }
        mutationsAdded++;
        m.numBytes();
    }
    
    @Override
    public void addMutations(Iterable<Mutation> iterable) throws MutationsRejectedException {
        for (Mutation mutation : iterable) {
            addMutation(mutation);
        }
    }
    
    @Override
    public void close() throws MutationsRejectedException {
        flush();
    }
    
    @Override
    public void flush() throws MutationsRejectedException {
        System.out.printf(""Mutation add rate : %,6.2f mutations/sec\n"", mutationsAdded / ((System.currentTimeMillis() - startTime) / 1000.0));
        mutationsAdded = 0;
    }
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
48e331cc2d55a37421b5dd7bbb45e91657ea811f,examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/bulk/BulkIngestExample.java,"      Collection<Text> splits = connector.tableOperations().listSplits(opts.tableName, 100);",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
b1379140bcea2c529ce98e6bfcb1d007d58c0adc,examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/iterator/BooleanLogicIterator.java,            if (!topKey.equals(this.root.getTopKey())) {,Replace all tab characters in this file by sequences of white-spaces.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/util/ColumnFQ.java,"  private Text colf;
  private Text colq;
  
  public ColumnFQ(Text colf, Text colq) {
    if (colf == null || colq == null) {
      throw new IllegalArgumentException();
    this.colf = colf;
    this.colq = colq;
  }
  
  public ColumnFQ(Key k) {
    this(k.getColumnFamily(), k.getColumnQualifier());
  }
  
  public ColumnFQ(ColumnUpdate cu) {
    this(new Text(cu.getColumnFamily()), new Text(cu.getColumnQualifier()));
  }
  
  public Text getColumnQualifier() {
    return colq;
  }
  
  public Text getColumnFamily() {
    return colf;
  }
  
  public Column toColumn() {
    return new Column(TextUtil.getBytes(colf), TextUtil.getBytes(colq), null);
  }
  
  public static void fetch(ScannerBase sb, ColumnFQ cfq) {
    sb.fetchColumn(cfq.colf, cfq.colq);
  }
  
  public static void put(Mutation m, ColumnFQ cfq, Value v) {
    m.put(cfq.colf, cfq.colq, v);
  }
  
  public static void putDelete(Mutation m, ColumnFQ cfq) {
    m.putDelete(cfq.colf, cfq.colq);
  }
  
  @Override
  public boolean equals(Object o) {
    if (!(o instanceof ColumnFQ)) return false;
    if (this == o) return true;
    ColumnFQ ocfq = (ColumnFQ) o;
    return ocfq.colf.equals(colf) && ocfq.colq.equals(colq);
  }
  
  @Override
  public int hashCode() {
    return colf.hashCode() + colq.hashCode();
  }
  
  public boolean hasColumns(Key key) {
    return key.compareColumnFamily(colf) == 0 && key.compareColumnQualifier(colq) == 0;
  }
  
  public boolean equals(Text colf, Text colq) {
    return this.colf.equals(colf) && this.colq.equals(colq);
  }
  
  @Override
  public int compareTo(ColumnFQ o) {
    int cmp = colf.compareTo(o.colf);
    
    if (cmp == 0) cmp = colq.compareTo(o.colq);
    
    return cmp;
  }
  
  @Override
  public String toString() {
    return colf + "":"" + colq;
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/tabletserver/CompactionQueue.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormat.java,"<<<<<<< .working
 * <li>{@link AccumuloOutputFormat#setConnectorInfo(JobConf, AccumuloToken)} OR {@link AccumuloOutputFormat#setConnectorInfo(JobConf, Path)}
=======
 * <li>{@link AccumuloOutputFormat#setConnectorInfo(JobConf, String, byte[])}
>>>>>>> .merge-right.r1438353
<<<<<<< .working
=======
   * @param user
   *          a valid Accumulo user name (user must have Table.CREATE permission if {@link #setCreateTables(JobConf, boolean)} is set to true)
   * @param passwd
   *          the user's password
>>>>>>> .merge-right.r1438353
  public static void setConnectorInfo(JobConf job, String user, byte[] passwd) {
    OutputConfigurator.setConnectorInfo(CLASS, job, user, passwd);
   * {@link TokenHelper#asBase64String(AccumuloToken)}.
   *          the path to a file in the configured file system, containing the serialized, base-64 encoded {@link AccumuloToken} with the user's authentication
   * @see #setConnectorInfo(JobConf, String, byte[])
   * Gets the user name from the configuration.
   * @return the user name
   * @see #setConnectorInfo(JobConf, String, byte[])
  protected static String getUsername(JobConf job) {
    return OutputConfigurator.getPrincipal(CLASS, job);
  }
  
  /**
   * Gets the password from the configuration. WARNING: The password is stored in the Configuration and shared with all MapReduce tasks; It is BASE64 encoded to
   * provide a charset safe conversion to a string, and is not intended to be secure.
   * 
   * @param job
   *          the Hadoop context for the configured job
   * @return the decoded user password
   * @since 1.5.0
   * @see #setConnectorInfo(JobConf, String, byte[])
   */
  protected static byte[] getPassword(JobConf job) {
        this.conn = getInstance(job).getConnector(getUsername(job), getPassword(job));
      Connector c = getInstance(job).getConnector(getUsername(job), getPassword(job));
      if (!c.securityOperations().authenticateUser(getUsername(job), getPassword(job)))",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/util/CachedConfiguration.java,"    if (configuration == null)
      setInstance(new Configuration());","Remove this call to ""exit"" or ensure it is really required."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/client/impl/TabletLocatorImpl.java,"  private final Lock rLock = rwLock.readLock();
  private final Lock wLock = rwLock.writeLock();","Remove this unused private ""appendProp"" method."
99d8e8b55e5b594d6ba4f4cba804aa1e01066f6e,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/DeleteRange.java,"      range.add(new Text(String.format(""%016x"", rand.nextLong() & 0x7fffffffffffffffl)));
      range.add(new Text(String.format(""%016x"", rand.nextLong() & 0x7fffffffffffffffl)));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
63401308a8fc8ff7ad54afa3e8bb2d93e1971a74,core/src/main/java/org/apache/accumulo/core/iterators/SortedMapIterator.java,import java.util.SortedMap;,"Use ""Integer.toString"" instead."
8773302cfebff3d1c129b32e7f92dec4094496da,core/src/test/java/org/apache/accumulo/core/client/mapreduce/AccumuloInputFormatTest.java,"    Connector c = mockInstance.getConnector(""root"", new PasswordToken(""""));","Rename ""connector"" which hides the field declared at line 67."
bd5f4f05975ec1cf0f3cf715d9d0094ababd8e73,server/src/main/java/org/apache/accumulo/server/util/FindOfflineTablets.java,"import org.apache.accumulo.core.security.CredentialHelper;
    final AtomicBoolean scanning = new AtomicBoolean(false);
    MetaDataTableScanner scanner = new MetaDataTableScanner(instance, CredentialHelper.create(opts.principal, opts.getToken(), opts.instance), new Range());","Immediately return this expression instead of assigning it to the temporary variable ""connector""."
42491533f6e743ed2b26519c556133f5e5f65132,test/src/main/java/org/apache/accumulo/test/randomwalk/security/Authenticate.java,      switch (ae.getSecurityErrorCode()) {,Do not forget to remove this deprecated code someday.
02a26268575ac93d74796ec8fd8798f85b92dac1,core/src/main/java/org/apache/accumulo/core/iterators/ColumnFamilyCounter.java,      this.value = new Value(Integer.toString(count).getBytes());,"Remove this unused method parameter ""ex""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/test/java/org/apache/accumulo/core/client/admin/TableOperationsHelperTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
2e489459cb0757aa9f2a893b5ceb6914af0dabac,server/src/main/java/org/apache/accumulo/server/monitor/Monitor.java,"import org.apache.accumulo.core.file.FileUtil;
import org.apache.accumulo.core.util.CachedConfiguration;
import org.apache.hadoop.fs.FileSystem;
  private static Instance instance;
  
  public static void main(String[] args) throws Exception {
    FileSystem fs = FileUtil.getFileSystem(CachedConfiguration.getInstance(), ServerConfiguration.getSiteConfiguration());
    Accumulo.init(fs, ""monitor"");
    String hostname = Accumulo.getLocalAddress(args);
    instance = HdfsZooInstance.getInstance();
    Monitor monitor = new Monitor();
    Accumulo.enableTracing(hostname, ""monitor"");
    monitor.run(hostname);
  public void run(String hostname) {","Remove this unused method parameter ""hostname""."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/iterators/IteratorUtil.java,"import org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader;
    return loadIterators(source, iters, allOptions, env, useAccumuloClassLoader, conf.get(Property.TABLE_CLASSPATH));
      Collection<IterInfo> iters, Map<String,Map<String,String>> iterOpts, IteratorEnvironment env, boolean useAccumuloClassLoader, String context)
      throws IOException {
          if (context != null && !context.equals(""""))
            clazz = (Class<? extends SortedKeyValueIterator<K,V>>) AccumuloVFSClassLoader.getContextManager().loadClass(context, iterInfo.className,
                SortedKeyValueIterator.class);
          else
            clazz = (Class<? extends SortedKeyValueIterator<K,V>>) AccumuloVFSClassLoader.loadClass(iterInfo.className, SortedKeyValueIterator.class);","Remove this unused private ""appendProp"" method."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/functional/CacheTestReader.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,contrib/accumulo_sample/ingest/src/main/java/normalizer/Normalizer.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/normalizer/Normalizer.java,package org.apache.accumulo.examples.wikisearch.normalizer;,"Rename ""table"" which hides the field declared at line 107."
f834ca8a70ddcc95dbc198f807640542d519225e,src/examples/wikisearch/ingest/src/test/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaInputSplitTest.java,"package org.apache.accumulo.examples.wikisearch.ingest;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

import junit.framework.Assert;

import org.apache.accumulo.examples.wikisearch.ingest.WikipediaInputFormat.WikipediaInputSplit;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.mapreduce.lib.input.FileSplit;
import org.junit.Test;

public class WikipediaInputSplitTest {
  @Test
  public void testSerialization() throws IOException
  {
    Path testPath = new Path(""/foo/bar"");
    String [] hosts = new String [2];
    hosts[0] = ""abcd"";
    hosts[1] = ""efgh"";
    FileSplit fSplit = new FileSplit(testPath,1,2,hosts);
    WikipediaInputSplit split = new WikipediaInputSplit(fSplit,7);
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    ObjectOutputStream out = new ObjectOutputStream(baos);
    split.write(out);
    out.close();    
    baos.close();

    ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
    DataInput in = new ObjectInputStream(bais);
    
    WikipediaInputSplit split2 = new WikipediaInputSplit();
    split2.readFields(in);
    Assert.assertTrue(bais.available() == 0);
    bais.close();
    
    Assert.assertTrue(split.getPartition() == split2.getPartition());
    
    FileSplit fSplit2 = split2.getFileSplit();
    Assert.assertTrue(fSplit.getPath().equals(fSplit2.getPath()));
    Assert.assertTrue(fSplit.getStart() == fSplit2.getStart());
    Assert.assertTrue(fSplit.getLength() == fSplit2.getLength());

    String [] hosts2 = fSplit2.getLocations();
    Assert.assertEquals(hosts.length, hosts2.length);
    for(int i = 0; i < hosts.length; i++)
    {
      Assert.assertEquals(hosts[i],hosts2[i]);
    }
  }
}",Remove this unused import 'java.io.DataOutput'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/upgrade/UpdateVersion.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    public static void main(String[] args) throws Exception {
        
        Configuration conf = CachedConfiguration.getInstance();
        FileSystem fs = FileSystem.get(conf);
        
        Path location = ServerConstants.getDataVersionLocation();
        
        fs.delete(new Path(location, ""2""), true);
        fs.mkdirs(new Path(location, ""3""));
        
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,fate/src/main/java/org/apache/accumulo/fate/zookeeper/ZooReader.java,"import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicInteger;
import org.apache.zookeeper.AsyncCallback.VoidCallback;
import org.apache.zookeeper.KeeperException.Code;
  @Override
  public void sync(final String path) throws KeeperException, InterruptedException {
    final AtomicInteger rc = new AtomicInteger();
    final AtomicBoolean waiter = new AtomicBoolean(false);
    getZooKeeper().sync(path, new VoidCallback() {
      @Override
      public void processResult(int code, String arg1, Object arg2) {
        rc.set(code);
        synchronized (waiter) {
          waiter.set(true);
          waiter.notifyAll();
        }
      }}, null);
    synchronized (waiter) {
      while (!waiter.get())
        waiter.wait();
    }
    Code code = Code.get(rc.get());
    if (code != KeeperException.Code.OK) {
      throw KeeperException.create(code);
    }
  }  
  ","Remove this unused private ""appendProp"" method."
040f891216154de5f7c8a87e25cefc0f816aea9c,test/src/test/java/org/apache/accumulo/test/functional/TimeoutIT.java,  @Test(timeout = 60 * 1000),Either log or rethrow this exception.
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,trace/src/main/java/org/apache/accumulo/trace/instrument/TraceRunnable.java,package org.apache.accumulo.trace.instrument;,Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
ca10f6d48d0e072ba202013e89c57905bb2573d8,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/Compact.java,    // TODO need to sometimes do null start and end ranges - ACCUMULO-1304,"Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/wikisearch/query/src/test/java/org/apache/accumulo/wikisearch/logic/TestQueryLogic.java,"import org.apache.accumulo.examples.wikisearch.ingest.WikipediaConfiguration;
import org.apache.accumulo.examples.wikisearch.ingest.WikipediaMapper;
import org.apache.accumulo.examples.wikisearch.reader.AggregatingRecordReader;",2 duplicated blocks of code must be removed.
56f0fb3a372d931bcd83bb14b1902190dab883db,src/start/src/test/java/org/apache/accumulo/start/Test.java,"        d = db.parse(new File(SITE_CONF + "".512MBBstandalone-example""));","Remove the literal ""false"" boolean value."
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java,"  public static void main(String[] args) throws Exception {
    Configuration conf = new Configuration();
    @SuppressWarnings(""deprecation"")
    FileSystem fs = FileUtil.getFileSystem(conf, AccumuloConfiguration.getSiteConfiguration());
    
    Options opts = new Options();
    Option dumpKeys = new Option(""d"", ""dump"", false, ""dump the key/value pairs"");
    opts.addOption(dumpKeys);
    
    CommandLine commandLine = new BasicParser().parse(opts, args);
    
    for (String arg : commandLine.getArgs()) {
      
      Path path = new Path(arg);
      CachableBlockFile.Reader _rdr = new CachableBlockFile.Reader(fs, path, conf, null, null);
      Reader iter = new RFile.Reader(_rdr);
      
      iter.printInfo();
      System.out.println();
      org.apache.accumulo.core.file.rfile.bcfile.PrintInfo.main(new String[] {arg});
      
      if (commandLine.hasOption(dumpKeys.getOpt())) {
        iter.seek(new Range((Key) null, (Key) null), new ArrayList<ByteSequence>(), false);
        while (iter.hasTop()) {
          Key key = iter.getTopKey();
          Value value = iter.getTopValue();
          System.out.println(key + "" -> "" + value);
          iter.next();
      }
      
      iter.close();
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
040f891216154de5f7c8a87e25cefc0f816aea9c,test/src/test/java/org/apache/accumulo/test/functional/MetadataSplitIT.java,  @Test(timeout = 2 * 60 * 1000),Either log or rethrow this exception.
8a33be695e0bcb769412db499df9cbec23004740,examples/simple/src/main/java/org/apache/accumulo/examples/simple/shard/ContinuousQuery.java,"import java.util.concurrent.TimeUnit;
import org.apache.accumulo.core.cli.BatchScannerOpts;
    BatchScannerOpts bsOpts = new BatchScannerOpts();
    opts.parseArgs(ContinuousQuery.class.getName(), args, bsOpts);
    BatchScanner bs = conn.createBatchScanner(opts.table, opts.auths, bsOpts.scanThreads);
    bs.setTimeout(bsOpts.scanTimeout, TimeUnit.MILLISECONDS);","Remove this unused method parameter ""opts""."
86066e645d2ebe86659fa699482ab1a523286bc5,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DropUserCommand.java,import org.apache.accumulo.core.util.shell.Token;,Replace all tab characters in this file by sequences of white-spaces.
0680b04bf03e2d6ad19ae3c368f6cb23f4e30056,examples/simple/src/main/java/org/apache/accumulo/examples/simple/helloworld/InsertWithOutputFormat.java,"import org.apache.accumulo.core.util.ContextFactory;
    TaskAttemptContext context = ContextFactory.createTaskAttemptContext(job);",Rename this generic name to match the regular expression '^[A-Z]$'.
84a508592afc8fde6e035f6fef7f5990752256f2,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReader.java,"import org.apache.accumulo.core.security.tokens.InstanceTokenWrapper;
  private InstanceTokenWrapper credentials;
  public TabletServerBatchReader(Instance instance, InstanceTokenWrapper credentials, String table, Authorizations authorizations, int numQueryThreads) {","Immediately return this expression instead of assigning it to the temporary variable ""ret""."
8a33be695e0bcb769412db499df9cbec23004740,examples/simple/src/main/java/org/apache/accumulo/examples/simple/dirlist/FileCount.java,"import org.apache.accumulo.core.cli.BatchWriterOpts;
import org.apache.accumulo.core.cli.ScannerOpts;
  private ScannerOpts scanOpts;
  private BatchWriterOpts bwOpts;
  
  FileCount(Opts opts, ScannerOpts scanOpts, BatchWriterOpts bwOpts) throws Exception {
    this.scanOpts = scanOpts;
    this.bwOpts = bwOpts;
    scanner.setBatchSize(scanOpts.scanBatchSize);
    BatchWriter bw = conn.createBatchWriter(opts.tableName, bwOpts.getBatchWriterConfig());
    ScannerOpts scanOpts = new ScannerOpts();
    BatchWriterOpts bwOpts = new BatchWriterOpts();
    opts.parseArgs(programName, args, scanOpts, bwOpts);
    FileCount fileCount = new FileCount(opts, scanOpts, bwOpts);","Remove this unused method parameter ""opts""."
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/util/SendLogToChainsaw.java,"import java.text.ParseException;
import org.apache.accumulo.core.cli.Help;
import com.beust.jcommander.IStringConverter;
import com.beust.jcommander.Parameter;

  private static class DateConverter implements IStringConverter<Date> {
    @Override
    public Date convert(String value) {
      SimpleDateFormat formatter = new SimpleDateFormat(""yyyyMMddHHmmss"");
      try {
        return formatter.parse(value);
      } catch (ParseException e) {
        throw new RuntimeException(e);
      }
    }
  }
  
  private static class Opts extends Help {
    @Parameter(names={""-d"", ""--logDirectory""}, description=""ACCUMULO log directory path"", required=true)
    String dir;
    @Parameter(names={""-f"", ""--fileFilter""}, description=""filter to apply to names of logs"")
    String filter;
    @Parameter(names={""-h"", ""--host""}, description=""host where chainsaw is running"", required=true)
    String hostname;
    @Parameter(names={""-p"", ""--port""}, description=""port where XMLSocketReceiver is listening"", required=true)
    int portnum;
    @Parameter(names={""-s"", ""--start""}, description=""start date filter (yyyyMMddHHmmss)"", required=true, converter=DateConverter.class)
    Date startDate;
    @Parameter(names={""-e"", ""--end""}, description=""end date filter (yyyyMMddHHmmss)"", required=true, converter=DateConverter.class)
    Date endDate;
    @Parameter(names={""-l"", ""--level""}, description=""filter log level"")
    String level;
    @Parameter(names={""-m"", ""--messageFilter""}, description=""regex filter for log messages"")
    String regex;
  
  
  
    Opts opts = new Opts();
    opts.parseArgs(SendLogToChainsaw.class.getName(), args);
    SendLogToChainsaw c = new SendLogToChainsaw(opts.dir, opts.filter, opts.hostname, opts.portnum, opts.startDate, opts.endDate, opts.regex, opts.level);","Remove this call to ""exit"" or ensure it is really required."
3ae2b169d30ad1f39cc50540ddb0eb22321ada5d,core/src/main/java/org/apache/accumulo/core/client/impl/TimeoutTabletLocator.java,"import org.apache.accumulo.core.security.thrift.TCredentials;
  public TabletLocation locateTablet(Text row, boolean skipRow, boolean retry, TCredentials credentials) throws AccumuloException, AccumuloSecurityException, TableNotFoundException {
      TabletLocation ret = locator.locateTablet(row, skipRow, retry, credentials);
  public void binMutations(List<Mutation> mutations, Map<String,TabletServerMutations> binnedMutations, List<Mutation> failures, TCredentials credentials) throws AccumuloException,
      locator.binMutations(mutations, binnedMutations, failures, credentials);
  public List<Range> binRanges(List<Range> ranges, Map<String,Map<KeyExtent,List<Range>>> binnedRanges, TCredentials credentials) throws AccumuloException, AccumuloSecurityException,
      List<Range> ret = locator.binRanges(ranges, binnedRanges, credentials);",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
3de0c1ec44d476fe1465eb05d33c32de3ccf1068,server/src/main/java/org/apache/accumulo/server/monitor/servlets/TServersServlet.java,"import com.google.common.net.HostAndPort;

    HostAndPort address = HostAndPort.fromString(tserverAddress);
  private void doDetailTable(HttpServletRequest req, StringBuilder sb, HostAndPort address, int numTablets, TabletStats total, TabletStats historical) {
    detailTable.setSubCaption(address.getHostText() + "":"" + address.getPort());","Remove this unused method parameter ""threadName""."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/SimpleBufferedOutputStream.java," * A simplified BufferedOutputStream with borrowed buffer, and allow users to see how much data have been buffered.
    protected byte buf[]; // the borrowed buffer
    protected int count = 0; // bytes used in buffer.
    
    // Constructor
    public SimpleBufferedOutputStream(OutputStream out, byte[] buf) {
        super(out);
        this.buf = buf;
    
    private void flushBuffer() throws IOException {
        if (count > 0) {
            out.write(buf, 0, count);
            count = 0;
        }
    
    @Override
    public void write(int b) throws IOException {
        if (count >= buf.length) {
            flushBuffer();
        }
        buf[count++] = (byte) b;
    
    @Override
    public void write(byte b[], int off, int len) throws IOException {
        if (len >= buf.length) {
            flushBuffer();
            out.write(b, off, len);
            return;
        }
        if (len > buf.length - count) {
            flushBuffer();
        }
        System.arraycopy(b, off, buf, count, len);
        count += len;
    }
    
    @Override
    public synchronized void flush() throws IOException {
        flushBuffer();
        out.flush();
    }
    
    // Get the size of internal buffer being used.
    public int size() {
        return count;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/util/CountDiskRows.java,"  
  private static final Logger log = Logger.getLogger(CountDiskRows.class);
  
  public static void main(String[] args) throws IOException {
    if (args.length < 1) {
      log.error(""usage: CountDiskRows tablename"");
      return;
    }
    Configuration conf = CachedConfiguration.getInstance();
    FileSystem fs = FileSystem.get(conf);
    Key key = new Key();
    Value value = new Value();
    int numrows = 0;
    Text prevRow = new Text("""");
    Text row = null;
    
    FileStatus[] tablets = fs.listStatus(new Path(ServerConstants.getTablesDir() + ""/"" + args[0]));
    for (FileStatus tablet : tablets) {
      FileStatus[] mapfiles = fs.listStatus(tablet.getPath());
      for (FileStatus mapfile : mapfiles) {
        MyMapFile.Reader mfr = new MyMapFile.Reader(fs, mapfile.getPath().toString(), conf);
        while (mfr.next(key, value)) {
          row = key.getRow();
          if (!row.equals(prevRow)) {
            prevRow = new Text(row);
            numrows++;
          }
      }
    log.info(""files in directory "" + args[0] + "" have "" + numrows);
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/examples/src/main/java/org/apache/accumulo/examples/mapreduce/bulk/SetupTable.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    public static void main(String[] args) throws AccumuloException, AccumuloSecurityException, TableExistsException {
        Connector conn = new ZooKeeperInstance(args[0], args[1]).getConnector(args[2], args[3].getBytes());
        if (args.length == 5) {
            // create a basic table
            conn.tableOperations().create(args[4]);
        } else if (args.length > 5) {
            // create a table with initial partitions
            TreeSet<Text> intialPartitions = new TreeSet<Text>();
            for (int i = 5; i < args.length; ++i)
                intialPartitions.add(new Text(args[i]));
            conn.tableOperations().create(args[4]);
            
            try {
        } else {
            System.err.println(""Usage : SetupTable <instance> <zookeepers> <username> <password> <table name> [<split point>{ <split point}]"");
        }
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
acf5aea33d2799a5d8eb2400069b158beeeb4933,contrib/accumulo_sample/ingest/src/main/java/ingest/WikipediaConfiguration.java,"import org.apache.accumulo.core.client.AccumuloException;
import org.apache.accumulo.core.client.AccumuloSecurityException;
import org.apache.accumulo.core.client.Connector;
import org.apache.accumulo.core.client.Instance;
import org.apache.accumulo.core.client.ZooKeeperInstance;
    return getInstance(conf).getConnector(getUser(conf), getPassword(conf));",Define and throw a dedicated exception instead of using a generic one.
3dbd87897442d632a09660f5bb5667c28e4bf9c4,core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ScanState.java, * Autogenerated by Thrift Compiler (0.9.0),Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/util/PrintTable.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
6677a162c0d17a5e69675a5e82e6a1841933984b,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"    
        while (wait && session.reserved) {
    
        if (unreserve && session != null)
    
    
      
          
    
    boolean checkCondition(ArrayList<TCMResult> results, ConditionalSession cs, CompressedIterators compressedIters, Tablet tablet,
        ServerConditionalMutation scm) throws IOException {
      for (TCondition tc : scm.getConditions()) {
        
        
    
      
      
            @SuppressWarnings(""unchecked"")
              
      
    
      
      
      
    
      try {
        
        for (KeyExtent ke : updates.keySet())
          if (!ke.getTableId().equals(tid))
            throw new IllegalArgumentException(""Unexpected table id "" + tid + "" != "" + ke.getTableId());
        
        
      } finally {
    
      // this method should wait for any running conditional update to complete
      // after this method returns a conditional update should not be able to start
      if (cs != null)
    
    ",320 duplicated blocks of code must be removed.
040f891216154de5f7c8a87e25cefc0f816aea9c,test/src/test/java/org/apache/accumulo/test/functional/BatchWriterFlushIT.java,  @Test(timeout = 30 * 1000),Either log or rethrow this exception.
e10450836343d41b5433215367d0f6ec92f0df62,start/src/main/java/org/apache/accumulo/start/classloader/vfs/AccumuloReloadingVFSClassLoader.java,"public class AccumuloReloadingVFSClassLoader implements FileListener, ReloadingClassLoader {
  private ReloadingClassLoader parent = null;
  private VFSClassLoader cl = null;
  @Override
  public synchronized ClassLoader getClassLoader() {
    if (cl == null || cl.getParent() != parent.getClassLoader()) {
        setClassloader(new VFSClassLoader(files, vfs, parent.getClassLoader()));
  public AccumuloReloadingVFSClassLoader(String uris, FileSystemManager vfs, ReloadingClassLoader parent, long monitorDelay) throws FileSystemException {

    cl = new VFSClassLoader(files, vfs, parent.getClassLoader());
  public AccumuloReloadingVFSClassLoader(String uris, FileSystemManager vfs, final ReloadingClassLoader parent) throws FileSystemException {
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
766cb2ca5c0e8eb723a163cf425257bd7bc7289f,src/server/src/main/java/org/apache/accumulo/server/test/functional/MaxOpenTest.java,"      checkRFiles(""test_ingest"", NUM_TABLETS, NUM_TABLETS, i + 1, i + 1);",Either log or rethrow this exception.
f423648a208cbcc2a3dd7c82ec427cc6375c1bf8,src/core/src/test/java/org/apache/accumulo/core/iterators/FamilyIntersectingIteratorTest.java,"import java.util.Map.Entry;
  private static final int NUM_ROWS = 5;
  private static final int NUM_DOCIDS = 200;","Remove this unused method parameter ""hasStart""."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/constraints/Constraint.java,"package org.apache.accumulo.core.constraints;

import java.util.List;

import org.apache.accumulo.core.data.KeyExtent;
import org.apache.accumulo.core.data.Mutation;
import org.apache.accumulo.core.security.Authorizations;

/**
 * Accumulo uses Constraint objects to determine if 
 * mutations will be applied to a table.  
 * 
 * This interface expects implementers to return violation
 * codes.  The reason codes are returned instead of arbitrary
 * strings it to encourage conciseness.  Conciseness is needed
 * because violations are aggregated.  If a user sends a batch
 * of 10,000 mutations to accumulo, only aggregated counts
 * about which violations occurred are returned.
 * 
 * If the Constraint implementer was allowed to return arbitrary
 * violation strings like the following :
 * 
 *   Value ""abc"" is not a number
 *   Value ""vbg"" is not a number
 *   
 * Then this would not aggregate very well, because the same 
 * violation is represented with two different strings.
 * 
 * 
 *
 */

public interface Constraint {
	
	public interface Environment {
		KeyExtent getExtent();
		String getUser();
		Authorizations getAuthorizations();
	}
	
	/**
	 * Implementers of this method should return a short
	 * one sentence description of what a given violation 
	 * code means.
	 * 
	 */
	
	String getViolationDescription(short violationCode);
	
	/**
	 * Checks a mutation for constrain violations.  If the
	 * mutation contains no violations, then the implementation
	 * should return null.  Otherwise it should return a list
	 * of violation codes.
	 * 
	 * Violation codes must be non negative.  Negative violation
	 * codes are reserved for system use.
	 * 
	 */
	
	List<Short> check(Environment env, Mutation mutation);
}",Return empty string instead.
5f83564549f7f9e94fb6619c983d8e3d12607e74,core/src/main/java/org/apache/accumulo/core/util/shell/commands/GrantCommand.java,"  public int execute(final String fullCommand, final CommandLine cl, final Shell shellState) throws Exception {
  protected void doTableOp(final Shell shellState, final String tableName) throws Exception {
  public void registerCompletion(final Token root, final Map<Command.CompletionSet,Set<String>> completionSet) {
    final Token cmd = new Token(getName());
    final Options o = new Options();
    final OptionGroup group = new OptionGroup();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/util/MetadataTable.java,"        return ("""" + size + "","" + numEntries + "","" + time).getBytes();
      return ("""" + size + "","" + numEntries).getBytes();","Remove this unused private ""appendProp"" method."
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,core/src/main/java/org/apache/accumulo/core/cli/ClientOnRequiredTable.java,"  public void setAccumuloConfigs(Job job) {
    AccumuloInputFormat.setConnectorInfo(job, user, getPassword());
    AccumuloOutputFormat.setConnectorInfo(job, user, getPassword());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/shard/ShardFixture.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/DropUser.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/client/admin/ScanState.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    IDLE, RUNNING, QUEUED",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
56cd6b7861a0dbfc21fa08f44d11210b45f0fd96,core/src/main/java/org/apache/accumulo/core/util/LocalityGroupUtil.java,"import java.util.SortedSet;
import java.util.TreeSet;
    SortedSet<String> ecfs = new TreeSet<String>();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
93773813e5839ac9ffb4f5a2b2b70bcedb106286,server/src/main/java/org/apache/accumulo/server/master/state/ZooTabletStateStore.java,"import org.apache.accumulo.core.util.RootTable;
          byte[] future = store.get(RootTable.ZROOT_TABLET_FUTURE_LOCATION);
          byte[] current = store.get(RootTable.ZROOT_TABLET_LOCATION);
          byte[] last = store.get(RootTable.ZROOT_TABLET_LAST_LOCATION);
          for (String entry : store.getChildren(RootTable.ZROOT_TABLET_WALOGS)) {
            byte[] logInfo = store.get(RootTable.ZROOT_TABLET_WALOGS + ""/"" + entry);
          TabletLocationState result = new TabletLocationState(RootTable.ROOT_TABLET_EXTENT, futureSession, currentSession, lastSession, logs, false);
    if (assignment.tablet.compareTo(RootTable.ROOT_TABLET_EXTENT) != 0)
    store.put(RootTable.ZROOT_TABLET_FUTURE_LOCATION, value.getBytes());
    if (assignment.tablet.compareTo(RootTable.ROOT_TABLET_EXTENT) != 0)
    store.put(RootTable.ZROOT_TABLET_LOCATION, value.getBytes());
    store.put(RootTable.ZROOT_TABLET_LAST_LOCATION, value.getBytes());
    store.remove(RootTable.ZROOT_TABLET_FUTURE_LOCATION);
    if (tls.extent.compareTo(RootTable.ROOT_TABLET_EXTENT) != 0)
    store.remove(RootTable.ZROOT_TABLET_LOCATION);
    store.remove(RootTable.ZROOT_TABLET_FUTURE_LOCATION);","Use ""Long.toString"" instead."
4368f4a148c13a6c537557f0c0129d8bf3964307,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/MasterStateCommand.java,"    return ""masterstate is deprecated, use the command line utility instead"";",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
84a508592afc8fde6e035f6fef7f5990752256f2,server/src/main/java/org/apache/accumulo/server/test/randomwalk/security/SetAuths.java,"import org.apache.accumulo.core.security.tokens.InstanceTokenWrapper;
    InstanceTokenWrapper auth;","Immediately return this expression instead of assigning it to the temporary variable ""ret""."
210593a0980ca74b31a05ae50d997efdf5c2d3c7,src/server/src/main/java/org/apache/accumulo/server/master/Master.java,"              if (getMasterState() == MasterState.HAVE_LOCK) {
                setMasterState(MasterState.SAFE_MODE);
              }",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
79cc7104b28089ff0a9bfa171f82862892b9cd55,src/core/src/main/java/org/apache/accumulo/core/client/AccumuloSecurityException.java," * An Accumulo Exception for security violations, authentication failures, authorization failures, etc.",2 duplicated blocks of code must be removed.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,core/src/main/java/org/apache/accumulo/core/client/ZooKeeperInstance.java,"import org.apache.accumulo.core.security.thrift.Credentials;
import org.apache.accumulo.core.util.ByteBufferUtil;
    return getConnector(user, ByteBufferUtil.toBytes(pass));
  @SuppressWarnings(""deprecation"")
    return new ConnectorImpl(this, user, pass);
  public Connector getConnector(Credentials auth) throws AccumuloException, AccumuloSecurityException {
    return getConnector(auth.getPrincipal(), auth.getToken());
  public String getAuthenticatorClassName() throws AccumuloException {
      return client.getAuthenticatorClassName();
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
02a26268575ac93d74796ec8fd8798f85b92dac1,core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java,      return Long.toString(v).getBytes();,"Remove this unused method parameter ""ex""."
bfc44fd328c471d06b480835ba826b706dcf6816,test/src/main/java/org/apache/accumulo/test/randomwalk/multitable/CopyTool.java,"import org.apache.accumulo.core.security.Authorizations;
    AccumuloInputFormat.setScanAuthorizations(job, Authorizations.EMPTY);","Remove this unused method parameter ""range""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/iterators/system/ColumnFamilySkippingIterator.java,"    if (inclusive)
      while (getSource().hasTop() && !colFamSet.contains(getSource().getTopKey().getColumnFamilyData())) {
        if (count < 10) {
          // it is quicker to call next if we are close, but we never know if we are close
          // so give next a try a few times
          getSource().next();
          count++;
          ByteSequence higherCF = sortedColFams.higher(getSource().getTopKey().getColumnFamilyData());
          if (higherCF == null) {
            // seek to the next row
            reseek(getSource().getTopKey().followingKey(PartialKey.ROW));
          } else {
            // seek to the next column family in the sorted list of column families
            reseek(new Key(getSource().getTopKey().getRowData().toArray(), higherCF.toArray(), new byte[0], new byte[0], Long.MAX_VALUE));
          }
          
          count = 0;
    else if (colFamSet != null && colFamSet.size() > 0)
      while (getSource().hasTop() && colFamSet.contains(getSource().getTopKey().getColumnFamilyData())) {
        if (count < 10) {
          getSource().next();
          count++;
        } else {
          // seek to the next column family in the data
          reseek(getSource().getTopKey().followingKey(PartialKey.ROW_COLFAM));
          count = 0;
        }","Remove this call to ""exit"" or ensure it is really required."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/iterators/SortedKeyValueIterator.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/monitor/util/celltypes/LoggerLinkType.java,"  
  @Override
  public String format(Object obj) {
    if (obj == null) return ""-"";
    RecoveryStatus status = (RecoveryStatus) obj;
    return String.format(""<a href='/loggers?s=%s'>%s</a>"", status.host, displayName(status));
  }
  
  public static String displayName(RecoveryStatus status) {
    if (status.host == null) return ""--Unknown--"";
    InetSocketAddress monitorAddress = AddressUtil.parseAddress(status.host, 0);
    return monitorAddress.getHostName() + "":"" + monitorAddress.getPort();
  }
  
  @Override
  public int compare(RecoveryStatus o1, RecoveryStatus o2) {
    return displayName(o1).compareTo(displayName(o2));
  }
  
  @Override
  public String alignment() {
    return ""left"";
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
36ddf332867a6b9bc50bf26961bc1857b3cc3379,src/server/src/main/java/org/apache/accumulo/server/thrift/metrics/ThriftMetricsMBean.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */","Remove the literal ""true"" boolean value."
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/test/ListTables.java,"import org.apache.accumulo.server.cli.ClientOpts;
  public static void main(String[] args) throws Exception {
    ClientOpts opts = new ClientOpts();
    opts.parseArgs(ListTables.class.getName(), args);
    for (Entry<String,String> table : Tables.getNameToIdMap(opts.getInstance()).entrySet())","Remove this call to ""exit"" or ensure it is really required."
fe239249b11bc3de48e423c5e9e50f1f9fe00f5e,core/src/main/java/org/apache/accumulo/core/client/mapred/AbstractInputFormat.java,"/**
 * An abstract input format to provide shared methods common to all other input format classes. At the very least, any classes inheriting from this class will
 * need to define their own {@link RecordReader}.
 */
   * @since 1.6.0
   * Fetches all {@link BatchScanConfig}s that have been set on the given Hadoop job.
   * @return the {@link BatchScanConfig} objects set on the job
    return InputConfigurator.getBatchScanConfig(CLASS, job, tableName);
     * @since 1.6.0",Do not forget to remove this deprecated code someday.
9b0751a7e22c8ba88ae5f78589541b041055b09b,src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java,"   * @param versioningIter
   *          Enables/disables the versioning iterator, which will limit the number of Key versions kept.
   * @deprecated Since 1.4 use {@link #importDirectory(String, String, String, boolean)}",Do not forget to remove this deprecated code someday.
0aa7eec581c8696a1b3b39dbca723a997837fe7b,core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloRowInputFormat.java,    log.setLevel(getLogLevel(context));,Either log or rethrow this exception.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/impl/BatchWriterImpl.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
d73a06c4660278d22ea05a5a769ac08d43078e2f,server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"  
  
      
          
            
      
      @Override
      @Override
      @Override
          @Override
    
    @Override
    
      value = iter.getTopValue();
      
    @Override
    
  
  
      
  
      
        String msg = ""Closed tablet "" + extent + "" has walog entries in "" + Constants.METADATA_TABLE_NAME + "" "" + fileLog.getFirst();
          String msg = ""Data file in "" + Constants.METADATA_TABLE_NAME + "" differ from in memory data "" + extent + ""  "" + fileLog.getSecond().keySet() + ""  ""
          String msg = ""Data file in "" + Constants.METADATA_TABLE_NAME + "" differ from in memory data "" + extent + ""  "" + fileLog.getSecond() + ""  ""
    @Override
        
    // We used to synchronize on the Tablet before fetching this information,
    
        if ((first == null && last == null) || !this.extent.contains(first.getRow()) || !this.extent.contains(last.getRow())) {
        
      
          
      Entry<String,Long> entry = iterator.next();
    
  
        splitPoint = new SplitRowSpec(FileUtil.estimatePercentageLTE(fs, tabletServer.getSystemConfiguration(), extent.getPrevEndRow(), extent.getEndRow(),
            datafileManager.getFiles(), tsp), tsp);
      
  
  
        // if multiple threads were allowed to update this outside of a sync block, then it would be
        // a race condition","Immediately return this expression instead of assigning it to the temporary variable ""client""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousMoru.java,"      if (max_cf > Short.MAX_VALUE || max_cq > Short.MAX_VALUE)
        throw new IllegalArgumentException();
    if (res != 0)
      System.exit(res);","Remove this call to ""exit"" or ensure it is really required."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/file/BloomFilterLayer.java,"import org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader;
        Class<? extends KeyFunctor> clazz = AccumuloVFSClassLoader.loadClass(acuconf.get(Property.TABLE_BLOOM_KEY_FUNCTOR), KeyFunctor.class);
            Class<? extends KeyFunctor> clazz = AccumuloVFSClassLoader.loadClass(ClassName, KeyFunctor.class);
      bmfw.append(new org.apache.accumulo.core.data.Key(new Text(""r"" + fi), new Text(""cf1"")), new Value((""v"" + fi).getBytes()));
      bmfw.append(new org.apache.accumulo.core.data.Key(new Text(""r"" + fi), new Text(""cf2"")), new Value((""v"" + fi).getBytes()));","Remove this unused private ""appendProp"" method."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchWriter.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/examples/src/main/java/org/apache/accumulo/examples/dirlist/Viewer.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
25e57f88907881dafdacc687abcdd6944f87d071,src/server/src/main/java/org/apache/accumulo/server/Accumulo.java,"import org.apache.hadoop.fs.Path;
  public static synchronized void updateAccumuloVersion() {
    Configuration conf = CachedConfiguration.getInstance();
    try {
      if (getAccumuloPersistentVersion() == Constants.PREV_DATA_VERSION) {
        FileSystem fs = TraceFileSystem.wrap(FileUtil.getFileSystem(conf, ServerConfiguration.getSiteConfiguration()));
        
        fs.create(new Path(ServerConstants.getDataVersionLocation() + ""/"" + Constants.DATA_VERSION));
        fs.delete(new Path(ServerConstants.getDataVersionLocation() + ""/"" + Constants.PREV_DATA_VERSION), false);
        
        dataVersion = null;
      }
    } catch (IOException e) {
      throw new RuntimeException(""Unable to set accumulo version: an error occurred."", e);
    }
    
  }

    if (dataVersion != Constants.DATA_VERSION && dataVersion != Constants.PREV_DATA_VERSION) {","Remove this call to ""exit"" or ensure it is really required."
2496efb93eacc4bd6695cdeaeb4d9acd2917bd91,test/src/main/java/org/apache/accumulo/test/MiniAccumuloCluster.java,"    Process initProcess = exec(Initialize.class, ""--instance-name"", INSTANCE_NAME, ""--password"", config.getRootPassword(), ""--username"", ""root"");","Remove this call to ""exit"" or ensure it is really required."
3b62690ceb7c98383e2231d82204aed90fb592ed,src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingArrayCombiner.java,"      throw new IllegalArgumentException(""no type specified"");
        throw new IllegalArgumentException();",Complete the task associated to this TODO comment.
af59f0ad10af71de2f7de9880a1dbe1595956cc5,core/src/main/java/org/apache/accumulo/core/security/thrift/SecurityErrorCode.java,package org.apache.accumulo.core.security.thrift;,1 duplicated blocks of code must be removed.
cb6bcc517b27df03106d7e5eca344ed45699e31f,src/core/src/main/java/org/apache/accumulo/core/master/thrift/DeadServer.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
82fc84f1331ade3f17a721fa0b86cd63b73746a2,src/core/src/main/java/org/apache/accumulo/core/iterators/system/DeletingIterator.java,"		super.seek(seekRange, columnFamilies, inclusive);","Remove the literal ""false"" boolean value."
75fc470e543790906017f772c56ee4f8cf241e29,server/src/main/java/org/apache/accumulo/server/master/balancer/TableLoadBalancer.java,"  ServerConfiguration config;
  
  public void init(ServerConfiguration config) {
    this.config = config;
  }
    return config.getTableConfiguration(table).get(Property.TABLE_LOAD_BALANCER);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
9edf2a6c43ccb90159b5807f01e35787577f6d9e,src/server/src/main/java/org/apache/accumulo/server/master/state/TabletStateStore.java,"      store = new MetaDataStateStore();
      store = new MetaDataStateStore();",Move this constructor to comply with Java Code Conventions.
38932fefb38e1ef2df70fc23a5ed88ff6930afdf,src/core/src/main/java/org/apache/accumulo/core/iterators/IntersectingIterator.java," * @deprecated since 1.4, replaced by {@link org.apache.accumulo.core.iterators.user.IntersectingIterator}",Either log or rethrow this exception.
89a708d070702a001b9da6ef0cfc25cd9d84158e,src/server/src/test/java/org/apache/accumulo/server/master/TestMergeState.java,"    Connector connector = instance.getConnector(""root"", """");
    AuthInfo auths = new AuthInfo(""root"", ByteBuffer.wrap("""".getBytes()), ""instance"");",2 duplicated blocks of code must be removed.
4ac31c3f9df7388f1be3d29865fbb534106bd77d,core/src/main/java/org/apache/accumulo/core/data/ConditionalMutation.java,"  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o == null || o.getClass() != ConditionalMutation.class) {
      return false;
    }
    ConditionalMutation cm = (ConditionalMutation) o;
    if (!conditions.equals(cm.conditions)) {
      return false;
    }
    return super.equals(o);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode();
    result = 37 * result + conditions.hashCode();
    return result;
  }",Move this variable to comply with Java Code Conventions.
ff1e582020a1437e9c520ef3a1af99477462d803,core/src/test/java/org/apache/accumulo/core/iterators/system/TimeSettingIteratorTest.java,"import junit.framework.TestCase;
",2 duplicated blocks of code must be removed.
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,core/src/main/java/org/apache/accumulo/core/client/mapred/InputFormatBase.java,"import org.apache.accumulo.core.security.tokens.SecurityToken;
   * @throws AccumuloSecurityException
  public static void setConnectorInfo(JobConf job, SecurityToken token) throws AccumuloSecurityException {
   * {@link TokenHelper#asBase64String(SecurityToken)}.
   *          the path to a file in the configured file system, containing the serialized, base-64 encoded {@link SecurityToken} with the user's authentication
   * @see #setConnectorInfo(JobConf, SecurityToken)
   * @throws AccumuloSecurityException
   * @see #setConnectorInfo(JobConf, SecurityToken)
  protected static SecurityToken getToken(JobConf job) throws AccumuloSecurityException {
   * @throws AccumuloSecurityException 
  protected static TabletLocator getTabletLocator(JobConf job) throws TableNotFoundException, AccumuloSecurityException {
        SecurityToken token = getToken(job);",Either log or rethrow this exception.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/constraints/UnsatisfiableConstraint.java,"  
  private List<Short> violations;
  private String vDesc;
  
  public UnsatisfiableConstraint(short vcode, String violationDescription) {
    this.violations = Collections.unmodifiableList(Collections.singletonList(vcode));
    this.vDesc = violationDescription;
  }
  
  public List<Short> check(Environment env, Mutation mutation) {
    return violations;
  }
  
  public String getViolationDescription(short violationCode) {
    return vDesc;
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/examples/src/main/java/org/apache/accumulo/examples/client/RandomBatchWriter.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
e511baa049c58509539ab7eb793c0da97c9d3ef6,server/src/main/java/org/apache/accumulo/server/Accumulo.java,    SimpleTimer.getInstance().schedule(new Runnable() {,Return empty string instead.
31990b212bcc68b9658ee33a54a9541e028a6209,core/src/main/java/org/apache/accumulo/core/client/mock/MockSecurityOperations.java,"  @Deprecated
  @Deprecated
    } else
  @Deprecated
  
  
  @Deprecated
    if (user != null) {
      } else
        throw new AccumuloSecurityException(token.getPrincipal(), SecurityErrorCode.INVALID_TOKEN);
    } else",Remove this empty statement.
f056084b60d0450d093a94ec7239ebd03721d52c,core/src/main/java/org/apache/accumulo/core/iterators/OrIterator.java,"import java.util.Collections;
import org.apache.accumulo.core.data.ArrayByteSequence;
    public Collection<ByteSequence> seekColfams;
      this.seekColfams = other.seekColfams;
      // The desired column families for this source is the term itself
      this.seekColfams = Collections.<ByteSequence>singletonList(new ArrayByteSequence(term.getBytes(), 0, term.getLength()));
      currentTerm.iter.seek(newRange, currentTerm.seekColfams, true);
        TS.iter.seek(range, TS.seekColfams, true);
      // Seek only to the term for this source as a column family
      TS.iter.seek(newRange, TS.seekColfams, true);",Make seekColfams a static final constant or non-public and provide accessors if needed.
65f0d20d7936df7427d8373efcfa69b02221c8b9,proxy/src/main/java/org/apache/accumulo/proxy/thrift/UnknownWriter.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@SuppressWarnings(""all"") public class UnknownWriter extends TException implements org.apache.thrift.TBase<UnknownWriter, UnknownWriter._Fields>, java.io.Serializable, Cloneable {
  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
446a37a9795f2df7adc841154ca05add79cf286e,server/src/main/java/org/apache/accumulo/server/tabletserver/Compactor.java,import org.apache.accumulo.core.metadata.schema.DataFileValue;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/master/state/TableCounts.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
2a81afe5bbd0138f23f95c7ed291d161987222a6,test/src/test/java/org/apache/accumulo/fate/zookeeper/ZooLockTest.java,"    accumulo.getConfig().getZooKeepers();
    ZooLock zl = new ZooLock(accumulo.getConfig().getZooKeepers(), 30000, ""digest"", ""secret"".getBytes(), parent);
    ZooReaderWriter zk = ZooReaderWriter.getInstance(accumulo.getConfig().getZooKeepers(), 30000, ""digest"", ""secret"".getBytes());
    accumulo.getConfig().getZooKeepers();
    ZooLock zl = new ZooLock(accumulo.getConfig().getZooKeepers(), 30000, ""digest"", ""secret"".getBytes(), parent);
    accumulo.getConfig().getZooKeepers();
    ZooReaderWriter zk = ZooReaderWriter.getInstance(accumulo.getConfig().getZooKeepers(), 30000, ""digest"", ""secret"".getBytes());
    ZooLock zl = new ZooLock(accumulo.getConfig().getZooKeepers(), 30000, ""digest"", ""secret"".getBytes(), parent);
    accumulo.getConfig().getZooKeepers();
    ZooReaderWriter zk = ZooReaderWriter.getInstance(accumulo.getConfig().getZooKeepers(), 30000, ""digest"", ""secret"".getBytes());
    ZooLock zl = new ZooLock(accumulo.getConfig().getZooKeepers(), 30000, ""digest"", ""secret"".getBytes(), parent);
    ZooLock zl2 = new ZooLock(accumulo.getConfig().getZooKeepers(), 30000, ""digest"", ""secret"".getBytes(), parent);
    ZooLock zl3 = new ZooLock(accumulo.getConfig().getZooKeepers(), 30000, ""digest"", ""secret"".getBytes(), parent);
    accumulo.getConfig().getZooKeepers();
    ZooKeeper zk = new ZooKeeper(accumulo.getConfig().getZooKeepers(), 30000, null);
    ZooLock zl = new ZooLock(accumulo.getConfig().getZooKeepers(), 30000, ""digest"", ""secret"".getBytes(), parent);
    ZooLock zl = new ZooLock(accumulo.getConfig().getZooKeepers(), 1000, ""digest"", ""secret"".getBytes(), parent);
    ZooKeeper zk = new ZooKeeper(accumulo.getConfig().getZooKeepers(), 1000, null);",Either log or rethrow this exception.
f765888e3decac70571cf836e5300fb9a015b38e,core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/TFile.java,"    System.out.printf(""TFile Dumper (TFile %s, BCFile %s)%n"", TFile.API_VERSION.toString(), BCFile.API_VERSION.toString());",Use isEmpty() to check whether the collection is empty or not.
3d55560a8640b02d291a38e588da0734656de227,src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTable.java,"        if (count > other.count)
          return -1;",Either log or rethrow this exception.
80faf5f0df0906d04a3d9de5fa052e189b359985,minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloCluster.java,"import org.apache.accumulo.core.master.thrift.MasterGoalState;
import org.apache.accumulo.server.master.state.SetGoalState;
  private boolean initialized = false;
    if (!initialized) {
      
      Runtime.getRuntime().addShutdownHook(new Thread() {
        @Override
        public void run() {
          try {
            MiniAccumuloCluster.this.stop();
          } catch (IOException e) {
            e.printStackTrace();
          } catch (InterruptedException e) {
            e.printStackTrace();
          }
      });
    }
      
    if (!initialized) {
      Process initProcess = exec(Initialize.class, ""--instance-name"", config.getInstanceName(), ""--password"", config.getRootPassword(), ""--username"", ""root"");
      int ret = initProcess.waitFor();
      if (ret != 0) {
        throw new RuntimeException(""Initialize process returned "" + ret);
      }
      initialized = true; 
    Process goal = exec(Main.class, SetGoalState.class.getName(), MasterGoalState.NORMAL.toString());
    int ret = goal.waitFor();
    if (ret != 0) {
      throw new RuntimeException(""Could not set master goal state, process returned "" + ret);
    }
    zooKeeperProcess = null;
    masterProcess = null;
    tabletServerProcesses = null;","Use ""Long.toString"" instead."
bfc44fd328c471d06b480835ba826b706dcf6816,test/src/main/java/org/apache/accumulo/test/functional/BulkFileTest.java,"import org.apache.accumulo.core.security.Authorizations;
    Scanner scanner = getConnector().createScanner(table, Authorizations.EMPTY);","Remove this unused method parameter ""range""."
c73f4fb9ccb348ed469de92f423a98668d229e61,contrib/accumulo_sample/ingest/src/main/java/ingest/WikipediaInputFormat.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
  
  @Override
  public RecordReader<LongWritable,Text> createRecordReader(InputSplit split, TaskAttemptContext context) {
    return new AggregatingRecordReader();
  }
  
  @Override
  protected boolean isSplitable(JobContext context, Path file) {
    return false;
  }
  ","Immediately return this expression instead of assigning it to the temporary variable ""r""."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/util/shell/commands/ShellPluginConfigurationCommand.java,"import org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader;
          pluginClazz = AccumuloVFSClassLoader.loadClass(ent.getValue(), clazz);","Remove this unused private ""appendProp"" method."
ee3a264e704c17de90c186065f50a0775ce4ad10,src/server/src/main/java/org/apache/accumulo/server/master/tserverOps/ShutdownTServer.java,"import org.apache.accumulo.server.zookeeper.IZooReaderWriter;
      IZooReaderWriter zoo = ZooReaderWriter.getInstance();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
5c97efc2576278f4b8b6b004ded78c98251cda24,core/src/main/java/org/apache/accumulo/core/iterators/AggregatingIterator.java,"        throw new IllegalArgumentException(""classname null"");",Return empty string instead.
040f891216154de5f7c8a87e25cefc0f816aea9c,start/src/main/java/org/apache/accumulo/start/classloader/vfs/MiniDFSUtil.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.start.classloader.vfs;

import java.io.BufferedReader;
import java.io.InputStreamReader;

public class MiniDFSUtil {
  
  public static String computeDatanodeDirectoryPermission() {
    // MiniDFSCluster will check the permissions on the data directories, but does not
    // do a good job of setting them properly. We need to get the users umask and set
    // the appropriate Hadoop property so that the data directories will be created
    // with the correct permissions.
    try {
      Process p = Runtime.getRuntime().exec(""/bin/sh -c umask"");
      BufferedReader bri = new BufferedReader(new InputStreamReader(p.getInputStream()));
      String line = bri.readLine();
      p.waitFor();
      
      Short umask = Short.parseShort(line.trim(), 8);
      // Need to set permission to 777 xor umask
      // leading zero makes java interpret as base 8
      int newPermission = 0777 ^ umask;
      
      return String.format(""%03o"", newPermission);
    } catch (Exception e) {
      throw new RuntimeException(""Error getting umask from O/S"", e);
    }
  }
  
}",Either log or rethrow this exception.
190fc92eab965a787f19797fda3754bece6a1ae2,core/src/main/java/org/apache/accumulo/core/Constants.java,"  public static final String EXPORT_METADATA_FILE = ""metadata.bin"";
  public static final String EXPORT_TABLE_CONFIG_FILE = ""table_config.txt"";
  public static final String EXPORT_FILE = ""exportMetadata.zip"";
  public static final String EXPORT_INFO_FILE = ""accumulo_export_info.txt"";
",Rename this package name to match the regular expression '^[a-z]+(\.[a-z][a-z0-9]*)*$'.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,core/src/main/java/org/apache/accumulo/core/client/impl/TabletLocator.java,"import org.apache.accumulo.core.security.thrift.Credentials;
  public static synchronized TabletLocator getInstance(Instance instance, Credentials credentials, Text tableId) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
3e74ee6654b879ca4eccf7b6f5469d4fa92b4b66,core/src/main/java/org/apache/accumulo/core/client/mapreduce/AbstractInputFormat.java,"              tableId = Tables.getTableId(instance, tableName);",4 duplicated blocks of code must be removed.
d44f3ccdf5fe4f35a7027d4bec2c2c829e94d3b4,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/query/Query.java,"    if (auths != null && auths.length() > 0)
    if (auths != null && auths.length() > 0)
      for (String a : auths.split("",""))
        authorizations.add(a);","Remove the literal ""false"" boolean value."
322e0359ac5d35d3774c47507aed07760397513a,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/parser/FieldIndexQueryReWriter.java,"   * @return String representation of a given query.
   * @return String representation of a given query.
   * @return String representation of a given query.
     * @return The field name.
     * @return The field value.
     * @return true if negated, otherwise false.
     * @return The operator.
     * @return The type.
     * @return A string represenation of the field name and value.",1 duplicated blocks of code must be removed.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/client/impl/ClientExecReturn.java,  T execute(C client) throws Exception;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bb06066658338eefd658e6ee5f9d4d826a138749,server/src/main/java/org/apache/accumulo/server/mini/MiniAccumuloConfig.java,"  private Map<ServerType,Long> memoryConfig = new HashMap<ServerType,Long>();
  private long defaultMemorySize = 128 * 1024 * 1024;
    this.memoryConfig.put(serverType, memoryUnit.toBytes(memory));
  public MiniAccumuloConfig setDefaultMemory(long memory, MemoryUnit memoryUnit) {
    this.defaultMemorySize = memoryUnit.toBytes(memory);
  /**
   * @param serverType get configuration for this server type
   * 
   * @return memory configured in bytes, returns default if this server type is not configured
   * 
   * @since 1.6.0
   */
  public long getMemory(ServerType serverType) {
  /**
   * @return memory configured in bytes
   * 
   * @since 1.6.0
   */
  public long getDefaultMemory() {","Cast one of the operands of this multiplication operation to a ""long""."
2e3598547a4cfa181a58b3f8cfbf215d1e4f5651,src/examples/src/test/java/org/apache/accumulo/examples/filedata/ChunkInputStreamTest.java,import org.apache.accumulo.core.util.PeekingIterator;,Either log or rethrow this exception.
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,trace/src/main/java/org/apache/accumulo/trace/instrument/TraceProxy.java,package org.apache.accumulo.trace.instrument;,Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
be0b8faee9d6c75514ba6819c79943589ed99fdd,core/src/main/java/org/apache/accumulo/core/bloomfilter/Filter.java,"  protected Filter(final int vectorSize, final int nbHash, final int hashType) {
  public void add(final List<Key> keys) {
  public void add(final Collection<Key> keys) {
  public void write(final DataOutput out) throws IOException {
  public void readFields(final DataInput in) throws IOException {
    final int ver = in.readInt();",Move this constructor to comply with Java Code Conventions.
75fc470e543790906017f772c56ee4f8cf241e29,server/src/main/java/org/apache/accumulo/server/test/functional/BulkFileTest.java,"import org.apache.accumulo.core.conf.AccumuloConfiguration;
    AccumuloConfiguration aconf = ServerConfiguration.getDefaultConfiguration();
    FileSystem fs = TraceFileSystem.wrap(FileUtil.getFileSystem(conf, aconf));
    FileSKVWriter writer1 = FileOperations.getInstance().openWriter(dir + ""/f1."" + RFile.EXTENSION, fs, conf, aconf);
    FileSKVWriter writer2 = FileOperations.getInstance().openWriter(dir + ""/f2."" + RFile.EXTENSION, fs, conf, aconf);
    FileSKVWriter writer3 = FileOperations.getInstance().openWriter(dir + ""/f3."" + RFile.EXTENSION, fs, conf, aconf);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/iterators/user/LargeRowFilter.java,"  public static final Value SUPPRESS_ROW_VALUE = new Value(""SUPPRESS_ROW"".getBytes());","Remove this unused private ""appendProp"" method."
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchWriter.java,"import org.apache.accumulo.trace.instrument.Span;
import org.apache.accumulo.trace.instrument.Trace;
import org.apache.accumulo.trace.instrument.Tracer;
import org.apache.accumulo.trace.thrift.TInfo;",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
9e2ebc51b9cf1b2e58dac56ce49caf916a1cfeec,src/core/src/main/java/org/apache/accumulo/core/iterators/user/NoVisFilter.java,"/**
 * A Filter that matches entries with a non-empty ColumnVisibility.
 */",1 duplicated blocks of code must be removed.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/monitor/util/celltypes/NumberType.java,"      if (warnMin != null && warnMax != null && errMin != null && errMax != null)
        s = commas(number.doubleValue(), warnMin.doubleValue(), warnMax.doubleValue(), errMin.doubleValue(), errMax.doubleValue());
      else if (errMin != null && errMax != null)
        s = commas(number.doubleValue(), errMin.doubleValue(), errMax.doubleValue());
      else
        s = commas(number.doubleValue());
      if (warnMin != null && warnMax != null && errMin != null && errMax != null)
        s = commas(number.longValue(), warnMin.longValue(), warnMax.longValue(), errMin.longValue(), errMax.longValue());
      else if (errMin != null && errMax != null)
        s = commas(number.longValue(), errMin.longValue(), errMax.longValue());
      else
        s = commas(number.longValue());
      if (number != null)
        s = String.valueOf(number);
    if (o1 == null && o2 == null)
      return 0;
    else if (o1 == null)
      return -1;
    else if (o2 == null)
      return 1;
    else
      return Double.valueOf(o1.doubleValue()).compareTo(o2.doubleValue());
    if (i < errMin || i > errMax)
      return String.format(""<span class='error'>%s</span>"", bigNumber(i));
    if (d < errMin || d > errMax)
      return String.format(""<span class='error'>%s</span>"", bigNumber(d));
    if (i < errMin || i > errMax)
      return String.format(""<span class='error'>%s</span>"", bigNumber(i));
    if (i < warnMin || i > warnMax)
      return String.format(""<span class='warning'>%s</span>"", bigNumber(i));
    if (d < errMin || d > errMax)
      return String.format(""<span class='error'>%s</span>"", bigNumber(d));
    if (d < warnMin || d > warnMax)
      return String.format(""<span class='warning'>%s</span>"", bigNumber(d));
        if (i == 0)
          return String.format(""%,d"", big);
      if (big / divisor < 1024)
        return String.format(""%,.2f%s"", big / divisor, SUFFIXES[i]);","Remove this call to ""exit"" or ensure it is really required."
11dcaf7451a57b21c125610bc5c0138eb5db5da3,server/src/main/java/org/apache/accumulo/server/master/state/MergeStats.java,"    if (total == 1 && info.getRange().isMeta()) {
      // root tablet watcher trying to merge metadata tablets it won't even scan
      log.debug(""ignoring merge of "" + info.getRange());
      return state;
    }
    if (extent.isMeta())
      range = new Range(Constants.METADATA_ROOT_TABLET_KEYSPACE);",Complete the task associated to this TODO comment.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/iterators/RegExIterator.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/iterator/FieldIndexIterator.java,"package org.apache.accumulo.examples.wikisearch.iterator;
import org.apache.accumulo.examples.wikisearch.function.QueryFunctions;
import org.apache.accumulo.examples.wikisearch.util.FieldIndexKeyParser;","Rename ""table"" which hides the field declared at line 107."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/bulk/Merge.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
190fc92eab965a787f19797fda3754bece6a1ae2,server/src/main/java/org/apache/accumulo/server/master/Master.java,"import org.apache.accumulo.server.master.tableOps.ExportTable;
import org.apache.accumulo.server.master.tableOps.ImportTable;
        case IMPORT: {
          String tableName = ByteBufferUtil.toString(arguments.get(0));
          String exportDir = ByteBufferUtil.toString(arguments.get(1));
          
          verify(c, check(c, SystemPermission.CREATE_TABLE));
          checkNotMetadataTable(tableName, TableOperation.CREATE);
          checkTableName(tableName, TableOperation.CREATE);
          
          fate.seedTransaction(opid, new TraceRepo<Master>(new ImportTable(c.user, tableName, exportDir)), autoCleanup);
          break;
        }
        case EXPORT: {
          String tableName = ByteBufferUtil.toString(arguments.get(0));
          String exportDir = ByteBufferUtil.toString(arguments.get(1));
          
          String tableId = checkTableId(tableName, TableOperation.EXPORT);
          
          verify(c, tableId, TableOperation.EXPORT, check(c, tableId, TablePermission.READ));
          checkNotMetadataTable(tableName, TableOperation.EXPORT);
          
          fate.seedTransaction(opid, new TraceRepo<Master>(new ExportTable(tableName, tableId, exportDir)), autoCleanup);
          break;
        }
",Rename this package name to match the regular expression '^[a-z]+(\.[a-z][a-z0-9]*)*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/BadArgumentException.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
b73ccad222de18623aa25baa608039f873e93e7c,test/src/main/java/org/apache/accumulo/test/functional/PermissionsTest.java,"import org.apache.accumulo.core.security.tokens.AccumuloToken;
          root_conn.securityOperations().createUser(new UserPassToken(user, password.getBytes()));
          root_conn.securityOperations().createUser(new UserPassToken(user, password.getBytes()));
          test_user_conn.securityOperations().createUser(new UserPassToken(user, password.getBytes()));
          root_conn.securityOperations().createUser(new UserPassToken(user, password.getBytes()));
          root_conn.securityOperations().createUser(new UserPassToken(user, password.getBytes()));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
9e2ebc51b9cf1b2e58dac56ce49caf916a1cfeec,src/core/src/main/java/org/apache/accumulo/core/iterators/user/RegExFilter.java,"/**
 * A Filter that matches entries based on Java regular expressions.
 */",1 duplicated blocks of code must be removed.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/image/TableOp.java,"  
  @Override
  public void visit(State state, Properties props) throws Exception {
    // choose a table
    Random rand = new Random();
    String tableName;
    if (rand.nextInt(10) < 8) {
      tableName = state.getString(""imageTableName"");
    } else {
      tableName = state.getString(""indexTableName"");
    
    // check if chosen table exists
    Connector conn = state.getConnector();
    TableOperations tableOps = conn.tableOperations();
    if (tableOps.exists(tableName) == false) {
      log.error(""Table "" + tableName + "" does not exist!"");
      return;
    }
    
    // choose a random action
    int num = rand.nextInt(10);
    if (num > 6) {
      log.debug(""Retrieving info for "" + tableName);
      tableOps.getLocalityGroups(tableName);
      tableOps.getProperties(tableName);
      tableOps.getSplits(tableName);
      tableOps.list();
    } else {
      log.debug(""Clearing locator cache for "" + tableName);
      tableOps.clearLocatorCache(tableName);
    }
    
    if (rand.nextInt(10) < 3) {
      Map<String,Set<Text>> groups = tableOps.getLocalityGroups(state.getString(""imageTableName""));
      
      if (groups.size() == 0) {
        log.debug(""Adding locality groups to "" + state.getString(""imageTableName""));
        groups = ImageFixture.getLocalityGroups();
      } else {
        log.debug(""Removing locality groups from "" + state.getString(""imageTableName""));
        groups = new HashMap<String,Set<Text>>();
      }
      
      tableOps.setLocalityGroups(state.getString(""imageTableName""), groups);
    }
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ef0798cafb96d9526ca61869ae34ac4dc81f3b9a,server/src/main/java/org/apache/accumulo/server/monitor/servlets/trace/ShowTraceLinkType.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.server.monitor.servlets.trace;

import java.util.Date;

import org.apache.accumulo.core.trace.TraceFormatter;
import org.apache.accumulo.server.monitor.util.celltypes.StringType;
import org.apache.accumulo.trace.thrift.RemoteSpan;

/**
 * 
 */
public class ShowTraceLinkType extends StringType<RemoteSpan> {
  @Override
  public String format(Object obj) {
    if (obj == null)
      return ""-"";
    RemoteSpan span = (RemoteSpan) obj;
    return String.format(""<a href='/trace/show?id=%s'>%s</a>"", Long.toHexString(span.traceId), TraceFormatter.formatDate(new Date(span.start)));
  }
  
  @Override
  public int compare(RemoteSpan o1, RemoteSpan o2) {
    if (o1 == null && o2 == null)
      return 0;
    else if (o1 == null)
      return -1;
    else if (o2 == null)
      return 1;
    return o1.start < o2.start ? -1 : (o1.start == o2.start ? 0 : 1);
  }
}","Define a constant instead of duplicating this literal ""sender"" 20 times."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/examples/src/main/java/org/apache/accumulo/examples/constraints/MaxMutationSize.java,"    if (mutation.estimatedMemoryUsed() < MAX_SIZE)
      return empty;","Remove this call to ""exit"" or ensure it is really required."
7aaaa6f397b6c7409cdb74c99dfc6373cfd1d7e6,core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java,"import java.util.ArrayList;
import org.apache.accumulo.core.client.admin.DiskUsage;

  @Override
  public List<DiskUsage> getDiskUsage(Set<String> tables) throws AccumuloException, AccumuloSecurityException {

    List<DiskUsage> diskUsages = new ArrayList<DiskUsage>();
    for(String table : tables) {
      TreeSet<String> tree = new TreeSet<String>();
      tree.add(table);
      diskUsages.add(new DiskUsage(tree, 1l));
    }

    return diskUsages;
  }
",Either log or rethrow this exception.
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaInputFormat.java,"package org.apache.accumulo.examples.wikisearch.ingest;
import org.apache.accumulo.examples.wikisearch.reader.AggregatingRecordReader;",2 duplicated blocks of code must be removed.
a943f323b6ef9a614edee55c075eb63567b5c80a,test/src/main/java/org/apache/accumulo/test/GetMasterStats.java,"import org.apache.accumulo.server.security.SystemCredentials;
import org.apache.accumulo.trace.instrument.Tracer;
      stats = client.getMasterStats(Tracer.traceInfo(), SystemCredentials.get().getAsThrift());",Move this constructor to comply with Java Code Conventions.
fdf2ae06fdcfa7ec956a5c5cc7c150c871403838,src/trace/src/main/java/cloudtrace/instrument/receivers/AsyncSpanReceiver.java,"    }, millis, millis);","Remove the literal ""true"" boolean value."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/client/admin/TimeType.java,"package org.apache.accumulo.core.client.admin;

/**
 * The type of ordering to use for the table's entries (default is MILLIS)
 */
public enum TimeType {
	/**
	 * Used to guarantee ordering of data sequentially as inserted
	 */
	LOGICAL,

	/**
	 * This is the default. Tries to ensure that inserted data is stored with
	 * the timestamp closest to the machine's time to the nearest millisecond,
	 * without going backwards to guarantee insertion sequence. Note that using
	 * this time type can cause time to ""skip"" forward if a machine has a time
	 * that is too far off. NTP is recommended when using this type.
	 */
	MILLIS
}",Return empty string instead.
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/filedata/ChunkInputStream.java,package org.apache.accumulo.examples.simple.filedata;,2 duplicated blocks of code must be removed.
50f47f759f1fcda4b68716a07b74baab440c7251,proxy/src/main/java/org/apache/accumulo/proxy/ProxyServer.java,"  public boolean authenticateUser(ByteBuffer login, String principal, Map<String, String> properties) throws TException {
      return getConnector(login).securityOperations().authenticateUser(principal, getToken(principal, properties));
      AuthenticationToken token = getToken(principal, loginProperties);
  private AuthenticationToken getToken(String principal, Map<String, String> properties) throws AccumuloSecurityException, AccumuloException {
    return instance.getAuthenticator().login(principal, props);","Remove this unused method parameter ""principal""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/AboutCommand.java,"    if (cl.hasOption(verboseOption.getOpt()))
      shellState.printVerboseInfo();","Remove this call to ""exit"" or ensure it is really required."
71d9e509afdee1d5d2eb214dc6a9aa4663ddb5ab,core/src/main/java/org/apache/accumulo/core/util/LocalityGroupUtil.java,  public static final Set<ByteSequence> EMPTY_CF_SET = Collections.emptySet();,"Make this member ""protected""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletTime.java,"      if (time > lastTime)
        lastTime = time;
        if (mutations.size() == 0)
          return lastTime;
      if (mutations.size() == 0)
        return getTime();","Remove this call to ""exit"" or ensure it is really required."
aea4313624e0bbe815c3de2c0a6aa4af4ad82c26,server/src/main/java/org/apache/accumulo/server/util/CheckForMetadataProblems.java,      throw new RuntimeException();,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/InputFormatBase.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/format/BinaryFormatter.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
5bd33fa1e9625e3c088ee39f626c256aca75b0da,examples/simple/src/test/java/org/apache/accumulo/examples/simple/filedata/ChunkInputStreamTest.java,"import org.apache.accumulo.core.client.BatchWriterConfig;
    BatchWriter bw = conn.createBatchWriter(""test"", new BatchWriterConfig());","Remove this unused method parameter ""e""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/MultiTableBatchWriter.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/BatchWrite.java,"  
  @Override
  public void visit(State state, Properties props) throws Exception {
    Connector conn = state.getConnector();
    Random rand = (Random) state.get(""rand"");
    
    @SuppressWarnings(""unchecked"")
    List<String> tableNames = (List<String>) state.get(""tables"");
    
    String tableName = tableNames.get(rand.nextInt(tableNames.size()));
    
    try {
      BatchWriter bw = conn.createBatchWriter(tableName, 1000000, 60000l, 3);
      try {
        int numRows = rand.nextInt(100000);
        for (int i = 0; i < numRows; i++) {
          Mutation m = new Mutation(String.format(""%016x"", Math.abs(rand.nextLong())));
          long val = Math.abs(rand.nextLong());
          for (int j = 0; j < 10; j++) {
            m.put(""cf"", ""cq"" + j, new Value(String.format(""%016x"", val).getBytes()));
          }
          
          bw.addMutation(m);
      } finally {
        bw.close();
      }
      
      log.debug(""Wrote to "" + tableName);
    } catch (TableNotFoundException e) {
      log.debug(""BatchWrite "" + tableName + "" failed, doesnt exist"");
    } catch (TableOfflineException e) {
      log.debug(""BatchWrite "" + tableName + "" failed, offline"");
    } catch (MutationsRejectedException mre) {
      if (mre.getCause() instanceof TableDeletedException) log.debug(""BatchWrite "" + tableName + "" failed, table deleted"");
      else if (mre.getCause() instanceof TableOfflineException) log.debug(""BatchWrite "" + tableName + "" failed, offline"");
      else throw mre;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f37ee0b85f8d71ed03d655d7e4b4ff53c7d74314,core/src/main/java/org/apache/accumulo/core/iterators/user/IntersectingIterator.java," * This iterator will *ignore* any columnFamilies passed to {@link #seek(Range, Collection, boolean)} as it performs intersections over terms. Extending classes
 * should override the {@link TermSource#seekColfams} in their implementation's {@link #init(SortedKeyValueIterator, Map, IteratorEnvironment)} method.
  public static class TermSource {
      this.seekColfams = Collections.<ByteSequence> singletonList(new ArrayByteSequence(term.getBytes(), 0, term.getLength()));",Reduce the number of conditional operators (6) used in the expression (maximum allowed 3).
bfc44fd328c471d06b480835ba826b706dcf6816,core/src/main/java/org/apache/accumulo/core/util/shell/commands/GetSplitsCommand.java,"import org.apache.accumulo.core.security.Authorizations;
        final Scanner scanner = shellState.getConnector().createScanner(Constants.METADATA_TABLE_NAME, Authorizations.EMPTY);","Remove this unused method parameter ""range""."
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/client/impl/ThriftTransportKey.java,"  private final String location;
  private final int port;
  private final long timeout;
  
  private int hash = -1;
  
  ThriftTransportKey(String location, int port, long timeout) {
    ArgumentChecker.notNull(location);
    this.location = location;
    this.port = port;
    this.timeout = timeout;
  }
  
  String getLocation() {
    return location;
  }
  
  int getPort() {
    return port;
  }
  
  long getTimeout() {
    return timeout;
  }
  
  @Override
  public boolean equals(Object o) {
    if (!(o instanceof ThriftTransportKey)) return false;
    ThriftTransportKey ttk = (ThriftTransportKey) o;
    return location.equals(ttk.location) && port == ttk.port && timeout == ttk.timeout;
  }
  
  @Override
  public int hashCode() {
    if (hash == -1) hash = (location + Integer.toString(port) + Long.toString(timeout)).hashCode();
    return hash;
  }
  
  @Override
  public String toString() {
    return location + "":"" + Integer.toString(port) + "" ("" + Long.toString(timeout) + "")"";
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c82c4316ad90ee7370c5919efb8ded65bb50b302,start/src/main/java/org/apache/accumulo/start/classloader/AccumuloClassLoader.java,"      ""$ACCUMULO_CONF_DIR,\n"" + 
    if (System.getenv(""ACCUMULO_CONF_DIR"") != null) {
      // accumulo conf dir should be set
      SITE_CONF = System.getenv(""ACCUMULO_CONF_DIR"");
    } else if (System.getenv(""ACCUMULO_HOME"") != null) {
      // if no accumulo conf dir, try accumulo home default","Remove the literal ""false"" boolean value."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/ChangeAuthorizations.java,"package org.apache.accumulo.server.test.randomwalk.concurrent;

import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.Random;

import org.apache.accumulo.core.client.AccumuloSecurityException;
import org.apache.accumulo.core.client.Connector;
import org.apache.accumulo.core.security.Authorizations;
import org.apache.accumulo.server.test.randomwalk.State;
import org.apache.accumulo.server.test.randomwalk.Test;


public class ChangeAuthorizations extends Test {

    @Override
    public void visit(State state, Properties props) throws Exception {
        Connector conn = state.getConnector();
        
        Random rand = (Random) state.get(""rand"");
        
        @SuppressWarnings(""unchecked"")
        List<String> userNames = (List<String>) state.get(""users"");
        
        String userName = userNames.get(rand.nextInt(userNames.size()));
        try {
            List<byte[]> auths = new ArrayList<byte[]>(conn.securityOperations().getUserAuthorizations(userName).getAuthorizations());

            if (rand.nextBoolean()) {
                String authorization = String.format(""a%d"", rand.nextInt(5000));
                log.debug(""adding authorization "" + authorization);
                auths.add(authorization.getBytes());
            } else {
                if (auths.size() > 0) {
                    log.debug(""removing authorization "" + new String(auths.remove(0)));
                }
            }
            conn.securityOperations().changeUserAuthorizations(userName, new Authorizations(auths));
        } catch (AccumuloSecurityException ex) {
            log.debug(""Unable to change user authorizations: "" + ex.getCause());
        } 
    } 

}",Return empty string instead.
ae6551d8f7566204bf43b444793831f44be48352,minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloCluster.java,"package org.apache.accumulo.minicluster;
      } catch (IOException e) {}
    argList.addAll(Arrays.asList(javaBin, ""-cp"", classpath, ""-Xmx128m"", ""-XX:+UseConcMarkSweepGC"", ""-XX:CMSInitiatingOccupancyFraction=75"",
        Main.class.getName(), className));
    String cp = System.getenv(""ACCUMULO_HOME"") + ""/lib/.*.jar,"" + ""$ZOOKEEPER_HOME/zookeeper[^.].*.jar,"" + ""$HADOOP_HOME/[^.].*.jar,""
        + ""$HADOOP_HOME/lib/[^.].*.jar,"" + ""$HADOOP_PREFIX/share/hadoop/common/.*.jar,"" + ""$HADOOP_PREFIX/share/hadoop/common/lib/.*.jar,""
        + ""$HADOOP_PREFIX/share/hadoop/hdfs/.*.jar,"" + ""$HADOOP_PREFIX/share/hadoop/mapreduce/.*.jar"";",Either log or rethrow this exception.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/file/blockfile/cache/SimpleBlockCache.java,"  private static class Ref extends SoftReference<byte[]> {
    public String blockId;
    public Ref(String blockId, byte buf[], ReferenceQueue<byte[]> q) {
      super(buf, q);
      this.blockId = blockId;
  }
  
  private Map<String,Ref> cache = new HashMap<String,Ref>();
  
  private ReferenceQueue<byte[]> q = new ReferenceQueue<byte[]>();
  public int dumps = 0;
  
  /**
   * Constructor
   */
  public SimpleBlockCache() {
    super();
  }
  
  void processQueue() {
    Ref r;
    while ((r = (Ref) q.poll()) != null) {
      cache.remove(r.blockId);
      dumps++;
  }
  
  /**
   * @return the size
   */
  public synchronized int size() {
    processQueue();
    return cache.size();
  }
  
  public synchronized byte[] getBlock(String blockName) {
    processQueue(); // clear out some crap.
    Ref ref = cache.get(blockName);
    if (ref == null) return null;
    return ref.get();
  }
  
  public synchronized void cacheBlock(String blockName, byte buf[]) {
    cache.put(blockName, new Ref(blockName, buf, q));
  }
  
  public synchronized void cacheBlock(String blockName, byte buf[], boolean inMemory) {
    cache.put(blockName, new Ref(blockName, buf, q));
  }
  
  public void shutdown() {
    // noop
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,server/src/main/java/org/apache/accumulo/server/client/BulkImporter.java,"import org.apache.accumulo.core.security.thrift.Credentials;
import org.apache.accumulo.trace.instrument.TraceRunnable;
import org.apache.accumulo.trace.instrument.Tracer;
  public static List<String> bulkLoad(AccumuloConfiguration conf, Instance instance, Credentials creds, long tid, String tableId, List<String> files,
  private Credentials credentials;
  public BulkImporter(AccumuloConfiguration conf, Instance instance, Credentials credentials, long tid, String tableId, boolean setTime) {
  private Map<Path,List<KeyExtent>> assignMapFiles(AccumuloConfiguration acuConf, Instance instance, Configuration conf, Credentials credentials, FileSystem fs,
    Credentials credentials;
    public AssignmentTask(Credentials credentials, Map<Path,List<KeyExtent>> assignmentFailures, String tableName, String location,
  private Map<Path,List<KeyExtent>> assignMapFiles(Credentials credentials, String tableName, Map<Path,List<AssignmentInfo>> assignments,
  private List<KeyExtent> assignMapFiles(Credentials credentials, String location, Map<KeyExtent,List<PathSize>> assignmentsPerTablet) throws AccumuloException,
        List<TKeyExtent> failures = client.bulkImport(Tracer.traceInfo(), credentials, tid, Translator.translate(files, Translator.KET), setTime);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/Fixture.java,"  
  protected final Logger log = Logger.getLogger(this.getClass());
  
  public abstract void setUp(State state) throws Exception;
  
  public abstract void tearDown(State state) throws Exception;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
93773813e5839ac9ffb4f5a2b2b70bcedb106286,core/src/main/java/org/apache/accumulo/core/util/shell/commands/OfflineCommand.java,"import org.apache.accumulo.core.util.MetadataTable;
    if (tableName.equals(MetadataTable.NAME)) {
      Shell.log.info(""  You cannot take the "" + MetadataTable.NAME + "" offline."");","Use ""Long.toString"" instead."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/tabletserver/MinorCompactor.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
2db5ce6186e32c451328154b024951cc5090505f,server/src/main/java/org/apache/accumulo/server/gc/SimpleGarbageCollector.java,"import org.apache.accumulo.core.util.NamingThreadFactory;
      GarbageCollectWriteAheadLogs walogCollector = new GarbageCollectWriteAheadLogs(instance, fs);
    ExecutorService deleteThreadPool = Executors.newFixedThreadPool(numDeleteThreads, new NamingThreadFactory(""deleting""));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
897613840017ed4ed636efa1c988df830ab05b92,core/src/main/java/org/apache/accumulo/core/client/ZooKeeperInstance.java,"  public Connector getConnector(org.apache.accumulo.core.security.thrift.AuthInfo auth) throws AccumuloException, AccumuloSecurityException {",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
2496efb93eacc4bd6695cdeaeb4d9acd2917bd91,server/src/main/java/org/apache/accumulo/server/security/handler/InsecureAuthenticator.java,"  public void initialize(String instanceId, boolean initialize) {","Remove this call to ""exit"" or ensure it is really required."
ecb758fdf4900793f1b82ed067c541d8642afd1d,server/src/test/java/org/apache/accumulo/server/logger/LogFileTest.java,"import org.apache.accumulo.server.data.ServerMutation;
    value.mutations = Arrays.asList(mutations != null ? mutations : new Mutation[0]);
    assertEquals(value.mutations, valueResult.mutations);
    Mutation m = new ServerMutation(new Text(""row""));
    assertEquals(value.mutations, Arrays.asList(m));
    assertEquals(value.mutations, Arrays.asList(m, m));","Remove this unused method parameter ""timestamp""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousQuery.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
10b44e79544b5f16cd747de7926af23739bf5726,server/src/main/java/org/apache/accumulo/server/master/Master.java,"import org.apache.accumulo.server.ServerOpts;
      final TServerInstance doomed = tserverSet.find(tabletServer);
    clientService = TServerUtils.startServer(getSystemConfiguration(), hostname, Property.MASTER_CLIENTPORT, processor, ""Master"", ""Master Client Service Handler"", null,
    final String masterClientAddress = hostname + "":"" + getSystemConfiguration().getPort(Property.MASTER_CLIENTPORT);
      ServerOpts opts = new ServerOpts();
      opts.parseArgs(""master"", args);
      String hostname = opts.getAddress();","Remove this unused method parameter ""threadName""."
b651adf29c5e8419e153616a2cbf6f7bdf75cf92,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/InputFormatBase.java,"    for (Entry<String,String> entry : cfg.getOptions().entrySet()) {",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,examples/simple/src/main/java/org/apache/accumulo/examples/simple/helloworld/ReadData.java,"import org.apache.accumulo.core.cli.ClientOnRequiredTable;
import com.beust.jcommander.Parameter;

  
  static class Opts extends ClientOnRequiredTable {
    @Parameter(names=""--startKey"")
    String startKey;
    @Parameter(names=""--endKey"")
    String endKey;
  }
  
    Opts opts = new Opts();
    opts.parseArgs(ReadData.class.getName(), args);
    Connector connector = opts.getConnector();
    Scanner scan = connector.createScanner(opts.tableName, opts.auths);
    scan.setBatchSize(opts.scanBatchSize);
    if (opts.startKey != null)
      start = new Key(new Text(opts.startKey));
    if (opts.endKey != null)
      end = new Key(new Text(opts.endKey));","Remove this call to ""exit"" or ensure it is really required."
61037d2cd0c36bed56add225b68d6b2946f8e0e8,core/src/main/java/org/apache/accumulo/core/iterators/IteratorUtil.java,"import org.apache.accumulo.core.constraints.DefaultKeySizeConstraint;

    props.put(Property.TABLE_CONSTRAINT_PREFIX.toString() + ""1"", DefaultKeySizeConstraint.class.getName());
",Add a default case to this switch.
b1945d4dd4a2327314b35de5442a3028c7d557aa,src/examples/src/main/java/org/apache/accumulo/examples/shard/Query.java,"    IntersectingIterator.setColumnFamilies(ii, columns);",Either log or rethrow this exception.
bfc44fd328c471d06b480835ba826b706dcf6816,core/src/main/java/org/apache/accumulo/core/util/MetadataTable.java,"import org.apache.accumulo.core.security.Authorizations;
    @Override
    @Override
    @Override
        
  
  
    Scanner scanner = instance.getConnector(credentials.getPrincipal(), CredentialHelper.extractToken(credentials)).createScanner(
        Constants.METADATA_TABLE_NAME, Authorizations.EMPTY);","Remove this unused method parameter ""range""."
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/SleepCommand.java,"  
  @Override
  public int execute(String fullCommand, CommandLine cl, Shell shellState) throws Exception {
    double secs = Double.parseDouble(cl.getArgs()[0]);
    Thread.sleep((long) (secs * 1000));
    return 0;
  }
  
  @Override
  public String description() {
    return ""sleep for the given number of seconds"";
  }
  
  @Override
  public int numArgs() {
    return 1;
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/NativeMapConcurrencyTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/file/blockfile/impl/CachableBlockFile.java,"    private final CacheEntry cb;
      this(new SeekableByteArrayInputStream(buf), buf.length, cb);
    private CachedBlockRead(SeekableByteArrayInputStream seekableInput, long size, CacheEntry cb) {
        super(seekableInput, size);
        this.seekableInput = seekableInput;
        this.cb = cb;
      }","Remove this unused private ""appendProp"" method."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,contrib/accumulo_sample/ingest/src/main/java/iterator/TotalAggregatingIterator.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
f765888e3decac70571cf836e5300fb9a015b38e,examples/simple/src/main/java/org/apache/accumulo/examples/simple/client/RandomBatchScanner.java,"    log.info(String.format(""%6.2f lookups/sec %6.2f secs%n"", num / ((t2 - t1) / 1000.0), ((t2 - t1) / 1000.0)));
    log.info(String.format(""num results : %,d%n"", receiver.count));",Use isEmpty() to check whether the collection is empty or not.
e3db57fec95d5dbd27aef1e06be204d577ceffa4,contrib/accumulo_sample/query/src/main/java/iterator/OptimizedQueryIterator.java,"import org.apache.accumulo.core.data.PartialKey;
import org.apache.log4j.Logger;
  private long seekTime = 0;
          Key endKey = eventKey.followingKey(PartialKey.ROW_COLFAM);
          Key startKey = new Key(eventKey.getRow(), eventKey.getColumnFamily());
          Range eventRange = new Range(startKey, endKey);
    if (null != range.getEndKey() && range.getEndKey().getColumnFamily() != null && range.getEndKey().getColumnFamily().getLength() != 0) {","Remove this unused ""seekTime"" private field."
ab3753db21f390e0c58b33d2e2b714708e2ae8e1,core/src/test/java/org/apache/accumulo/core/client/mapreduce/AccumuloFileOutputFormatTest.java,"import org.apache.hadoop.conf.Configuration;
  @Test
  public void validateConfiguration() throws IOException, InterruptedException {
    Configuration conf = job.getConfiguration();
    AccumuloConfiguration acuconf = AccumuloConfiguration.getDefaultConfiguration();
    
    int a = 7;
    long b = 300l;
    long c = 50l;
    long d = 10l;
    String e = ""type"";
    
    AccumuloFileOutputFormat.setReplication(conf, a);
    AccumuloFileOutputFormat.setDFSBlockSize(conf, b);
    AccumuloFileOutputFormat.setCompressedBlockSize(conf, c);
    AccumuloFileOutputFormat.setCompressedBlockSizeIndex(conf, d);
    AccumuloFileOutputFormat.setCompressionType(conf, e);
    
    assertEquals(a, conf.getInt(Property.TABLE_FILE_REPLICATION.getKey(), acuconf.getCount(Property.TABLE_FILE_REPLICATION)));
    assertEquals(b, conf.getLong(Property.TABLE_FILE_BLOCK_SIZE.getKey(), acuconf.getMemoryInBytes(Property.TABLE_FILE_BLOCK_SIZE)));
    assertEquals(c, conf.getLong(Property.TABLE_FILE_COMPRESSED_BLOCK_SIZE.getKey(), acuconf.getMemoryInBytes(Property.TABLE_FILE_COMPRESSED_BLOCK_SIZE)));
    assertEquals(d,
        conf.getLong(Property.TABLE_FILE_COMPRESSED_BLOCK_SIZE_INDEX.getKey(), acuconf.getMemoryInBytes(Property.TABLE_FILE_COMPRESSED_BLOCK_SIZE_INDEX)));
    assertEquals(e, conf.get(Property.TABLE_FILE_COMPRESSION_TYPE.getKey(), acuconf.get(Property.TABLE_FILE_COMPRESSION_TYPE)));","Refactor this method to throw at most one checked exception instead of: java.io.IOException, java.lang.InterruptedException"
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/Setup.java,"package org.apache.accumulo.test.randomwalk.concurrent;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/monitor/util/TableColumn.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    private String title;
    private CellType<T> type;
    private String legend;
    
    public TableColumn(String title, CellType<T> type, String legend) {
        this.title = title;
        this.type = type != null ? type : new StringType<T>();
        this.legend = legend;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }
    
    public String getTitle() {
        return title;
    }
    
    public String getLegend() {
        return legend;
    }
    
    public CellType<T> getCellType() {
        return type;
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/util/RandomWriter.java,"import org.apache.accumulo.server.cli.ClientOnDefaultTable;
import com.beust.jcommander.Parameter;

  static class Opts extends ClientOnDefaultTable {
    @Parameter(names=""--count"", description=""number of mutations to write"", required=true)
    long count;
    
    Opts(String table) { super(table); }
  }
  public static void main(String[] args) throws Exception {
    Opts opts = new Opts(table_name);
    opts.parseArgs(RandomWriter.class.getName(), args);
    
    log.info(""starting at "" + start + "" for user "" + opts.user);
      Connector connector = opts.getConnector();
      BatchWriter bw = connector.createBatchWriter(opts.getTableName(), opts.getBatchWriterConfig());
      log.info(""Writing "" + opts.count + "" mutations..."");
      bw.addMutations(new RandomMutationGenerator(opts.count));
    } catch (Exception e) {","Remove this call to ""exit"" or ensure it is really required."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/mock/MockBatchScanner.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
4368f4a148c13a6c537557f0c0129d8bf3964307,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/HelpCommand.java,"  private Option noWrapOpt;
    int numColumns = shellState.getReader().getTermwidth();
    if (cl.hasOption(noWrapOpt.getOpt()))
      numColumns = Integer.MAX_VALUE;
    
      if (numColumns < 40)
        throw new IllegalArgumentException(""numColumns must be at least 40 (was "" + numColumns + "")"");
        if (!(c instanceof HiddenCommand)) {
          String n = c.getName();
          String s = c.description();
          if (s == null)
            s = """";
          int beginIndex = 0;
          int endIndex = s.length();
          while (beginIndex < endIndex && s.charAt(beginIndex) == ' ')
            beginIndex++;
          String dash = ""-"";
          while (endIndex > beginIndex && endIndex - beginIndex + i + 5 > numColumns) {
            endIndex = s.lastIndexOf("" "", numColumns + beginIndex - i - 5);
            if (endIndex == -1 || endIndex < beginIndex) {
              endIndex = numColumns + beginIndex - i - 5 - 1;
              output.add(String.format(""%-"" + i + ""s  %s  %s-"", n, dash, s.substring(beginIndex, endIndex)));
              dash = "" "";
              beginIndex = endIndex;
            } else {
              output.add(String.format(""%-"" + i + ""s  %s  %s"", n, dash, s.substring(beginIndex, endIndex)));
              dash = "" "";
              beginIndex = endIndex + 1;
            }
            n = """";
            endIndex = s.length();
            while (beginIndex < endIndex && s.charAt(beginIndex) == ' ')
              beginIndex++;
          }
          output.add(String.format(""%-"" + i + ""s  %s  %s"", n, dash, s.substring(beginIndex, endIndex)));
        }
        c.printHelp(numColumns);
    noWrapOpt = new Option(""nw"", ""no-wrap"", false, ""disables wrapping of output"");
    o.addOption(noWrapOpt);",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
368f68225070941364940adb5472b517e713e27d,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/CreateTableCommand.java,"import org.apache.accumulo.core.util.format.DefaultFormatter;
import org.apache.accumulo.core.util.format.Formatter;
import org.apache.accumulo.start.classloader.AccumuloClassLoader;
  private Option createTableOptFormatter;
      TableNotFoundException, IOException, ClassNotFoundException {

    

    // Load custom formatter if set
    if (cl.hasOption(createTableOptFormatter.getOpt())) {
        String formatterClass = cl.getOptionValue(createTableOptFormatter.getOpt());
        
        shellState.setFormatterClass(tableName, AccumuloClassLoader.loadClass(formatterClass, Formatter.class));
        
        shellState.getConnector().tableOperations().setProperty(tableName, Property.TABLE_FORMATTER_CLASS.toString(), formatterClass);   
    }    
    createTableOptFormatter = new Option(""f"", ""formatter"", false, ""default formatter to set"");
    o.addOption(createTableOptFormatter);","Remove this unused private ""debugQuery"" method."
f343540ca4b9e4359c43d6f990e486de960b637c,core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteIterCommand.java,"    String tableName = OptUtil.getTableOpt(cl, shellState);",Either log or rethrow this exception.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/shard/SortTool.java,"  protected final Logger log = Logger.getLogger(this.getClass());
  private String outputDir;
  private String seqFile;
  private String splitFile;
  private Collection<Text> splits;
  
  public SortTool(String seqFile, String outputDir, String splitFile, Collection<Text> splits) {
    this.outputDir = outputDir;
    this.seqFile = seqFile;
    this.splitFile = splitFile;
    this.splits = splits;
  }
  
  public int run(String[] args) throws Exception {
    Job job = new Job(getConf(), this.getClass().getSimpleName());
    job.setJarByClass(this.getClass());
    if (job.getJar() == null) {
      log.error(""M/R requires a jar file!  Run mvn package."");
      return 1;
    job.setInputFormatClass(SequenceFileInputFormat.class);
    SequenceFileInputFormat.setInputPaths(job, seqFile);
    
    job.setPartitionerClass(KeyRangePartitioner.class);
    KeyRangePartitioner.setSplitFile(job, splitFile);
    
    job.setMapOutputKeyClass(Key.class);
    job.setMapOutputValueClass(Value.class);
    
    job.setNumReduceTasks(splits.size() + 1);
    
    job.setOutputFormatClass(AccumuloFileOutputFormat.class);
    AccumuloFileOutputFormat.setOutputPath(job, new Path(outputDir));
    
    job.waitForCompletion(true);
    return job.isSuccessful() ? 0 : 1;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a63607a89356ef85af81e377b289fafe413687c5,server/src/main/java/org/apache/accumulo/server/gc/SimpleGarbageCollector.java,"import org.apache.accumulo.core.gc.thrift.GCMonitorService.Processor;
    Processor<Iface> processor = new Processor<Iface>(TraceWrap.service(this));","Immediately return this expression instead of assigning it to the temporary variable ""client""."
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/iterator/OrIterator.java,package org.apache.accumulo.examples.wikisearch.iterator;,"Rename ""table"" which hides the field declared at line 107."
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,core/src/main/java/org/apache/accumulo/core/security/tokens/InstanceTokenWrapper.java,"import org.apache.accumulo.core.client.AccumuloSecurityException;
import org.apache.log4j.Logger;
  private SecurityToken token; // required
  Logger log = Logger.getLogger(InstanceTokenWrapper.class);
  public InstanceTokenWrapper(SecurityToken token, String instance) {
  public InstanceTokenWrapper(ThriftInstanceTokenWrapper credentials) throws AccumuloSecurityException {
  public SecurityToken getToken() {
  public InstanceTokenWrapper setToken(SecurityToken token) {
  public ThriftInstanceTokenWrapper toThrift() throws AccumuloSecurityException {",Either log or rethrow this exception.
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/master/state/SetGoalState.java,import org.apache.accumulo.fate.zookeeper.ZooUtil.NodeExistsPolicy;,"Remove this call to ""exit"" or ensure it is really required."
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/metanalysis/IndexMeta.java,"import java.util.ArrayList;
import org.apache.accumulo.server.cli.ClientOpts;
import com.beust.jcommander.Parameter;

  static class Opts extends ClientOpts {
    @Parameter(description=""<logfile> { <logfile> ...}"")
    List<String> logFiles = new ArrayList<String>();
  }
    Opts opts = new Opts();
    opts.parseArgs(IndexMeta.class.getName(), args);
    AccumuloOutputFormat.setZooKeeperInstance(job.getConfiguration(), opts.instance, opts.zookeepers);
    AccumuloOutputFormat.setOutputInfo(job.getConfiguration(), opts.user, opts.getPassword(), false, null);
    Connector conn = opts.getConnector();","Remove this call to ""exit"" or ensure it is really required."
a1c578ff92dc17f40e9ea8ce086be5b54f003162,core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloOutputFormat.java,  private static final int DEFAULT_MAX_LATENCY = 60 * 1000; // 1 minute,2 duplicated blocks of code must be removed.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/util/AddressUtil.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/gc/SimpleGarbageCollector.java,"import org.apache.accumulo.core.cli.Help;
import com.beust.jcommander.Parameter;

  static class Opts extends Help {
    @Parameter(names={""-v"", ""--verbose""}, description=""extra information will get printed to stdout also"")
    boolean verbose = false;
    @Parameter(names={""-s"", ""--safemode""}, description=""safe mode will not delete files"")
    boolean safeMode = false;
    @Parameter(names={""-o"", ""--offline""}, description=
      ""offline mode will run once and check data files directly; this is dangerous if accumulo is running or not shut down properly"")
    boolean offline = false;
    @Parameter(names={""-a"", ""--address""}, description=""specify our local address"")
    String address = null;
    Opts opts = new Opts();
    opts.parseArgs(SimpleGarbageCollector.class.getName(), args);
    
    if (opts.safeMode)
      gc.setSafeMode();
    if (opts.offline)
      gc.setOffline();
    if (opts.verbose)
      gc.setVerbose();
    if (opts.address != null)
      gc.useAddress(address);
    long maxMessageSize = instance.getConfiguration().getMemoryInBytes(Property.GENERAL_MAX_MESSAGE_SIZE);
      TServerUtils.startTServer(port, processor, this.getClass().getSimpleName(), ""GC Monitor Service"", 2, 1000, maxMessageSize);","Remove this call to ""exit"" or ensure it is really required."
35f8e2b1868cea9849efae7fae21e8ac789a0817,core/src/main/java/org/apache/accumulo/core/trace/InstanceUserPassword.java,"import java.nio.charset.Charset;


  private static final Charset utf8 = Charset.forName(""UTF8"");
    this.password = password.getBytes(utf8);",Move this variable to comply with Java Code Conventions.
5c97efc2576278f4b8b6b004ded78c98251cda24,examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/TeraSortIngest.java,"import org.apache.accumulo.core.client.BatchWriterConfig;
 * 
      @Override
      @Override
      @Override
      @Override
      @Override
      @Override
    @Override
    @Override
    @Override
    @Parameter(names = ""--count"", description = ""number of rows to ingest"", required = true)
    @Parameter(names = {""-nk"", ""--minKeySize""}, description = ""miniumum key size"", required = true)
    @Parameter(names = {""-xk"", ""--maxKeySize""}, description = ""maximum key size"", required = true)
    @Parameter(names = {""-nv"", ""--minValueSize""}, description = ""minimum key size"", required = true)
    @Parameter(names = {""-xv"", ""--maxValueSize""}, description = ""maximum key size"", required = true)
    @Parameter(names = ""--splits"", description = ""number of splits to create in the table"")
    BatchWriterConfig bwConfig = new BatchWriterConfig().setMaxMemory(10L * 1000 * 1000);
    AccumuloOutputFormat.setBatchWriterOptions(job, bwConfig);",Return empty string instead.
9d13f546ebb1e716c1d25c35225190b1b2805975,src/core/src/test/java/org/apache/accumulo/core/iterators/LargeRowFilterTest.java,import org.apache.accumulo.core.iterators.user.LargeRowFilter;,"Remove this unused private ""match"" method."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/tabletserver/EndOfTableException.java,"package org.apache.accumulo.server.tabletserver;

public class EndOfTableException extends Exception {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

}",Return empty string instead.
8025e96e0b108063f3028eb06b78847de2fa95d4,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/iterator/OptimizedQueryIterator.java,package org.apache.accumulo.examples.wikisearch.iterator;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f765888e3decac70571cf836e5300fb9a015b38e,server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousWalk.java,"        System.out.printf(""SRQ %d %s %d %d%n"", t1, row, (t2 - t1), values.size());
          System.out.printf(""MIS %d %s%n"", t1, row);
          System.err.printf(""MIS %d %s%n"", t1, row);
    System.out.printf(""FSR %d %s %d %d%n"", t1, new String(scanStart), (t2 - t1), count);",Use isEmpty() to check whether the collection is empty or not.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/shard/CloneIndex.java,"  
  @Override
  public void visit(State state, Properties props) throws Exception {
    String indexTableName = (String) state.get(""indexTableName"");
    String tmpIndexTableName = indexTableName + ""_tmp"";
    long t1 = System.currentTimeMillis();
    state.getConnector().tableOperations().flush(indexTableName, null, null, true);
    long t2 = System.currentTimeMillis();
    state.getConnector().tableOperations().clone(indexTableName, tmpIndexTableName, false, new HashMap<String,String>(), new HashSet<String>());
    long t3 = System.currentTimeMillis();
    
    log.debug(""Cloned "" + tmpIndexTableName + "" from "" + indexTableName + "" flush: "" + (t2 - t1) + ""ms clone: "" + (t3 - t2) + ""ms"");
    
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ccaad172643805d56f5dd46cbbc7dcd1a5519cbf,src/server/src/main/java/org/apache/accumulo/server/test/TestIngest.java,import org.apache.accumulo.cloudtrace.instrument.Trace;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
904492ae43ea1ef1cfb6e7ca8e7df6101382a5e7,core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java,"import java.util.List;
   * Starts a full major compaction of the tablets in the range (start, end]. The compaction is preformed even for tablets that have only one file.
   * 
   * @param tableName
   *          the table to compact
   * @param start
   *          first tablet to be compacted contains the row after this row, null means the first tablet in table
   * @param end
   *          last tablet to be merged contains this row, null means the last tablet in table
   * @param iterators
   *          A set of iterators that will be applied to each tablet compacted
   * @param flush
   *          when true, table memory is flushed before compaction starts
   * @param wait
   *          when true, the call will not return until compactions are finished
   */
  public void compact(String tableName, Text start, Text end, List<IteratorSetting> iterators, boolean flush, boolean wait) throws AccumuloSecurityException,
      TableNotFoundException, AccumuloException;
  
  /**","Use ""Long.toString"" instead."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/TablesServlet.java,"    if (numProblems > 0)
      banner(sb, ""error"", String.format(""<a href='/problems'>Table Problems: %d Total</a>"", numProblems));
    if (Monitor.getMmi() != null && Monitor.getMmi().tableMap != null)
      for (Entry<String,TableInfo> te : Monitor.getMmi().tableMap.entrySet())
        tableStats.put(Tables.getPrintableTableNameFromId(tidToNameMap, te.getKey()), te.getValue());
      if (holdTime == null)
        holdTime = new Double(0.);
          if (tss.name != null && locs.contains(tss.name))
            tservers.add(tss);","Remove this call to ""exit"" or ensure it is really required."
6a5500a5b3f34b26386877e332973e7b926aa4ce,core/src/main/java/org/apache/accumulo/core/client/mapreduce/InputFormatBase.java,"import org.apache.accumulo.core.security.CredentialHelper;
import org.apache.accumulo.core.security.thrift.Credential;
import org.apache.accumulo.core.security.thrift.tokens.PasswordToken;
import org.apache.accumulo.core.security.thrift.tokens.SecurityToken;
   * @param principal
   * @param token
   * @throws AccumuloSecurityException 
  public static void setConnectorInfo(Job job, String principal, SecurityToken token) throws AccumuloSecurityException {
    InputConfigurator.setConnectorInfo(CLASS, job.getConfiguration(), principal, token);
   * @see #setConnectorInfo(Job, String, SecurityToken)
   * Gets the serialized token class from the configuration.
   * 
   * @param context
   *          the Hadoop context for the configured job
   * @return the user name
   * @since 1.5.0
   * @see #setConnectorInfo(Job, String, SecurityToken)
   * @see #setConnectorInfo(Job, Path)
   */
  protected static String getTokenClass(JobContext context) {
    return InputConfigurator.getTokenClass(CLASS, context.getConfiguration());
  }
  
  /**
      String principal = getPrincipal(attempt);
      String tokenClass = getTokenClass(attempt);
      byte[] token = getToken(attempt);
        log.debug(""Creating connector with user: "" + principal);
        Connector conn = instance.getConnector(principal, CredentialHelper.extractToken(tokenClass, token));
          scanner = new OfflineScanner(instance, new Credential(principal, tokenClass, ByteBuffer.wrap(token), instance.getInstanceID()), Tables.getTableId(instance,
    try {
      InputConfigurator.setConnectorInfo(CLASS, conf, user, new PasswordToken().setPassword(passwd));
    } catch (AccumuloSecurityException e) {
      throw new RuntimeException(e);
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/client/ClientServiceHandler.java,"import org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader;
  protected final TransactionWatcher transactionWatcher;
      Class test = AccumuloVFSClassLoader.loadClass(className, shouldMatch);","Remove this unused private ""appendProp"" method."
ccaad172643805d56f5dd46cbbc7dcd1a5519cbf,src/server/src/main/java/org/apache/accumulo/server/gc/GarbageCollectWriteAheadLogs.java,"import org.apache.accumulo.cloudtrace.instrument.Span;
import org.apache.accumulo.cloudtrace.instrument.Trace;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/file/keyfunctor/ColumnQualifierFunctor.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
public class ColumnQualifierFunctor implements KeyFunctor {
    
    @Override
    public org.apache.hadoop.util.bloom.Key transform(org.apache.accumulo.core.data.Key acuKey) {
        byte keyData[];
        
        ByteSequence row = acuKey.getRowData();
        ByteSequence cf = acuKey.getColumnFamilyData();
        ByteSequence cq = acuKey.getColumnQualifierData();
        keyData = new byte[row.length() + cf.length() + cq.length()];
        System.arraycopy(row.getBackingArray(), row.offset(), keyData, 0, row.length());
        System.arraycopy(cf.getBackingArray(), cf.offset(), keyData, row.length(), cf.length());
        System.arraycopy(cq.getBackingArray(), cq.offset(), keyData, row.length() + cf.length(), cq.length());
        
        return new org.apache.hadoop.util.bloom.Key(keyData, 1.0);
    }
    
    @Override
    public Key transform(Range range) {
        if (RowFunctor.isRangeInBloomFilter(range, PartialKey.ROW_COLFAM_COLQUAL)) {
            return transform(range.getStartKey());
        }
        return null;
    }
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
af59f0ad10af71de2f7de9880a1dbe1595956cc5,server/src/main/java/org/apache/accumulo/server/security/handler/ZKAuthenticator.java,"import org.apache.accumulo.core.security.thrift.SecurityErrorCode;
import org.apache.accumulo.core.security.tokens.PasswordToken;
import org.apache.accumulo.core.security.tokens.AuthenticationToken;",1 duplicated blocks of code must be removed.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/normalizer/NoOpNormalizer.java,package org.apache.accumulo.examples.wikisearch.normalizer;,"Rename ""table"" which hides the field declared at line 107."
87df5f68e2e29a6ff0445f08dca6be9dc65c6039,server/src/main/java/org/apache/accumulo/server/zookeeper/DistributedWorkQueue.java,"import java.util.ArrayList;
                // TODO always delete this
  public List<String> getWorkQueued() throws KeeperException, InterruptedException {
    ArrayList<String> children = new ArrayList<String>(zoo.getChildren(path));
    children.remove(LOCKS_NODE);
    return children;
  }
","Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
02a26268575ac93d74796ec8fd8798f85b92dac1,server/src/main/java/org/apache/accumulo/server/master/state/SetGoalState.java,"    ZooReaderWriter.getInstance().putPersistentData(ZooUtil.getRoot(HdfsZooInstance.getInstance()) + Constants.ZMASTER_GOAL_STATE, args[0].getBytes(),","Remove this unused method parameter ""ex""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/CloneTable.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
fa4c0e47ea25a947c3f8190a212dd33694211ea9,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchWriter.java,"import org.apache.accumulo.core.security.thrift.SecurityErrorCode;
  private Map<KeyExtent,Set<SecurityErrorCode>> authorizationFailures;
  
  
    
    
  
    authorizationFailures = new HashMap<KeyExtent,Set<SecurityErrorCode>>();
    
  private void updateAuthorizationFailures(Set<KeyExtent> keySet, SecurityErrorCode code) {
    HashMap<KeyExtent, SecurityErrorCode> map = new HashMap<KeyExtent, SecurityErrorCode>();
    for (KeyExtent ke : keySet)
      map.put(ke, code);
    
    updateAuthorizationFailures(map);
  }
  
  private void updateAuthorizationFailures(Map<KeyExtent,SecurityErrorCode> authorizationFailures) {
      for (KeyExtent ke : authorizationFailures.keySet())
        mergeAuthorizationFailures(this.authorizationFailures, authorizationFailures);
  private void mergeAuthorizationFailures(Map<KeyExtent,Set<SecurityErrorCode>> source, Map<KeyExtent,SecurityErrorCode> addition) {
    for (Entry<KeyExtent,SecurityErrorCode> entry : addition.entrySet()) {
      Set<SecurityErrorCode> secs = source.get(entry.getKey());
      if (secs == null) {
        secs = new HashSet<SecurityErrorCode>();
        source.put(entry.getKey(), secs);
      }
      secs.add(entry.getValue());
    }
  }
  
      throw new MutationsRejectedException(cvsList, new HashMap<KeyExtent,Set<SecurityErrorCode>>(authorizationFailures), serverSideErrors, unknownErrors, lastUnknownError);
    
        updateAuthorizationFailures(Collections.singletonMap(new KeyExtent(new Text(Constants.METADATA_TABLE_ID), null, null), e.getErrorCode()));
            
        AccumuloSecurityException, AccumuloServerException {
      
        
            
            
        updateAuthorizationFailures(tabMuts.keySet(), e.code);",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
7942da1d204d271bff01e9e93208cdd67d0eefa3,server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"import org.apache.accumulo.core.security.thrift.TCredentials;
        TCredentials auths = SecurityConstants.getSystemCredentials();
        TCredentials creds = SecurityConstants.getSystemCredentials();
        TCredentials creds = SecurityConstants.getSystemCredentials();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bd6afefa9741aa8e43b628ab15d4a72eccccd849,proxy/src/test/java/org/apache/accumulo/proxy/TestProxyReadWrite.java,"    List<Range> ranges = Collections.singletonList(new Range(null, false, stop, false));
    String cookie = tpc.proxy().createBatchScanner(userpass, testtable, ranges, options);
      ScanResult kvList = tpc.proxy().nextK(cookie, k);
    ScanOptions opts = new ScanOptions();
    String cookie = tpc.proxy().createScanner(userpass, testtable, opts);
      ScanResult kvList = tpc.proxy().nextK(cookie, k);
      ScanResult kvList = tpc.proxy().nextK(cookie, k);
      ScanResult kvList = tpc.proxy().nextK(cookie, k);
        tpc.proxy().update(writer, mutations);
    tpc.proxy().flush(writer);
    tpc.proxy().closeWriter(writer);
    String cookie = tpc.proxy().createScanner(userpass, testtable, null);
      ScanResult kvList = tpc.proxy().nextK(cookie, k);
        tpc.proxy().update(writer, mutations);
    tpc.proxy().flush(writer);
    tpc.proxy().closeWriter(writer);
    ScanOptions opts = new ScanOptions();
    String cookie = tpc.proxy().createScanner(userpass, testtable, opts);
      ScanResult kvList = tpc.proxy().nextK(cookie, k);
        tpc.proxy().update(writer, mutations);
    tpc.proxy().flush(writer);
    tpc.proxy().closeWriter(writer);
    ScanOptions opts = new ScanOptions();
    String cookie = tpc.proxy().createScanner(userpass, testtable, opts);
      ScanResult kvList = tpc.proxy().nextK(cookie, k);",Either log or rethrow this exception.
403af0c6550638052bf85bb1c770a08d2e64811e,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteIterCommand.java,    if (!shellState.getConnector().tableOperations().listIterators(tableName).containsKey(name)) {,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
922749630c8880dccce653fc39d6d43fa5528835,src/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"import org.apache.hadoop.fs.Trash;
          Trash trash = new Trash(fs, fs.getConf());
            Path deleteFile = new Path(location + ""/delete+"" + compactName + ""+"" + path.getName());
            if (!trash.moveToTrash(deleteFile))
              fs.delete(deleteFile, true);",Move this constructor to comply with Java Code Conventions.
0811c7958ecc1a9a2c8f80702273856f1cd2eab8,src/trace/src/test/java/org/apache/accumulo/cloudtrace/instrument/TracerTest.java,"package org.apache.accumulo.cloudtrace.instrument;
import org.apache.accumulo.cloudtrace.instrument.Span;
import org.apache.accumulo.cloudtrace.instrument.Trace;
import org.apache.accumulo.cloudtrace.instrument.Tracer;
import org.apache.accumulo.cloudtrace.instrument.receivers.SpanReceiver;
import org.apache.accumulo.cloudtrace.instrument.thrift.TraceWrap;
import org.apache.accumulo.cloudtrace.thrift.TInfo;
import org.apache.accumulo.cloudtrace.thrift.TestService;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/Stat.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
5c97efc2576278f4b8b6b004ded78c98251cda24,examples/simple/src/main/java/org/apache/accumulo/examples/simple/dirlist/Viewer.java,"    fdq = new FileDataQuery(opts.instance, opts.zookeepers, opts.getAccumuloToken(), opts.dataTable, opts.auths);",Return empty string instead.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/tabletserver/log/TabletServerLogger.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
040f891216154de5f7c8a87e25cefc0f816aea9c,test/src/test/java/org/apache/accumulo/test/functional/CreateManyScannersIT.java,  @Test(timeout = 60 * 1000),Either log or rethrow this exception.
d887468b100ba67502f078ecefe516d5b116bfe9,proxy/src/main/java/org/apache/accumulo/proxy/TestProxyClient.java,"    UserPass userPass = new UserPass(""root"", ByteBuffer.wrap(""secret"".getBytes()));
    
    System.out.println(""Logging in"");
    ByteBuffer login = tpc.proxy.login(userPass);
    if (!tpc.proxy().listUsers(login).contains(""testuser"")) {
      tpc.proxy().createUser(login, ""testuser"", ByteBuffer.wrap(""testpass"".getBytes()));
    System.out.println(""UserList: "" + tpc.proxy().listUsers(login));
    System.out.println(""Listing: "" + tpc.proxy().listTables(login));
    if (tpc.proxy().tableExists(login, testTable))
      tpc.proxy().deleteTable(login, testTable);
    tpc.proxy().createTable(login, testTable, true, TimeType.MILLIS);
    System.out.println(""Listing: "" + tpc.proxy().listTables(login));
        tpc.proxy().updateAndFlush(login, testTable, mutations);
    tpc.proxy().updateAndFlush(login, testTable, mutations);
    tpc.proxy().deleteTable(login, testTable);
    tpc.proxy().createTable(login, testTable, true, TimeType.MILLIS);
    String writer = tpc.proxy().createWriter(login, testTable, null);
    String cookie = tpc.proxy().createScanner(login, testTable, null);",Replace this use of System.out or System.err by a logger.
aa7110234e15a017bb1dbc99b4351f0bf06cc73b,test/src/test/java/org/apache/accumulo/test/functional/ZooCacheIT.java,"import static org.junit.Assert.assertEquals;
public class ZooCacheIT extends ConfigurableMacIT {

  @Test(timeout = 2 * 60 * 1000)
        @Override
            CacheTestReader.main(new String[] {""/zcTest-42"", ""/tmp/zcTest-42"", getConnector().getInstance().getZooKeepers()});
          } catch (Exception ex) {
    assertEquals(0, exec(CacheTestWriter.class, ""/zcTest-42"", ""/tmp/zcTest-42"", ""3"", ""50"").waitFor());
    for (Thread t : threads) {
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2ca89a813feca545f6dfa1aad54abde8a0e579dc,core/src/main/java/org/apache/accumulo/core/master/thrift/TableOperation.java," * Autogenerated by Thrift Compiler (0.8.0)
 *  @generated",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
9ac95f86986a01dfb55ecfdaa1ed3776d2150501,test/src/test/java/org/apache/accumulo/test/functional/ShutdownIT.java,  @Test(timeout = 2 * 60 * 1000),Either log or rethrow this exception.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/test/functional/BulkSplitOptimizationTest.java,"    CreateRFiles.main(new String[] { ""--output"", ""tmp/testmf"", ""--numThreads"", ""8"", ""--start"", ""0"", ""--end"", ""100000"", ""--splits"", ""99""});
    VerifyIngest.main(new String[] {""--timestamp"", ""1"", ""--size"", ""50"", ""--random"", ""56"", ""--rows"", ""100000"", ""--start"", ""0"", ""--cols"", ""1""});","Remove this unused private ""appendProp"" method."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/master/thrift/TabletLoadState.java,"/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package org.apache.accumulo.core.master.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum TabletLoadState implements org.apache.thrift.TEnum {
  LOADED(0),
  LOAD_FAILURE(1),
  UNLOADED(2),
  UNLOAD_FAILURE_NOT_SERVING(3),
  UNLOAD_ERROR(4),
  CHOPPED(5);

  private final int value;

  private TabletLoadState(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static TabletLoadState findByValue(int value) { 
    switch (value) {
      case 0:
        return LOADED;
      case 1:
        return LOAD_FAILURE;
      case 2:
        return UNLOADED;
      case 3:
        return UNLOAD_FAILURE_NOT_SERVING;
      case 4:
        return UNLOAD_ERROR;
      case 5:
        return CHOPPED;
      default:
        return null;
    }
  }
}",Return empty string instead.
63401308a8fc8ff7ad54afa3e8bb2d93e1971a74,server/src/main/java/org/apache/accumulo/server/tabletserver/InMemoryMap.java,"    MemoryIterator mi = new MemoryIterator(new PartialMutationSkippingIterator(ssi, mc));
    return map.skvIterator();","Use ""Integer.toString"" instead."
99da5641c28784c7b717cce6749673863c2ec8cf,core/src/main/java/org/apache/accumulo/core/metadata/ServicerForUserTables.java,"import org.apache.accumulo.core.security.Credentials;
  public ServicerForUserTables(Instance instance, Credentials credentials, String tableId) {","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
322e0359ac5d35d3774c47507aed07760397513a,src/core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,   * @return The formatter class for this table,1 duplicated blocks of code must be removed.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/file/rfile/RFileOperations.java,"    int trep = acuconf.getCount(Property.TABLE_FILE_REPLICATION);
    long tblock = acuconf.getMemoryInBytes(Property.TABLE_FILE_BLOCK_SIZE);
    long blockSize = acuconf.getMemoryInBytes(Property.TABLE_FILE_COMPRESSED_BLOCK_SIZE);
    long indexBlockSize = acuconf.getMemoryInBytes(Property.TABLE_FILE_COMPRESSED_BLOCK_SIZE_INDEX);
    String compression = acuconf.get(Property.TABLE_FILE_COMPRESSION_TYPE);","Remove this unused private ""appendProp"" method."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/iterators/conf/ColumnUtil.java,"      if (o instanceof ColFamHashKey)
        return equals((ColFamHashKey) o);
      if (columnFamily == null)
        return key.compareColumnFamily(ohk.columnFamily) == 0;
      if (o instanceof ColHashKey)
        return equals((ColHashKey) o);
      if (columnFamily == null)
        return key.compareColumnFamily(ohk.columnFamily) == 0 && key.compareColumnQualifier(ohk.columnQualifier) == 0;","Remove this call to ""exit"" or ensure it is really required."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/util/ByteArrayBackedCharSequence.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    private byte[] data;
    private int offset;
    private int len;
    
    public ByteArrayBackedCharSequence(byte[] data, int offset, int len) {
        this.data = data;
        this.offset = offset;
        this.len = len;
    }
    
    public ByteArrayBackedCharSequence(byte[] data) {
        this(data, 0, data.length);
    }
    
    public ByteArrayBackedCharSequence() {
        this(null, 0, 0);
    }
    
    public void set(byte[] data, int offset, int len) {
        this.data = data;
        this.offset = offset;
        this.len = len;
    }
    
    @Override
    public char charAt(int index) {
        return (char) (0xff & data[offset + index]);
    }
    
    @Override
    public int length() {
        return len;
    }
    
    @Override
    public CharSequence subSequence(int start, int end) {
        return new ByteArrayBackedCharSequence(data, offset + start, end - start);
    }
    
    public String toString() {
        return new String(data, offset, len);
    }
    
    public void set(ByteSequence bs) {
        set(bs.getBackingArray(), bs.offset(), bs.length());
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
63fc341bda79a60f3d479d891e81b8c9b134c3bb,src/server/src/test/java/org/apache/accumulo/server/master/TestMergeState.java,"    MergeState newState = stats.nextMergeState(connector, state);
    // now we should be ready to merge but, we have an inconsistent !METADATA table
    Assert.assertEquals(MergeState.WAITING_FOR_OFFLINE, stats.nextMergeState(connector, state));
    Assert.assertEquals(MergeState.WAITING_FOR_CHOPPED, stats.nextMergeState(connector, state));
    Assert.assertEquals(MergeState.WAITING_FOR_OFFLINE, stats.nextMergeState(connector, state));
    Assert.assertEquals(MergeState.MERGING, stats.nextMergeState(connector, state));",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
a650bc93ce99a5f771fb10615334c5fbea8b40a4,core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TDiskUsage.java,"                  String _elem2; // optional
            String _elem7; // optional",277 duplicated blocks of code must be removed.
c8b5f1755c0563e93f21036ecf88da37b567aa74,core/src/main/java/org/apache/accumulo/core/zookeeper/ZooUtil.java,"  public static String getRoot(final Instance instance) {
  public static String getRoot(final String instanceId) {",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
f343540ca4b9e4359c43d6f990e486de960b637c,core/src/main/java/org/apache/accumulo/core/util/shell/commands/OptUtil.java,"import java.io.UnsupportedEncodingException;

import org.apache.hadoop.io.Text;
  public static final String START_ROW_OPT = ""b"";
  public static final String END_ROW_OPT = ""e"";
  
  public static String getTableOpt(CommandLine cl, Shell shellState) throws TableNotFoundException {
        throw new TableNotFoundException(tableName, tableName, ""specified table that doesn't exist"");
  public static AdlOpt getAldOpt(CommandLine cl) {
  
  public static Option startRowOpt() {
    Option o = new Option(START_ROW_OPT, ""begin-row"", true, ""begin row (inclusive)"");
    o.setArgName(""begin-row"");
    return o;
  }
  
  public static Option endRowOpt() {
    Option o = new Option(END_ROW_OPT, ""end-row"", true, ""end row (inclusive)"");
    o.setArgName(""end-row"");
    return o;
  }
  
  public static Text getStartRow(CommandLine cl) throws UnsupportedEncodingException {
    if (cl.hasOption(START_ROW_OPT))
      return new Text(cl.getOptionValue(START_ROW_OPT).getBytes(Shell.CHARSET));
    else
      return null;
  }
  
  public static Text getEndRow(CommandLine cl) throws UnsupportedEncodingException {
    if (cl.hasOption(END_ROW_OPT))
      return new Text(cl.getOptionValue(END_ROW_OPT).getBytes(Shell.CHARSET));
    else
      return null;
  }",Either log or rethrow this exception.
6591b4e94ef288a0e1219a4f3333531b752a658a,test/src/test/java/org/apache/accumulo/test/functional/ConfigurableMacIT.java,"import java.io.File;
  public TemporaryFolder folder = new TemporaryFolder(new File(System.getProperty(""user.dir"") + ""/target""));",Make folder a static final constant or non-public and provide accessors if needed.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java,"import java.util.List;
import org.apache.accumulo.core.cli.Help;
import com.beust.jcommander.Parameter;

  
  static class Opts extends Help {
    @Parameter(names={""-d"", ""--dump""}, description=""dump the key/value pairs"")
    boolean dump = false;
    @Parameter(names={""--historgram""}, description=""print a histogram of the key-value sizes"")
    boolean histogram = false;
    @Parameter(description="" <file> { <file> ... }"")
    List<String> files = new ArrayList<String>();
  }
  
    Opts opts = new Opts();
    opts.parseArgs(PrintInfo.class.getName(), args);
    if (opts.files.isEmpty()) {
      System.err.println(""No files were given"");
    for (String arg : opts.files) {
      if (opts.histogram || opts.dump) {
          if (opts.dump)
          if (opts.histogram) {
      if (opts.histogram) {","Remove this unused private ""appendProp"" method."
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteCommand.java,"  private Option deleteOptAuths, timestampOpt;
  
  public int execute(String fullCommand, CommandLine cl, Shell shellState) throws AccumuloException, AccumuloSecurityException, TableNotFoundException,
      IOException, ConstraintViolationException {
    shellState.checkTableState();
    Mutation m = new Mutation(new Text(cl.getArgs()[0]));
    if (cl.hasOption(deleteOptAuths.getOpt())) {
      ColumnVisibility le = new ColumnVisibility(cl.getOptionValue(deleteOptAuths.getOpt()));
      if (cl.hasOption(timestampOpt.getOpt())) m.putDelete(new Text(cl.getArgs()[1]), new Text(cl.getArgs()[2]), le,
          Long.parseLong(cl.getOptionValue(timestampOpt.getOpt())));
      else m.putDelete(new Text(cl.getArgs()[1]), new Text(cl.getArgs()[2]), le);
    } else if (cl.hasOption(timestampOpt.getOpt())) m.putDelete(new Text(cl.getArgs()[1]), new Text(cl.getArgs()[2]),
        Long.parseLong(cl.getOptionValue(timestampOpt.getOpt())));
    else m.putDelete(new Text(cl.getArgs()[1]), new Text(cl.getArgs()[2]));
    BatchWriter bw = shellState.getConnector().createBatchWriter(shellState.getTableName(), m.estimatedMemoryUsed() + 0L, 0L, 1);
    bw.addMutation(m);
    bw.close();
    return 0;
  }
  
  @Override
  public String description() {
    return ""deletes a record from a table"";
  }
  
  @Override
  public String usage() {
    return getName() + "" <row> <colfamily> <colqualifier>"";
  }
  
  @Override
  public Options getOptions() {
    Options o = new Options();
    deleteOptAuths = new Option(""l"", ""authorization-label"", true, ""formatted authorization label expression"");
    deleteOptAuths.setArgName(""expression"");
    o.addOption(deleteOptAuths);
    timestampOpt = new Option(""t"", ""timestamp"", true, ""timestamp to use for insert"");
    timestampOpt.setArgName(""timestamp"");
    o.addOption(timestampOpt);
    
    return o;
  }
  
  @Override
  public int numArgs() {
    return 3;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
3dee665c59730f298fa71cba720c5db2c285c4cf,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/client/RandomBatchScanner.java,"/**
 * Internal class used to verify validity of data read.
 */
/**
 * Simple example for reading random batches of data from Accumulo. See docs/examples/README.batch for instructions.
 */
  /**
   * Generate a number of ranges, each covering a single random row.
   * 
   * @param num
   *          the number of ranges to generate
   * @param min
   *          the minimum row that will be generated
   * @param max
   *          the maximum row that will be generated
   * @param r
   *          a random number generator
   * @param ranges
   *          a set in which to store the generated ranges
   * @param expectedRows
   *          a map in which to store the rows covered by the ranges (initially mapped to false)
   */
  /**
   * Prints a count of the number of rows mapped to false.
   * 
   * @param expectedRows
   */
  /**
   * Generates a number of random queries, verifies that the key/value pairs returned were in the queried ranges and that the values were generated by
   * {@link RandomBatchWriter#createValue(long, int)}. Prints information about the results.
   * 
   * @param num
   *          the number of queries to generate
   * @param min
   *          the min row to query
   * @param max
   *          the max row to query
   * @param evs
   *          the expected size of the values
   * @param r
   *          a random number generator
   * @param tsbr
   *          a batch scanner
   */
  /**
   * Scans over a specified number of entries to Accumulo using a {@link BatchScanner}. Completes scans twice to compare times for a fresh query with those for
   * a repeated query which has cached metadata and connections already established.
   * 
   * @param args
   * @throws AccumuloException
   * @throws AccumuloSecurityException
   * @throws TableNotFoundException
   */",1 duplicated blocks of code must be removed.
bd77fefdb146ef0dc9bf64b51fb8e8f43c10ce0d,core/src/main/java/org/apache/accumulo/core/gc/thrift/GCStatus.java,"  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",300 duplicated blocks of code must be removed.
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,core/src/main/java/org/apache/accumulo/core/client/admin/SecurityOperationsImpl.java,import org.apache.accumulo.trace.instrument.Tracer;,Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,trace/src/test/java/org/apache/accumulo/trace/instrument/CountSamplerTest.java,"package org.apache.accumulo.trace.instrument;
import org.apache.accumulo.trace.instrument.CountSampler;",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/test/java/org/apache/accumulo/core/client/admin/FindMaxTest.java,"    Connector conn = mi.getConnector(""root"", """");","Remove this unused private ""appendProp"" method."
aec39293362285bd74c8dc65b88ee091e2ed6aa2,src/wikisearch/ingest/src/test/java/org/apache/accumulo/wikisearch/ingest/WikipediaMapperTest.java,"import org.apache.accumulo.core.client.BatchWriter;
import org.apache.accumulo.core.client.Connector;
import org.apache.accumulo.core.client.MutationsRejectedException;
import org.apache.accumulo.core.client.Scanner;
import org.apache.accumulo.core.client.mock.MockInstance;
import org.apache.accumulo.core.data.Key;
import org.apache.accumulo.core.data.Mutation;
import org.apache.accumulo.core.data.Range;
import org.apache.accumulo.core.data.Value;
import org.apache.accumulo.core.security.Authorizations;
import org.apache.accumulo.wikisearch.reader.AggregatingRecordReader;",2 duplicated blocks of code must be removed.
6fe7e4a13102d3cfea86c1b4e1d6cbf692901cc7,src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsHelper.java,"import java.util.TreeMap;
    checkIteratorConflicts(tableName, setting);
  
  @Override
  public void checkIteratorConflicts(String tableName, IteratorSetting setting) throws AccumuloException, TableNotFoundException {
    for (IteratorScope scope : setting.getScopes()) {
      String scopeStr = String.format(""%s%s"", Property.TABLE_ITERATOR_PREFIX, scope.name().toLowerCase());
      String nameStr = String.format(""%s.%s"", scopeStr, setting.getName());
      String optStr = String.format(""%s.opt."", nameStr);
      Map<String,String> optionConflicts = new TreeMap<String,String>();
      for (Entry<String,String> property : this.getProperties(tableName)) {
        if (property.getKey().startsWith(scopeStr)) {
          if (property.getKey().equals(nameStr))
            throw new IllegalArgumentException(""iterator name conflict for "" + setting.getName() + "": "" + property.getKey() + ""="" + property.getValue());
          if (property.getKey().startsWith(optStr))
            optionConflicts.put(property.getKey(), property.getValue());
          if (property.getKey().contains("".opt.""))
            continue;
          String parts[] = property.getValue().split("","");
          if (parts.length != 2)
            throw new AccumuloException(""Bad value for existing iterator setting: "" + property.getKey() + ""="" + property.getValue());
          try {
            if (Integer.parseInt(parts[0]) == setting.getPriority())
              throw new IllegalArgumentException(""iterator priority conflict: "" + property.getKey() + ""="" + property.getValue());
          } catch (NumberFormatException e) {
            throw new AccumuloException(""Bad value for existing iterator setting: "" + property.getKey() + ""="" + property.getValue());
          }
        }
      }
      if (optionConflicts.size() > 0)
        throw new IllegalArgumentException(""iterator options conflict for "" + setting.getName() + "": "" + optionConflicts);
    }
  }",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/tabletserver/metrics/TabletServerUpdateMetricsMBean.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
e0880e263e4bf8662ba3848405200473a25dfc9f,contrib/cloudtrace-0.2.0/src/main/java/cloudtrace/instrument/impl/NullSpan.java,"package cloudtrace.instrument.impl;

import java.util.Collections;
import java.util.Map;

import cloudtrace.instrument.Span;

/**
 * A Span that does nothing.  Used to avoid returning and checking for nulls when we are not tracing.
 *
 */
public class NullSpan implements Span {
    
    public NullSpan() {
    }

    @Override
    public long accumulatedMillis() {
        return 0;
    }

    @Override
    public String description() {
        return ""NullSpan"";
    }

    @Override
    public long getStartTimeMillis() {
        return 0;
    }

    @Override
    public long getStopTimeMillis() {
        return 0;
    }

    @Override
    public Span parent() {
        return null;
    }

    @Override
    public long parentId() {
        return -1;
    }

    @Override
    public boolean running() {
        return false;
    }

    @Override
    public long spanId() {
        return -1;
    }

    @Override
    public void start() {
    }

    @Override
    public void stop() {
    }

    @Override
    public long traceId() {
        return -1;
    }

    @Override
    public Span child(String description) {
        return this;
    }

    @Override
    public void data(String key, String value) {
    }

    @Override
    public String toString() {
        return ""Not Tracing"";
    }

    @Override
    public Map<String, String> getData() {
        return Collections.emptyMap();
    }
    
}",Return empty string instead.
48e331cc2d55a37421b5dd7bbb45e91657ea811f,test/src/main/java/org/apache/accumulo/test/randomwalk/image/TableOp.java,      tableOps.listSplits(tableName);,Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
e10450836343d41b5433215367d0f6ec92f0df62,start/src/test/java/org/apache/accumulo/start/classloader/vfs/ContextManagerTest.java,"import org.apache.commons.vfs2.FileSystemException;
import org.apache.commons.vfs2.impl.VFSClassLoader;
  FileObject[] createFileSystems(FileObject[] fos) throws FileSystemException {
    FileObject[] rfos = new FileObject[fos.length];
    for (int i = 0; i < fos.length; i++) {
      if (vfs.canCreateFileSystem(fos[i]))
        rfos[i] = vfs.createFileSystem(fos[i]);
      else
        rfos[i] = fos[i];
    }
    
    return rfos;
  }

    ContextManager cm = new ContextManager(vfs, new ReloadingClassLoader() {
      @Override
      public ClassLoader getClassLoader() {
        return ClassLoader.getSystemClassLoader();
      }
    });

    FileObject[] files = ((VFSClassLoader) cl1).getFileObjects();
    Assert.assertArrayEquals(createFileSystems(dirContents), files);
    FileObject[] files2 = ((VFSClassLoader) cl2).getFileObjects();
    Assert.assertArrayEquals(createFileSystems(dirContents2), files2);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
25ce17b132bed48552484121ed85504aeb1dd0fe,src/core/src/main/java/org/apache/accumulo/core/iterators/user/IntersectingIterator.java,"    if (columns.length < 2)
      throw new IllegalArgumentException(""Must supply at least two terms to intersect"");
    if (columns.length < 2)
      throw new IllegalArgumentException(""Must supply at least two terms to intersect"");","Remove this unused private ""debugQuery"" method."
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/shard/ExportIndex.java,"package org.apache.accumulo.test.randomwalk.shard;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ScanCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
7bf768e0dca1e43782f3eb8bab30ba29032c0507,src/core/src/main/java/org/apache/accumulo/core/iterators/user/IntersectingIterator.java,"   * @deprecated since 1.4. To be made protected. Do not interact with flags string directly, just use
   *             {@link #setColumnFamilies(IteratorSetting, Text[], boolean[])}.
   * @deprecated since 1.4. To be made protected. Do not interact with flags string directly, just use
   *             {@link #setColumnFamilies(IteratorSetting, Text[], boolean[])}.
   * @deprecated since 1.4. To be made protected. Do not interact with flags string directly, just use
   *             {@link #setColumnFamilies(IteratorSetting, Text[], boolean[])}.",1 duplicated blocks of code must be removed.
cb6bcc517b27df03106d7e5eca344ed45699e31f,src/core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ConfigurationType.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@SuppressWarnings(""all"") public enum ConfigurationType implements org.apache.thrift.TEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
3c4012cfb4602f5675f54013525104c011728ad8,core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsHelper.java,"      for (Entry<String,String> prop : setting.getOptions().entrySet()) {",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
22cdcbc700e4c68b21738ab7087a35ef784b0fc1,server/src/main/java/org/apache/accumulo/server/Accumulo.java,"import org.apache.accumulo.server.fs.VolumeManager;
  public static synchronized void updateAccumuloVersion(VolumeManager fs) {
        fs.delete(new Path(ServerConstants.getDataVersionLocation() + ""/"" + ServerConstants.PREV_DATA_VERSION));
  public static synchronized int getAccumuloPersistentVersion(VolumeManager fs) {
      FileStatus[] files = fs.getDefaultVolume().listStatus(ServerConstants.getDataVersionLocation());
  public static void init(VolumeManager fs, ServerConfiguration config, String application) throws UnknownHostException {
  public static void waitForZookeeperAndHdfs(VolumeManager fs) {
        if (fs.isReady())",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bd77fefdb146ef0dc9bf64b51fb8e8f43c10ce0d,core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TabletMutations.java,"  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",300 duplicated blocks of code must be removed.
446a37a9795f2df7adc841154ca05add79cf286e,server/src/main/java/org/apache/accumulo/server/problems/ProblemReports.java,"import org.apache.accumulo.core.metadata.MetadataTable;
import org.apache.accumulo.core.metadata.RootTable;
import org.apache.accumulo.server.util.MetadataTableUtil;
      MetadataTableUtil.getMetadataTable(SecurityConstants.getSystemCredentials()).update(delMut);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
69218e7e989b6f1d65afabce9c5b5ab0e3204141,server/src/main/java/org/apache/accumulo/server/util/OfflineMetadataScanner.java,"      rwal = MetadataTable.getLogEntries(null, RootTable.EXTENT);","Reduce this switch case number of lines from 12 to at most 5, for example by extracting code into methods."
af06b162919fd10d9caca907c84e58c2a0a13247,maven-plugin/src/main/java/org/apache/accumulo/maven/plugin/StopMojo.java,package org.apache.accumulo.maven.plugin;,Replace this use of System.out or System.err by a logger.
35f8e2b1868cea9849efae7fae21e8ac789a0817,server/src/main/java/org/apache/accumulo/server/util/RemoveEntriesForMissingFiles.java,"import java.nio.charset.Charset;
    final Charset utf8 = Charset.forName(""UTF8"");
    Connector connector = instance.getConnector(args[2], args[3].getBytes(utf8));",Move this variable to comply with Java Code Conventions.
0811c7958ecc1a9a2c8f80702273856f1cd2eab8,src/trace/src/main/java/org/apache/accumulo/cloudtrace/instrument/receivers/AsyncSpanReceiver.java,"package org.apache.accumulo.cloudtrace.instrument.receivers;
import org.apache.accumulo.cloudtrace.thrift.RemoteSpan;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
04c50c515fd4c28d3412e1ca0c3f6eaacf44db50,core/src/main/java/org/apache/accumulo/core/client/mapreduce/lib/util/ConfiguratorBase.java,"   * @throws AccumuloSecurityException
  public static void setConnectorInfo(Class<?> implementingClass, Configuration conf, String principal, AuthenticationToken token)
      throws AccumuloSecurityException {
   * {@link CredentialHelper#asBase64String(org.apache.accumulo.core.security.thrift.TCredentials)}.
   *          the path to a file in the configured file system, containing the serialized, base-64 encoded {@link AuthenticationToken} with the user's
   *          authentication
   * @see #setConnectorInfo(Class, Configuration, String, AuthenticationToken)
  
   * @see #setConnectorInfo(Class, Configuration, String, AuthenticationToken)",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
aa7110234e15a017bb1dbc99b4351f0bf06cc73b,test/src/test/java/org/apache/accumulo/test/functional/MetadataIT.java,    String tableName = getTableNames(1)[0];,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,trace/src/main/java/org/apache/accumulo/trace/instrument/TraceExecutorService.java,package org.apache.accumulo.trace.instrument;,Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/ArgumentChecker.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,server/src/main/java/org/apache/accumulo/server/master/state/tables/TableManager.java,"  
  
  
  
  
  
  
  
    
    
    
    
    
  
    
  
  
  
  
    
    
    
  
  
  
  
      
      
      
      
  
   * 
   * 
   * 
   * 
   * 
   * 
   * 
   * ",Replace all tab characters in this file by sequences of white-spaces.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/test/java/org/apache/accumulo/core/file/rfile/CreateCompatTestFile.java,"  
  public static Set<ByteSequence> ncfs(String... colFams) {
    HashSet<ByteSequence> cfs = new HashSet<ByteSequence>();
    for (String cf : colFams) {
      cfs.add(new ArrayByteSequence(cf));
    return cfs;
  }
  
  private static Key nk(String row, String cf, String cq, String cv, long ts) {
    return new Key(row.getBytes(), cf.getBytes(), cq.getBytes(), cv.getBytes(), ts);
  }
  
  private static Value nv(String val) {
    return new Value(val.getBytes());
  }
  
  private static String nf(String prefix, int i) {
    return String.format(prefix + ""%06d"", i);
  }
  
  public static void main(String[] args) throws Exception {
    Configuration conf = new Configuration();
    FileSystem fs = FileSystem.get(conf);
    CachableBlockFile.Writer _cbw = new CachableBlockFile.Writer(fs, new Path(args[0]), ""gz"", conf);
    RFile.Writer writer = new RFile.Writer(_cbw, 1000);
    
    writer.startNewLocalityGroup(""lg1"", ncfs(nf(""cf_"", 1), nf(""cf_"", 2)));
    for (int i = 0; i < 1000; i++) {
      writer.append(nk(nf(""r_"", i), nf(""cf_"", 1), nf(""cq_"", 0), """", 1000 - i), nv(i + """"));
      writer.append(nk(nf(""r_"", i), nf(""cf_"", 2), nf(""cq_"", 0), """", 1000 - i), nv(i + """"));
    writer.startNewLocalityGroup(""lg2"", ncfs(nf(""cf_"", 3)));
    
    for (int i = 0; i < 1000; i++) {
      writer.append(nk(nf(""r_"", i), nf(""cf_"", 3), nf(""cq_"", 0), """", 1000 - i), nv(i + """"));
    writer.startDefaultLocalityGroup();
    
    for (int i = 0; i < 1000; i++) {
      writer.append(nk(nf(""r_"", i), nf(""cf_"", 4), nf(""cq_"", 0), """", 1000 - i), nv(i + """"));
    
    writer.close();
    _cbw.close();
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/conf/ZooConfiguration.java,"  private final Map<String,String> fixedProps = Collections.synchronizedMap(new HashMap<String,String>());","Remove this unused private ""appendProp"" method."
6abb3e5ccb533adff0ae715dc3eb0c4a56ed4874,core/src/main/java/org/apache/accumulo/core/util/shell/commands/RevokeCommand.java,"import org.apache.accumulo.core.util.shell.Shell.TableOperation;
public class RevokeCommand extends TableOperation {
  private Option systemOpt, userOpt;
  private String user;
  private String[] permission;
  public int execute(String fullCommand, CommandLine cl, Shell shellState) throws Exception {
    user = cl.hasOption(userOpt.getOpt()) ? cl.getOptionValue(userOpt.getOpt()) : shellState.getConnector().whoami();
    permission = cl.getArgs()[0].split(""\\."", 2);
    } else if (permission[0].equalsIgnoreCase(""Table"")) {
      super.execute(fullCommand, cl, shellState);
  protected void doTableOp(Shell shellState, String tableName) throws Exception {
    try {
      shellState.getConnector().securityOperations().revokeTablePermission(user, tableName, TablePermission.valueOf(permission[1]));
      Shell.log.debug(""Revoked from "" + user + "" the "" + permission[1] + "" permission on table "" + tableName);
    } catch (IllegalArgumentException e) {
      throw new IllegalArgumentException(""No such table permission"", e);
    }
  }
  
  @Override
    super.getOptions();
    
    group.addOption(optTableName);
    group.addOption(optTablePattern);","Reduce this switch case number of lines from 8 to at most 5, for example by extracting code into methods."
527a100ef5de9c51fb17b0b340f036ee4cd98590,src/core/src/main/java/org/apache/accumulo/core/data/thrift/ScanResult.java,"@SuppressWarnings(""all"") public class ScanResult implements org.apache.thrift.TBase<ScanResult, ScanResult._Fields>, java.io.Serializable, Cloneable {",13 duplicated blocks of code must be removed.
216cb2edebac86336d060e4c67f836cd1d79a344,src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"import org.apache.zookeeper.KeeperException.NoNodeException;
          try {
            flushID = tablet.getFlushID();
          } catch (NoNodeException e) {
            // table was probably deleted
            log.info(""Asked to flush table that has no flush id "" + ke + "" "" + e.getMessage());
            return;
          }
        try {
          tablet.flush(tablet.getFlushID());
        } catch (NoNodeException nne) {
          log.info(""Asked to flush tablet that has no flush id "" + new KeyExtent(textent) + "" "" + nne.getMessage());
        }
          try {
            compactionId = tablet.getCompactionID();
          } catch (NoNodeException e) {
            log.info(""Asked to compact table with no compaction id "" + ke + "" "" + e.getMessage());
            return;
          }",Either log or rethrow this exception.
c8b5f1755c0563e93f21036ecf88da37b567aa74,core/src/main/java/org/apache/accumulo/core/util/shell/commands/ListIterCommand.java,"  public int execute(final String fullCommand, final CommandLine cl, final Shell shellState) throws Exception {
    final String tableName = OptUtil.getTableOpt(cl, shellState);
    final Map<String,EnumSet<IteratorScope>> iterators = shellState.getConnector().tableOperations().listIterators(tableName);
      final String name = cl.getOptionValue(nameOpt.getOpt());
      final EnumSet<IteratorScope> scopes = iterators.get(name);
    if (!hasScope) {
    }    
    final StringBuilder sb = new StringBuilder(""-\n"");
    final Options o = new Options();",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/examples/src/test/java/org/apache/accumulo/examples/dirlist/CountTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
7956de7fec33bc25087e4589fde01d8705e6cfcc,src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingArrayCombiner.java,"import org.apache.accumulo.core.iterators.ValueFormatException;
        throw new ValueFormatException(e);
          try {
            la.add(Long.parseLong(s));
          } catch (NumberFormatException nfe) {
            throw new ValueFormatException(nfe);
          }",Move this variable to comply with Java Code Conventions.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/trace/src/main/java/cloudtrace/instrument/Span.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
1039b9ec83b9f3f99e6606d4f2b0849bdab9eb79,start/src/main/java/org/apache/accumulo/start/classloader/AccumuloClassLoader.java,  private static final Object lock = new Object();,Move this variable to comply with Java Code Conventions.
6abb3e5ccb533adff0ae715dc3eb0c4a56ed4874,core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java,"  private Option mergeOptStartRow, mergeOptEndRow, verboseOpt, forceOpt, sizeOpt;
    String tableName = OptUtil.configureTableOpt(cl, shellState);
    o.addOption(OptUtil.tableOpt(""table to be merged""));","Reduce this switch case number of lines from 8 to at most 5, for example by extracting code into methods."
c25fbd7478bbdc9eaeab11490572f501ad1381e7,server/src/main/java/org/apache/accumulo/server/master/recovery/RecoverLease.java,"  protected String server;
  protected String file;
  protected long start;
  public RecoverLease() {
  }
  
  public void init(String server, String file) {
      return new SubmitFileForRecovery(server, file);
      RecoverLease result = new RecoverLease();
      result.init(server, file);
      return result;","Rename the ""log"" logger to comply with the format ""LOG(?:GER)?""."
56c8b20d9f72a7be7b14a9234be6d78c1622213d,src/server/src/main/java/org/apache/accumulo/server/master/Master.java,"        String[] tablePropsToDelete = new String[] {""table.scan.cache.size"", ""table.scan.cache.enable""};

          
          for (String prop : tablePropsToDelete) {
            String propPath = ZooUtil.getRoot(instance) + Constants.ZTABLES + ""/"" + id + Constants.ZTABLE_CONF + ""/"" + prop;
            if (zoo.exists(propPath))
              zoo.delete(propPath, -1);
          }",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/format/DefaultFormatter.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
d73a06c4660278d22ea05a5a769ac08d43078e2f,server/src/main/java/org/apache/accumulo/server/master/Master.java,"        
          log.debug(""Failed to scan "" + Constants.METADATA_TABLE_NAME + "" table to wait for flush "" + tableId, e);
          log.debug(""Failed to scan "" + Constants.METADATA_TABLE_NAME + "" table to wait for flush "" + tableId, tde);
        // race condition... table no longer exists? This call will throw an exception if the table was deleted:
    final TabletStateStore stores[] = {new ZooTabletStateStore(new ZooStore(zroot)), new RootTabletStateStore(instance, systemAuths, this),
        new MetaDataStateStore(instance, systemAuths, this)};
      
      
  
    
      
      
      
    
  ","Immediately return this expression instead of assigning it to the temporary variable ""client""."
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloRowInputFormat.java," * <li>{@link AccumuloRowInputFormat#setConnectorInfo(JobConf, AccumuloToken)} OR {@link AccumuloRowInputFormat#setConnectorInfo(JobConf, Path)}",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a943f323b6ef9a614edee55c075eb63567b5c80a,server/src/main/java/org/apache/accumulo/server/gc/SimpleGarbageCollector.java,"import org.apache.accumulo.server.security.SystemCredentials;
    gc.init(fs, instance, SystemCredentials.get().getAsThrift(), serverConf.getConfiguration().getBoolean(Property.GC_TRASH_IGNORE));
        if (entry.getKey().getColumnFamily().equals(DataFileColumnFamily.NAME) || entry.getKey().getColumnFamily().equals(ScanFileColumnFamily.NAME)) {
        c = instance.getConnector(SystemCredentials.get().getPrincipal(), SystemCredentials.get().getToken());",Move this constructor to comply with Java Code Conventions.
f9506d2552d0e75939b6d67be8c3496b2e734098,examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/UniqueColumns.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",Replace all tab characters in this file by sequences of white-spaces.
4325cd202245dc839d860ed6ce5ebc24bb452586,core/src/main/java/org/apache/accumulo/core/client/impl/ServerClient.java,import org.apache.accumulo.fate.zookeeper.ZooCache;,"Remove this call to ""exit"" or ensure it is really required."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/image/Verify.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
7942da1d204d271bff01e9e93208cdd67d0eefa3,core/src/test/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormatTest.java,"      AccumuloInputFormat.setConnectorInfo(job, user, new PasswordToken(pass));
      AccumuloOutputFormat.setConnectorInfo(job, user, new PasswordToken(pass));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
3ae2b169d30ad1f39cc50540ddb0eb22321ada5d,core/src/main/java/org/apache/accumulo/core/client/impl/ThriftScanner.java,"            loc = TabletLocator.getInstance(instance, scanState.tableName).locateTablet(scanState.startRow, scanState.skipStartRow, false, credentials);
          TabletLocator.getInstance(instance, scanState.tableName).invalidateCache(loc.tablet_extent);
          TabletLocator.getInstance(instance, scanState.tableName).invalidateCache(loc.tablet_location);",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
4325cd202245dc839d860ed6ce5ebc24bb452586,fate/src/main/java/org/apache/accumulo/fate/Repo.java,package org.apache.accumulo.fate;,"Remove this call to ""exit"" or ensure it is really required."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/util/time/SimpleTimer.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 * Generic singleton timer: don't use it if you are going to do anything that will take very long. Please use it to reduce the number of threads dedicated to
 * simple events.
 * 
        if (instance == null) instance = new SimpleTimer();
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
fa4c0e47ea25a947c3f8190a212dd33694211ea9,server/src/main/java/org/apache/accumulo/server/test/performance/thrift/NullTserver.java,"import org.apache.accumulo.core.security.thrift.SecurityErrorCode;
      return new UpdateErrors(new HashMap<TKeyExtent,Long>(), new ArrayList<TConstraintViolationSummary>(), new HashMap<TKeyExtent, SecurityErrorCode>());",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
a943f323b6ef9a614edee55c075eb63567b5c80a,server/src/main/java/org/apache/accumulo/server/monitor/servlets/TablesServlet.java,"import org.apache.accumulo.server.security.SystemCredentials;
      MetaDataTableScanner scanner = new MetaDataTableScanner(instance, SystemCredentials.get().getAsThrift(), new Range(KeyExtent.getMetadataEntry(new Text(
          tableId), new Text()), KeyExtent.getMetadataEntry(new Text(tableId), null)), systemTableName);",Move this constructor to comply with Java Code Conventions.
057b8d6cb0ccbf472067a755d76eba7ee2e3fd71,test/src/test/java/org/apache/accumulo/test/functional/ZooCacheIT.java,"public class ZooCacheIT extends SimpleMacIT {
    assertEquals(0, exec(CacheTestClean.class, ""/zcTest-42"", ""/tmp/zcTest-42"").waitFor());
            CacheTestReader.main(new String[]{""/zcTest-42"", ""/tmp/zcTest-42"", getConnector().getInstance().getZooKeepers()});
    assertEquals(0, exec(CacheTestWriter.class, ""/zcTest-42"", ""/tmp/zcTest-42"", ""3"",""500"").waitFor());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
5597259bbfa3da9833cf047b480efbba6f46ed02,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/StringSummation.java,"/**
 * @deprecated since 1.4
 * @use org.apache.accumulo.core.iterators.user.SummingCombiner with SummingCombiner.Type.STRING
 */",1 duplicated blocks of code must be removed.
660634b70528861276d918502f21f622dc90103d,start/src/main/java/org/apache/commons/vfs2/provider/HdfsReadOnlyFileContentInfoFactory.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.commons.vfs2.provider;

import org.apache.commons.vfs2.FileContent;
import org.apache.commons.vfs2.FileContentInfo;
import org.apache.commons.vfs2.FileContentInfoFactory;
import org.apache.commons.vfs2.FileSystemException;
import org.apache.commons.vfs2.impl.DefaultFileContentInfo;

public class HdfsReadOnlyFileContentInfoFactory implements FileContentInfoFactory {

  public FileContentInfo create(FileContent fileContent) throws FileSystemException {
    //TODO: Need to figure out a way to get this information from the file.
    String content = ""text/plain"";
    String encoding = ""UTF-8"";
    return new DefaultFileContentInfo(content, encoding);
  }
  
}",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
75fc470e543790906017f772c56ee4f8cf241e29,server/src/main/java/org/apache/accumulo/server/logger/LogService.java,"    Instance instance = HdfsZooInstance.getInstance();
    ServerConfiguration conf = new ServerConfiguration(instance);
    FileSystem fs = FileUtil.getFileSystem(CachedConfiguration.getInstance(), conf.getConfiguration());
    Accumulo.init(fs, conf, ""logger"");
      logService = new LogService(conf, fs, hostname);
  public LogService(ServerConfiguration config, FileSystem fs, String hostname) throws UnknownHostException, KeeperException, InterruptedException, IOException {
    this.instance = config.getInstance();
    AccumuloConfiguration acuConf = config.getConfiguration();
    FileSystemMonitor.start(acuConf, Property.LOGGER_MONITOR_FS);
    for (String root : acuConf.get(Property.LOGGER_DIR).split("","")) {
    int poolSize = acuConf.getCount(Property.LOGGER_COPY_THREADPOOL_SIZE);
    boolean archive = acuConf.getBoolean(Property.LOGGER_ARCHIVE);
    ServerPort sp = TServerUtils.startServer(acuConf, Property.LOGGER_PORT, processor, this.getClass().getSimpleName(), ""Logger Client Service Handler"",",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
90898febb2d21e08ddea703618b63c8165283017,core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloRowInputFormat.java," * <li>{@link AccumuloRowInputFormat#setConnectorInfo(Job, String, byte[])} OR {@link AccumuloRowInputFormat#setConnectorInfo(Job, Path)}",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/iterator/OptimizedQueryIterator.java,package org.apache.accumulo.examples.wikisearch.iterator;,"Rename ""table"" which hides the field declared at line 107."
8992380c18cc3b46b35f922b5fecc5cae9371aad,src/wikisearch/query/src/main/java/org/apache/accumulo/wikisearch/iterator/DefaultIteratorEnvironment.java,package org.apache.accumulo.wikisearch.iterator;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
75fc470e543790906017f772c56ee4f8cf241e29,server/src/main/java/org/apache/accumulo/server/test/functional/PermissionsTest.java,"import org.apache.accumulo.core.client.Instance;
                || ServerConfiguration.getTableConfiguration(root_conn.getInstance(), tableId).get(Property.TABLE_BLOOM_ERRORRATE).equals(""003.14159%""))
                || !ServerConfiguration.getTableConfiguration(root_conn.getInstance(), tableId).get(Property.TABLE_BLOOM_ERRORRATE)
                    .equals(""003.14159%""))
          Instance instance = root_conn.getInstance();
          if (!ServerConfiguration.getTableConfiguration(instance, tableId).get(Property.TABLE_BLOOM_ERRORRATE).equals(""003.14159%""))
          if (ServerConfiguration.getTableConfiguration(instance, tableId).get(Property.TABLE_BLOOM_ERRORRATE).equals(""003.14159%""))",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1549df21eb4f3cd0f50bfa1c3ad6fee16581aa80,test/src/test/java/org/apache/accumulo/test/ShellServerTest.java,"    cluster.stop();
    traceProcess.destroy();
    folder.delete();
    String scans = exec(""listscans"", true);
    String lines[] = scans.split(""\n"");
    //System.out.println(""trace: "" + trace);",This block of commented-out lines of code should be removed.
4d9b0fac80c5ef9b3c581b6a0b7b08e62136daef,proxy/src/test/java/org/apache/accumulo/TestProxyReadWrite.java,"    PColumnUpdate update = new PColumnUpdate(ByteBuffer.wrap(cf.getBytes()), ByteBuffer.wrap(cq.getBytes()));
    update.setValue(value.getBytes());
    PColumnUpdate update = new PColumnUpdate(ByteBuffer.wrap(cf.getBytes()), ByteBuffer.wrap(cq.getBytes()));
    update.setValue(value.getBytes());
        tpc.proxy().updateAndFlush(userpass, testtable, mutations);
        tpc.proxy().updateAndFlush(userpass, testtable, mutations);
        tpc.proxy().updateAndFlush(userpass, testtable, mutations);
        tpc.proxy().updateAndFlush(userpass, testtable, mutations);
        tpc.proxy().writer_update(writer, mutations);
        tpc.proxy().writer_update(writer, mutations);
        tpc.proxy().writer_update(writer, mutations);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ee3a264e704c17de90c186065f50a0775ce4ad10,src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"import org.apache.accumulo.server.zookeeper.IZooReaderWriter;
    IZooReaderWriter zoo = ZooReaderWriter.getInstance();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/Node.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/file/blockfile/cache/CachedBlock.java,"  
  public final static long PER_BLOCK_OVERHEAD = ClassSize.align(ClassSize.OBJECT + (3 * ClassSize.REFERENCE) + (2 * SizeConstants.SIZEOF_LONG)
      + ClassSize.STRING + ClassSize.BYTE_BUFFER);
  
  static enum BlockPriority {
     * Accessed a single time (used for scan-resistance)
    SINGLE,
    /**
     * Accessed multiple times
     */
    MULTI,
    /**
     * Block from in-memory store
     */
    MEMORY
  };
  
  private final String blockName;
  private final byte buf[];
  private volatile long accessTime;
  private long size;
  private BlockPriority priority;
  
  public CachedBlock(String blockName, byte buf[], long accessTime) {
    this(blockName, buf, accessTime, false);
  }
  
  public CachedBlock(String blockName, byte buf[], long accessTime, boolean inMemory) {
    this.blockName = blockName;
    this.buf = buf;
    this.accessTime = accessTime;
    this.size = ClassSize.align(blockName.length()) + ClassSize.align(buf.length) + PER_BLOCK_OVERHEAD;
    if (inMemory) {
      this.priority = BlockPriority.MEMORY;
    } else {
      this.priority = BlockPriority.SINGLE;
  }
  
  /**
   * Block has been accessed. Update its local access time.
   */
  public void access(long accessTime) {
    this.accessTime = accessTime;
    if (this.priority == BlockPriority.SINGLE) {
      this.priority = BlockPriority.MULTI;
  }
  
  public long heapSize() {
    return size;
  }
  
  public int compareTo(CachedBlock that) {
    if (this.accessTime == that.accessTime) return 0;
    return this.accessTime < that.accessTime ? 1 : -1;
  }
  
  public byte[] getBuffer() {
    return this.buf;
  }
  
  public String getName() {
    return this.blockName;
  }
  
  public BlockPriority getPriority() {
    return this.priority;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
5597259bbfa3da9833cf047b480efbba6f46ed02,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/conf/AggregatorSet.java,"/**
 * @deprecated since 1.4
 */",1 duplicated blocks of code must be removed.
5bd33fa1e9625e3c088ee39f626c256aca75b0da,server/src/main/java/org/apache/accumulo/server/test/GCLotsOfCandidatesTest.java,"import org.apache.accumulo.core.client.BatchWriterConfig;
    BatchWriter bw = conn.createBatchWriter(Constants.METADATA_TABLE_NAME, new BatchWriterConfig());","Remove this unused method parameter ""e""."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/util/OpTimer.java,"package org.apache.accumulo.core.util;

import java.util.concurrent.atomic.AtomicLong;

import org.apache.log4j.Level;
import org.apache.log4j.Logger;

public class OpTimer {
	private Logger log;
	private Level level;
	private long t1;
	private long opid;
	private static AtomicLong nextOpid = new AtomicLong();
	
	public OpTimer(Logger log, Level level){
		this.log = log;
		this.level = level;
	}
	
	public OpTimer start(String msg){
		opid = nextOpid.getAndIncrement();
		if(log.isEnabledFor(level)) log.log(level, ""tid=""+Thread.currentThread().getId()+"" oid=""+opid+""  ""+msg);
		t1 = System.currentTimeMillis();
		return this;
	}
	
	public void stop(String msg){
		if(log.isEnabledFor(level)) {
			long t2 = System.currentTimeMillis();
			String duration = String.format(""%.3f secs"", (t2 -t1)/1000.0);
			msg = msg.replace(""%DURATION%"", duration);
			log.log(level, ""tid=""+Thread.currentThread().getId()+"" oid=""+opid+""  ""+msg);
		}
	}
}",Return empty string instead.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaMapper.java,"package org.apache.accumulo.examples.wikisearch.ingest;
import org.apache.accumulo.examples.wikisearch.ingest.ArticleExtractor.Article;
import org.apache.accumulo.examples.wikisearch.normalizer.LcNoDiacriticsNormalizer;
import org.apache.accumulo.examples.wikisearch.protobuf.Uid;
import org.apache.accumulo.examples.wikisearch.protobuf.Uid.List.Builder;","Rename ""table"" which hides the field declared at line 107."
d26386ceaf3d6ac8c192cb40e291485f871adada,server/src/main/java/org/apache/accumulo/server/security/handler/InsecureAuthenticator.java,    return super.getClass().getName();,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
93773813e5839ac9ffb4f5a2b2b70bcedb106286,server/src/main/java/org/apache/accumulo/server/metanalysis/IndexMeta.java,"import org.apache.accumulo.core.util.MetadataTable;
        if (key.tablet.getTableId().toString().equals(MetadataTable.ID)) {
        if (MetadataTable.PREV_ROW_COLUMN.equals(new Text(cu.getColumnFamily()), new Text(cu.getColumnQualifier())) && !cu.isDeleted()) {","Use ""Long.toString"" instead."
7812b78e878300e65f38f24fd74c87ce4d18ada7,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReaderIterator.java,"        client = ThriftUtil.getTServerClient(server, timeoutTracker.getTimeOut());","Immediately return this expression instead of assigning it to the temporary variable ""client""."
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,core/src/main/java/org/apache/accumulo/core/client/admin/SecurityOperations.java,"import org.apache.accumulo.core.security.tokens.SecurityToken;
  public void createUser(SecurityToken token) throws AccumuloException, AccumuloSecurityException;
   * @deprecated @since 1.5, use {@link #authenticateUser(SecurityToken)}
  public boolean authenticateUser(SecurityToken token) throws AccumuloException, AccumuloSecurityException;
   *           @deprecated @since 1.5, use {@link #changeUserPassword(SecurityToken)}
  public void changeUserPassword(SecurityToken newToken) throws AccumuloException, AccumuloSecurityException;
   * @deprecated @since 1.5, use {@link #createUser(SecurityToken)}
  void createUser(SecurityToken token, Authorizations authorization) throws AccumuloException, AccumuloSecurityException;",Either log or rethrow this exception.
87df5f68e2e29a6ff0445f08dca6be9dc65c6039,server/src/main/java/org/apache/accumulo/server/tabletserver/log/LogSorter.java,"
        } catch (Exception e) {","Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
1d138a73ad757c12b3d30aa1a6029b63cc3eaa66,core/src/test/java/org/apache/accumulo/core/client/mapred/AccumuloRowInputFormatTest.java,import org.apache.accumulo.core.security.tokens.PasswordToken;,Replace all tab characters in this file by sequences of white-spaces.
5bd33fa1e9625e3c088ee39f626c256aca75b0da,core/src/main/java/org/apache/accumulo/core/client/impl/MultiTableBatchWriterImpl.java,"import org.apache.accumulo.core.client.BatchWriterConfig;
  public MultiTableBatchWriterImpl(Instance instance, AuthInfo credentials, BatchWriterConfig config) {
    this.bw = new TabletServerBatchWriter(instance, credentials, config);","Remove this unused method parameter ""e""."
99da5641c28784c7b717cce6749673863c2ec8cf,core/src/main/java/org/apache/accumulo/core/client/admin/SecurityOperationsImpl.java,"import org.apache.accumulo.core.security.Credentials;
  private Credentials credentials;
  public SecurityOperationsImpl(Instance instance, Credentials credentials) {
        client.createLocalUser(Tracer.traceInfo(), credentials.toThrift(instance), principal, ByteBuffer.wrap(password.getPassword()));
        client.dropLocalUser(Tracer.traceInfo(), credentials.toThrift(instance), principal);
    final Credentials toAuth = new Credentials(principal, token);
        return client.authenticateUser(Tracer.traceInfo(), credentials.toThrift(instance), toAuth.toThrift(instance));
    final Credentials toChange = new Credentials(principal, token);
        client.changeLocalUserPassword(Tracer.traceInfo(), credentials.toThrift(instance), principal, ByteBuffer.wrap(token.getPassword()));
        client.changeAuthorizations(Tracer.traceInfo(), credentials.toThrift(instance), principal,
            ByteBufferUtil.toByteBuffers(authorizations.getAuthorizations()));
        return new Authorizations(client.getUserAuthorizations(Tracer.traceInfo(), credentials.toThrift(instance), principal));
        return client.hasSystemPermission(Tracer.traceInfo(), credentials.toThrift(instance), principal, perm.getId());
        return client.hasTablePermission(Tracer.traceInfo(), credentials.toThrift(instance), principal, table, perm.getId());
        client.grantSystemPermission(Tracer.traceInfo(), credentials.toThrift(instance), principal, permission.getId());
        client.grantTablePermission(Tracer.traceInfo(), credentials.toThrift(instance), principal, table, permission.getId());
        client.revokeSystemPermission(Tracer.traceInfo(), credentials.toThrift(instance), principal, permission.getId());
        client.revokeTablePermission(Tracer.traceInfo(), credentials.toThrift(instance), principal, table, permission.getId());
        return client.listLocalUsers(Tracer.traceInfo(), credentials.toThrift(instance));","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
040f891216154de5f7c8a87e25cefc0f816aea9c,test/src/test/java/org/apache/accumulo/test/functional/ChaoticBalancerIT.java,"public class ChaoticBalancerIT extends ConfigurableMacIT {
  @Test(timeout = 4 * 60 * 1000)
    for (int i = 0; i < 100; i++) {
    vopts.rows = opts.rows = 20000;",Either log or rethrow this exception.
bd5f4f05975ec1cf0f3cf715d9d0094ababd8e73,server/src/main/java/org/apache/accumulo/server/problems/ProblemReports.java,"    Connector connector = HdfsZooInstance.getInstance().getConnector(SecurityConstants.getSystemPrincipal(), SecurityConstants.getSystemToken());
                Connector connector = HdfsZooInstance.getInstance().getConnector(SecurityConstants.getSystemPrincipal(), SecurityConstants.getSystemToken());","Immediately return this expression instead of assigning it to the temporary variable ""connector""."
63401308a8fc8ff7ad54afa3e8bb2d93e1971a74,core/src/main/java/org/apache/accumulo/core/file/map/MapFileOperations.java,"    FileSKVIterator iter = new RangeIterator(new MapFileIterator(acuconf, fs, file, conf));","Use ""Integer.toString"" instead."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/master/tableOps/TableRangeOp.java,"    Connector conn = master.getConnector();
    String tableDir = Constants.getMetadataTableDir(master.getConfiguration().getConfiguration());
  public Repo<Master> call(long tid, Master master) throws Exception {
    MergeInfo mergeInfo = master.getMergeInfo(tableIdText);
    master.clearMergeState(tableIdText);","Remove this unused private ""appendProp"" method."
84a508592afc8fde6e035f6fef7f5990752256f2,server/src/main/java/org/apache/accumulo/server/test/functional/ZombieTServer.java,"import org.apache.accumulo.core.security.thrift.ThriftInstanceTokenWrapper;
    synchronized public void fastHalt(TInfo tinfo, ThriftInstanceTokenWrapper credentials, String lock) {
    public TabletServerStatus getTabletServerStatus(TInfo tinfo, ThriftInstanceTokenWrapper credentials) throws ThriftSecurityException, TException {
    synchronized public void halt(TInfo tinfo, ThriftInstanceTokenWrapper credentials, String lock) throws ThriftSecurityException, TException {","Immediately return this expression instead of assigning it to the temporary variable ""ret""."
da83fa21251caaad5005bece365b46428612691d,core/src/main/java/org/apache/accumulo/core/Constants.java,  public static final String VERSION = FilteredConstants.VERSION;,Add a private constructor to hide the implicit public one.
d9ab84498cad5ee70eee3d337224b3d5ca7ab0db,core/src/main/java/org/apache/accumulo/core/client/security/tokens/PasswordToken.java,"  public PasswordToken() {
    password = new byte[0];
  }",Either log or rethrow this exception.
f343540ca4b9e4359c43d6f990e486de960b637c,core/src/main/java/org/apache/accumulo/core/util/shell/commands/SetIterCommand.java,"    String tableName = OptUtil.getTableOpt(cl, shellState);",Either log or rethrow this exception.
e814883922556bb840aa1f0633f8b9223fdb50f8,start/src/test/java/org/apache/accumulo/test/AccumuloDFSBase.java,"import java.io.File;
      vfs.setReplicator(new DefaultFileReplicator(new File(System.getProperty(""java.io.tmpdir""), ""accumulo-vfs-cache-""
          + System.getProperty(""user.name"", ""nouser""))));",Replace all tab characters in this file by sequences of white-spaces.
cb6bcc517b27df03106d7e5eca344ed45699e31f,src/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterState.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@SuppressWarnings(""all"") public enum MasterState implements org.apache.thrift.TEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
9f03eb0f8739fc70ca829e3f0fdd7e7fa8ece9d3,examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/bulk/BulkIngestExample.java,"      Collection<Text> splits = connector.tableOperations().listSplits(opts.tableName, 100);",Either log or rethrow this exception.
ed0f9eef789024e70538194f12f5e5126975ae97,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/filedata/VisibilityCombiner.java,"/**
 * A utility for merging visibilities into the form {@code (VIS1)|(VIS2)|...|(VISN)}. Used by the {@link ChunkCombiner}.
 */",Replace this use of System.out or System.err by a logger.
02a26268575ac93d74796ec8fd8798f85b92dac1,server/src/main/java/org/apache/accumulo/server/util/Admin.java,"      pass = cl.hasOption(""p"") ? cl.getOptionValue(""p"").getBytes() : null;
              pass = new ConsoleReader().readLine(""Enter current password for '"" + user + ""': "", '*').getBytes();","Remove this unused method parameter ""ex""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/data/ColumnUpdate.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
40967cfc1221a11a2ce493db0639a88344afcd5f,core/src/main/java/org/apache/accumulo/core/util/shell/commands/AddSplitsCommand.java,"  public int execute(final String fullCommand, final CommandLine cl, final Shell shellState) throws Exception {
    final String tableName = OptUtil.getTableOpt(cl, shellState);
    final boolean decode = cl.hasOption(base64Opt.getOpt());
    final TreeSet<Text> splits = new TreeSet<Text>();
      final String f = cl.getOptionValue(optSplitsFile.getOpt());
        if (!line.isEmpty()) {
        }
      if (cl.getArgList().isEmpty()) {
      }
    if (!shellState.getConnector().tableOperations().exists(tableName)) {
    }
    final Options o = new Options();",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,contrib/accumulo_sample/query/src/main/java/parser/TreeNode.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousWalk.java,"        if (sleepTime > 0)
          Thread.sleep(sleepTime);
      if (sleepTime > 0)
        Thread.sleep(sleepTime);
      if (pr != null)
        break;
    if (val.length == 0)
      throw new IllegalArgumentException();
    if (val[53] != ':')
      throw new IllegalArgumentException(new String(val));
      if (val[54 + 16] != ':')
        throw new IllegalArgumentException(new String(val));
      if (val[val.length - 9] != ':')
        throw new IllegalArgumentException(new String(val));
    if (ckOff < 0)
      return;","Remove this call to ""exit"" or ensure it is really required."
7812b78e878300e65f38f24fd74c87ce4d18ada7,server/src/main/java/org/apache/accumulo/server/master/Master.java,      final InetSocketAddress addr = AddressUtil.parseAddress(tabletServer);,"Immediately return this expression instead of assigning it to the temporary variable ""client""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/QuitCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
256555228656d5bd442305142aa0fbf7e1009ebd,src/core/src/main/java/org/apache/accumulo/core/iterators/FirstEntryInRowIterator.java,"    if (finished == true || lastRowFound == null)
        else
        {
          finished = true;
          break;
        }
  private boolean finished = true;

  @Override
  public boolean hasTop()
  {
    return !finished && getSource().hasTop();
  }

    finished = false;
",Return empty string instead.
937e6b8543b2595bcd5b086a80ed776380251d9b,core/src/main/java/org/apache/accumulo/core/iterators/OptionDescriber.java,"   * @return true if options are valid, false otherwise (IllegalArgumentException preferred)
   * @exception IllegalArgumentException
   *              if there are problems with the options","Remove the literal ""false"" boolean value."
a1c5667873834cdd74cb3eb5a19ec25486fba290,core/src/main/java/org/apache/accumulo/core/util/shell/commands/AuthenticateCommand.java,"      shellState.getReader().println();
    shellState.getReader().println((valid ? ""V"" : ""Not v"") + ""alid"");",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/functional/ZombieTServer.java,"package org.apache.accumulo.test.functional;
  public static class ThriftClientHandler extends org.apache.accumulo.test.performance.thrift.NullTserver.ThriftClientHandler {","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
75fc470e543790906017f772c56ee4f8cf241e29,server/src/main/java/org/apache/accumulo/server/util/MetadataTable.java,"import org.apache.accumulo.core.conf.AccumuloConfiguration;
    if (!extent.isRootTablet()) {
    if (!extent.isRootTablet()) {
  public static boolean getBatchFromRootTablet(AccumuloConfiguration conf, AuthInfo credentials, Text startRow, SortedMap<Key,Value> results,
      SortedSet<Column> columns,
            results, columns, skipStartRow, size, Constants.NO_AUTHS, true, conf);
  public static SortedMap<Key,Value> getRootMetadataDataFileEntries(AccumuloConfiguration conf, KeyExtent extent, AuthInfo credentials) {
    return getRootMetadataDataEntries(conf, extent, columns, credentials);
  public static SortedMap<Key,Value> getRootMetadataDataEntries(AccumuloConfiguration conf, KeyExtent extent, SortedSet<Column> columns, AuthInfo credentials) {
      boolean more = getBatchFromRootTablet(conf, credentials, metadataEntry, entries, columns, false, Constants.SCAN_BATCH_SIZE);
        more = getBatchFromRootTablet(conf, credentials, startRow, entries, columns, false, Constants.SCAN_BATCH_SIZE);
    if (entry.extent.isRootTablet()) {
    if (extent.isRootTablet()) {
      if (entry.extent.isRootTablet()) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/examples/src/test/java/org/apache/accumulo/examples/filedata/KeyUtilTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
af9a1216a1853a7bd6e89ab581fadaf682cb69a0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteTableCommand.java,"    tableOpt = new Option(Shell.tableOption, ""tableName"", true, ""table to delete"");",Replace all tab characters in this file by sequences of white-spaces.
2eec39bbe799a8c4042802038084a505f12160a4,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/CompactCommand.java,"      shellState.getConnector().tableOperations().compact(tableName, startRow, endRow, flush, wait);
      Shell.log.info(""Compaction of table "" + tableName + "" "" + (wait ? ""completed"" : ""started"") + "" for given range"");",Either log or rethrow this exception.
f23e08147fcc05637c69996475e92db89e323a68,server/src/main/java/org/apache/accumulo/server/util/TServerUtils.java,    SimpleTimer.getInstance().schedule(new Runnable() {,Either log or rethrow this exception.
8dccbe7e9960c204bf82326c9fe6e28dcb8d647e,core/src/main/java/org/apache/accumulo/core/security/thrift/ThriftSecurityException.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",296 duplicated blocks of code must be removed.
e8bff7b6f821629f3a094412eca04e7b7b7056b8,src/server/src/main/java/org/apache/accumulo/server/test/functional/ServerSideErrorTest.java,"    Combiner.setColumns(is, Collections.singletonList(new Combiner.Column(""acf"")));","Use ""Integer.toString"" instead."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/util/time/SimpleTimer.java,"    if (instance == null)
      instance = new SimpleTimer();","Remove this call to ""exit"" or ensure it is really required."
6a5500a5b3f34b26386877e332973e7b926aa4ce,test/src/main/java/org/apache/accumulo/test/randomwalk/security/AlterTablePerm.java,"import org.apache.accumulo.core.security.thrift.Credential;
    Credential source;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/monitor/util/TableRow.java,"  private int size;
  private ArrayList<Object> row;
  
  TableRow(int size) {
    this.size = size;
    this.row = new ArrayList<Object>(size);
  }
  
  public boolean add(Object obj) {
    if (row.size() == size) throw new IllegalStateException(""Row is full."");
    return row.add(obj);
  }
  
  Object get(int index) {
    return row.get(index);
  }
  
  int size() {
    return row.size();
  }
  
  Object set(int i, Object value) {
    return row.set(i, value);
  }
  
  public static <T> Comparator<TableRow> getComparator(int index, Comparator<T> comp) {
    return new TableRowComparator<T>(index, comp);
  }
  
  private static class TableRowComparator<T> implements Comparator<TableRow> {
    private int index;
    private Comparator<T> comp;
    public TableRowComparator(int index, Comparator<T> comp) {
      this.index = index;
      this.comp = comp;
    @SuppressWarnings(""unchecked"")
    @Override
    public int compare(TableRow o1, TableRow o2) {
      return comp.compare((T) o1.get(index), (T) o2.get(index));
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ff1e582020a1437e9c520ef3a1af99477462d803,core/src/main/java/org/apache/accumulo/core/util/shell/commands/RenameTableCommand.java,"import org.apache.accumulo.core.util.shell.Token;
    return ""renames a table"";",2 duplicated blocks of code must be removed.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,examples/simple/src/main/java/org/apache/accumulo/examples/simple/client/SequentialBatchWriter.java,"import org.apache.accumulo.core.cli.BatchWriterOpts;
import org.apache.accumulo.core.cli.ClientOnRequiredTable;
import com.beust.jcommander.Parameter;

  
  static class Opts extends ClientOnRequiredTable {
    @Parameter(names=""--start"")
    long start = 0;
    @Parameter(names=""--num"", required=true)
    long num = 0;
    @Parameter(names=""--size"", required=true, description=""size of the value to write"")
    int valueSize = 0;
    @Parameter(names=""--vis"", converter=VisibilityConverter.class)
    ColumnVisibility vis = new ColumnVisibility();
  }
  
    Opts opts = new Opts();
    BatchWriterOpts bwOpts = new BatchWriterOpts();
    opts.parseArgs(SequentialBatchWriter.class.getName(), args, bwOpts);
    Connector connector = opts.getConnector();
    BatchWriter bw = connector.createBatchWriter(opts.tableName, bwOpts.getBatchWriterConfig());
    long end = opts.start + opts.num;
    for (long i = opts.start; i < end; i++) {
      Mutation m = RandomBatchWriter.createMutation(i, opts.valueSize, opts.vis);","Remove this unused private ""appendProp"" method."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/master/state/TabletLocationState.java,"    if (walogs == null)
      walogs = Collections.emptyList();
    if (server == null)
      return TabletState.UNASSIGNED;
      if (liveServers.contains(server))
        if (server.equals(future)) {
          return TabletState.ASSIGNED;
        } else {
          return TabletState.HOSTED;
        }","Remove this call to ""exit"" or ensure it is really required."
be646246ba8add6bacf025c448f1e9511e475c2c,core/src/test/java/org/apache/accumulo/core/util/shell/ShellTest.java,"    exec(""setauths -s y,z,x"", true);
    exec(""getauths"", true,""x,y,z"");
    exec(""getauths"", true, ""a,x,y,z"");",1 duplicated blocks of code must be removed.
aa7110234e15a017bb1dbc99b4351f0bf06cc73b,test/src/test/java/org/apache/accumulo/test/functional/TableIT.java,"
    String tableName = getTableNames(1)[0];
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
8dccbe7e9960c204bf82326c9fe6e28dcb8d647e,core/src/main/java/org/apache/accumulo/core/master/thrift/DeadServer.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",296 duplicated blocks of code must be removed.
e148bc7615e5147f306ef70eeb4fe13631daa3c8,src/server/src/main/java/org/apache/accumulo/server/tabletserver/InMemoryMap.java,"    MemoryIterator mi = new MemoryIterator(new PartialMutationSkippingIterator(ssi, mc));
    return map.skvIterator();","Use ""Integer.toString"" instead."
ef9c0044e5e2de5e616c21527ed5df5baed3b254,server/src/main/java/org/apache/accumulo/server/tabletserver/log/SortedLogRecovery.java,"
  static class UnusedException extends Exception {
    private static final long serialVersionUID = 1L;

    public UnusedException() { super(); }
  }

        } catch (UnusedException ex) {
          log.info(""Ignoring log file "" + logfile + "" appears to be unused by "" + extent);
          tids[i] = -1;
  int findLastStartToFinish(MultiReader reader, int fileno, KeyExtent extent, Set<String> tabletFiles, LastStartToFinish lastStartToFinish) throws IOException, EmptyMapFileException, UnusedException {
      throw new UnusedException();",Either log or rethrow this exception.
99d8e8b55e5b594d6ba4f4cba804aa1e01066f6e,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/Compact.java,"    range.add(new Text(String.format(""%016x"", rand.nextLong() & 0x7fffffffffffffffl)));
    range.add(new Text(String.format(""%016x"", rand.nextLong() & 0x7fffffffffffffffl)));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d138a73ad757c12b3d30aa1a6029b63cc3eaa66,test/src/main/java/org/apache/accumulo/test/randomwalk/State.java,import org.apache.accumulo.core.security.tokens.PasswordToken;,Replace all tab characters in this file by sequences of white-spaces.
7e63948e273b0c282f006dd2a72c449586d1801f,server/src/test/java/org/apache/accumulo/server/master/state/RootTabletStateStoreTest.java,"import static org.junit.Assert.fail;
import org.apache.accumulo.server.master.state.TabletLocationState.BadLocationStateException;
import org.junit.Assert;
    TabletLocationState assigned = null;
    try {
      assigned = new TabletLocationState(root, server, null, null, null, false);
    } catch (BadLocationStateException e) {
      fail(""Unexpected error "" + e);
    }
    TabletLocationState broken = null;
    try {
      broken = new TabletLocationState(notRoot, server, null, null, null, false);
    } catch (BadLocationStateException e) {
      fail(""Unexpected error "" + e);
    }",Either log or rethrow this exception.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/test/java/org/apache/accumulo/server/util/TabletIteratorTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
99da5641c28784c7b717cce6749673863c2ec8cf,test/src/main/java/org/apache/accumulo/test/randomwalk/security/SecurityFixture.java,"    state.set(""rootUserPass"", state.getCredentials().getToken());","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousIngest.java,"    if (cksum != null)
      dataLen += 8;
    if (added != 16)
      throw new RuntimeException("" "" + added);","Remove this call to ""exit"" or ensure it is really required."
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaConfiguration.java,package org.apache.accumulo.examples.wikisearch.ingest;,2 duplicated blocks of code must be removed.
2bd8f1b07c42fcbf8742ba08e83dddc264a4aa1b,test/src/main/java/org/apache/accumulo/test/continuous/ContinuousBatchWalker.java,    bs.close();,Either log or rethrow this exception.
8b4f7b02fae7517e3482b0b5274456333b512e3d,server/src/main/java/org/apache/accumulo/server/util/TabletIterator.java,"import java.util.Map.Entry;
    Constants.METADATA_PREV_ROW_COLUMN.fetch(scanner);
    Constants.METADATA_DIRECTORY_COLUMN.fetch(scanner);",Replace all tab characters in this file by sequences of white-spaces.
2e489459cb0757aa9f2a893b5ceb6914af0dabac,server/src/main/java/org/apache/accumulo/server/tabletserver/FileManager.java,"import org.apache.accumulo.core.iterators.system.TimeSettingIterator;
  FileManager(FileSystem fs, int maxOpen, BlockCache dataCache, BlockCache indexCache) {
        FileSKVIterator reader = FileOperations.getInstance().openReader(file, false, fs, fs.getConf(),
            ServerConfiguration.getTableConfiguration(table.toString()),","Remove this unused method parameter ""hostname""."
bfc44fd328c471d06b480835ba826b706dcf6816,core/src/main/java/org/apache/accumulo/core/client/impl/MetadataLocationObtainer.java,"import org.apache.accumulo.core.security.Authorizations;
          serverSideIteratorList, serverSideIteratorOptions, Constants.SCAN_BATCH_SIZE, Authorizations.EMPTY, false, instance.getConfiguration());
            serverSideIteratorOptions, Constants.SCAN_BATCH_SIZE, Authorizations.EMPTY, false, instance.getConfiguration());
      TabletServerBatchReaderIterator.doLookup(tserver, tabletsRanges, failures, unscanned, rr, columns, credentials, opts, Authorizations.EMPTY,","Remove this unused method parameter ""range""."
be2fdba7d2851efd7ac2e41aa377b4d32f620ed6,src/server/src/test/java/org/apache/accumulo/server/client/BulkImporterTest.java,"    for (String part : new String[] {""b"", ""bm"", ""c"", ""cm"", ""d"", ""dm"", ""e"", ""em"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l""}) {
    writer.append(new Key(""dd"", ""cf"", ""cq1""), empty);
    Assert.assertEquals(5, overlaps.size());
    Assert.assertEquals(new KeyExtent(tableId, new Text(""a""), null), overlaps.get(0).tablet_extent);
    Assert.assertEquals(new KeyExtent(tableId, new Text(""d""), new Text(""cm"")), overlaps.get(1).tablet_extent);
    Assert.assertEquals(new KeyExtent(tableId, new Text(""dm""), new Text(""d"")), overlaps.get(2).tablet_extent);
    Assert.assertEquals(new KeyExtent(tableId, new Text(""j""), new Text(""i"")), overlaps.get(3).tablet_extent);
    Assert.assertEquals(new KeyExtent(tableId, null, new Text(""l"")), overlaps.get(4).tablet_extent);
    Assert.assertEquals(3, overlaps2.size());
    Assert.assertEquals(new KeyExtent(tableId, new Text(""d""), new Text(""cm"")), overlaps2.get(0).tablet_extent);
    Assert.assertEquals(new KeyExtent(tableId, new Text(""dm""), new Text(""d"")), overlaps2.get(1).tablet_extent);
    Assert.assertEquals(new KeyExtent(tableId, new Text(""j""), new Text(""i"")), overlaps2.get(2).tablet_extent);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c215c7b796b0336a93bfd11981159e8663e35825,core/src/main/java/org/apache/accumulo/core/client/IsolatedScanner.java,"import java.util.concurrent.TimeUnit;
    private long timeout;
        scanner.setTimeout(timeout, TimeUnit.MILLISECONDS);
    public RowBufferingIterator(Scanner scanner, ScannerOptions opts, Range range, long timeout, int batchSize, RowBufferFactory bufferFactory) {
      this.timeout = timeout;
    this.timeOut = scanner.getTimeout(TimeUnit.MILLISECONDS);
    if (timeOut == Integer.MAX_VALUE)
      setTimeout(Long.MAX_VALUE, TimeUnit.MILLISECONDS);
    else
      setTimeout(timeOut, TimeUnit.SECONDS);
    long timeout = getTimeout(TimeUnit.SECONDS);
    if (timeout >= Integer.MAX_VALUE)
      return Integer.MAX_VALUE;
    return (int) timeout;",Move this constructor to comply with Java Code Conventions.
e3db57fec95d5dbd27aef1e06be204d577ceffa4,contrib/accumulo_sample/query/src/main/java/iterator/AbstractEvaluatingIterator.java,"import org.apache.commons.jexl2.parser.ParseException;
import org.apache.log4j.Logger;

import parser.EventFields;
import parser.QueryEvaluator;
  protected SortedKeyValueIterator<Key,Value> iterator;
   * @throws IOException
  public abstract boolean isKeyAccepted(Key key) throws IOException;","Remove this unused ""seekTime"" private field."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/master/state/TabletLocationState.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
7942da1d204d271bff01e9e93208cdd67d0eefa3,server/src/main/java/org/apache/accumulo/server/util/VerifyTabletAssignments.java,"import org.apache.accumulo.core.security.thrift.TCredentials;
  private static void checkTabletServer(AccumuloConfiguration conf, TCredentials st, Entry<String,List<KeyExtent>> entry,",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
754f174a705d3a263adda0ad4a600cd27c066b5b,src/core/src/test/java/org/apache/accumulo/core/client/impl/ScannerOptionsTest.java,"import static org.junit.Assert.fail;
import org.apache.accumulo.core.iterators.DebugIterator;
  
  @Test
  public void testIteratorConflict() {
    ScannerOptions options = new ScannerOptions();
    options.addScanIterator(new IteratorSetting(1, ""NAME"", DebugIterator.class));
    try {
      options.addScanIterator(new IteratorSetting(2, ""NAME"", DebugIterator.class));
      fail();
    } catch (IllegalArgumentException e) {}
    try {
      options.addScanIterator(new IteratorSetting(1, ""NAME2"", DebugIterator.class));
      fail();
    } catch (IllegalArgumentException e) {}
  }","Remove the literal ""true"" boolean value."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/zookeeper/TransactionWatcher.java,"      String path = ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + Long.toString(tid);
      rdr.sync(path);
      return rdr.exists(path);","Remove this unused private ""appendProp"" method."
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/util/LocalityCheck.java,"import org.apache.accumulo.server.cli.ClientOpts;
    ClientOpts opts = new ClientOpts();
    opts.parseArgs(LocalityCheck.class.getName(), args);
    
    Connector connector = opts.getConnector();","Remove this call to ""exit"" or ensure it is really required."
446a37a9795f2df7adc841154ca05add79cf286e,test/src/test/java/org/apache/accumulo/test/functional/FunctionalTestUtils.java,"import org.apache.accumulo.core.metadata.MetadataTable;
import org.apache.accumulo.core.metadata.schema.MetadataSchema;
    scanner.fetchColumnFamily(MetadataSchema.TabletsSection.DataFileColumnFamily.NAME);
    MetadataSchema.TabletsSection.TabletColumnFamily.PREV_ROW_COLUMN.fetch(scanner);
      if (entry.getKey().getColumnFamily().equals(MetadataSchema.TabletsSection.DataFileColumnFamily.NAME)) {
    c.tableOperations().importDirectory(table, dir, failDir, false);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f765888e3decac70571cf836e5300fb9a015b38e,core/src/main/java/org/apache/accumulo/core/file/FileUtil.java,"      log.debug(String.format(""Found midPoint from indexes in %6.2f secs.%n"", ((t2 - t1) / 1000.0)));",Use isEmpty() to check whether the collection is empty or not.
93773813e5839ac9ffb4f5a2b2b70bcedb106286,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"import org.apache.accumulo.core.util.RootTable;
          throw new IllegalArgumentException(""Cannot batch query "" + MetadataTable.NAME + "" and non "" + MetadataTable.NAME + "" tablets "" + threadPoolExtent
              + "" "" + keyExtent);
    return new Pair<Text,KeyExtent>(new Text(RootTable.ZROOT_TABLET), null);
    List<ColumnFQ> columnsToFetch = Arrays.asList(new ColumnFQ[] {MetadataTable.DIRECTORY_COLUMN, MetadataTable.PREV_ROW_COLUMN,
        MetadataTable.SPLIT_RATIO_COLUMN, MetadataTable.OLD_PREV_ROW_COLUMN, MetadataTable.TIME_COLUMN});
    ScannerImpl scanner = new ScannerImpl(HdfsZooInstance.getInstance(), SecurityConstants.getSystemCredentials(), MetadataTable.ID, Authorizations.EMPTY);
      if (MetadataTable.OLD_PREV_ROW_COLUMN.hasColumns(entry.getKey())) {
      if (cf.equals(MetadataTable.FUTURE_LOCATION_COLUMN_FAMILY)) {
      } else if (cf.equals(MetadataTable.CURRENT_LOCATION_COLUMN_FAMILY)) {
      } else if (MetadataTable.PREV_ROW_COLUMN.hasColumns(key)) {
      } else if (MetadataTable.DIRECTORY_COLUMN.hasColumns(key)) {
      } else if (MetadataTable.TIME_COLUMN.hasColumns(key)) {","Use ""Long.toString"" instead."
738cd5159b7d2deed967537a401586e0bd5cad74,test/src/test/java/org/apache/accumulo/test/ShellServerTest.java,"    exec(""getauths"", true, ""foo"", true);
    exec(""getauths"", true, ""bar"", true);",1 duplicated blocks of code must be removed.
724aa1390102ce1fb367f81016290f48ed0a25e5,src/core/src/main/java/org/apache/accumulo/core/client/impl/ServerClient.java,"    return getConnection(instance, true);
  }
  
  public static Pair<String,ClientService.Iface> getConnection(Instance instance, boolean preferCachedConnections) throws TTransportException {
      Pair<String,TTransport> pair = ThriftTransportPool.getInstance().getAnyTransport(servers, preferCachedConnections);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaInputFormat.java,"package org.apache.accumulo.examples.wikisearch.ingest;
import org.apache.accumulo.examples.wikisearch.reader.AggregatingRecordReader;","Rename ""table"" which hides the field declared at line 107."
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,server/src/main/java/org/apache/accumulo/server/gc/SimpleGarbageCollector.java,"  
  
    
  
  
  
  
    
    
    
  
  
  
  
  
    
  
    
      
    
    
      
        
        
        
          
        
        
      
      
      
      
  
  
    
    
    
    
    
    
      
      
        if (!moveToTrash(p)) 
  
    
      
          
        
    
  
  
    
    
    
    
  
  
    
    
      
      
      
      
        
        
    
    
    
      
          
          
  
    
        
    
    
    
      
          
            
            
            
          
      
    
    
    
  
  ",Replace all tab characters in this file by sequences of white-spaces.
9b869767e23ef39c3df7d3c533c0e71acd5a2510,src/server/src/main/java/org/apache/accumulo/server/master/state/MergeStats.java,"      if (!tls.extent.getTableId().equals(tableId)) {
        break;
      }
      if (pr != null && (tls.extent.getPrevEndRow() == null || !tls.extent.getPrevEndRow().equals(pr)))
      if (tls.extent.getPrevEndRow() != null && extent.getEndRow() != null && tls.extent.getPrevEndRow().compareTo(extent.getEndRow()) > 0) {","Remove this unused method parameter ""lock""."
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/helloworld/ReadData.java,package org.apache.accumulo.examples.simple.helloworld;,2 duplicated blocks of code must be removed.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,examples/simple/src/main/java/org/apache/accumulo/examples/simple/dirlist/Viewer.java,"import com.beust.jcommander.Parameter;

  public Viewer(Opts opts)
    q = new QueryUtil(opts);
    fdq = new FileDataQuery(opts.instance, opts.zookeepers, opts.user, opts.getPassword(), opts.dataTable, opts.auths);
    this.topPath = opts.path;
  static class Opts extends QueryUtil.Opts {
    @Parameter(names=""--dataTable"")
    String dataTable = ""dataTable"";
  }
  
    Opts opts = new Opts();
    opts.parseArgs(Viewer.class.getName(), args);
    
    Viewer v = new Viewer(opts);","Remove this unused private ""appendProp"" method."
9d80c906c8edbf5128d3421f77a5d8c2b3241e36,proxy/src/test/java/org/apache/accumulo/proxy/SimpleTest.java,"    // this is a oneway call, so it does not throw exceptions
    client.update(writer, mutation(""row2"", ""cf"", ""cq"", ""value2""));
",Either log or rethrow this exception.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/DeleteTable.java,"package org.apache.accumulo.test.randomwalk.concurrent;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
9cc068dd87d479bbc6f1445e9003b02682144751,core/src/test/java/org/apache/accumulo/core/client/lexicoder/PairLexicoderTest.java,"/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.client.lexicoder;

import org.apache.accumulo.core.util.Pair;

/**
 * 
 */
public class PairLexicoderTest extends LexicoderTest {
  public void testSortOrder() {
    PairLexicoder<String,String> plexc = new PairLexicoder<String,String>(new StringLexicoder(), new StringLexicoder());
    
    assertSortOrder(plexc, new Pair<String,String>(""a"", ""b""), new Pair<String,String>(""a"", ""bc""), new Pair<String,String>(""a"", ""c""), new Pair<String,String>(
        ""ab"", ""c""), new Pair<String,String>(""ab"", """"), new Pair<String,String>(""ab"", ""d""), new Pair<String,String>(""b"", ""f""), new Pair<String,String>(""b"", ""a""));
    
    PairLexicoder<Long,String> plexc2 = new PairLexicoder<Long,String>(new LongLexicoder(), new StringLexicoder());
    
    assertSortOrder(plexc2, new Pair<Long,String>(0x100l, ""a""), new Pair<Long,String>(0x100l, ""ab""), new Pair<Long,String>(0xf0l, ""a""), new Pair<Long,String>(
        0xf0l, ""ab""));
  }
}",Rename this generic name to match the regular expression '^[A-Z]$'.
86c7a24494b2d41e9ac3277a09d1f7fe5d09fd19,server/src/main/java/org/apache/accumulo/server/util/Initialize.java,"import org.apache.accumulo.server.security.AuditedSecurityOperation;
    AuditedSecurityOperation.getInstance(iid).initializeSecurity(SecurityConstants.getSystemCredentials(), ROOT_USER, rootpass);
      Configuration conf = CachedConfiguration.getInstance();
      int max = conf.getInt(""dfs.replication.max"", 512);
      // Hadoop 0.23 switched the min value configuration name
      int min = Math.max(conf.getInt(""dfs.replication.min"", 1), conf.getInt(""dfs.namenode.replication.min"", 1));
      if (max < 5)
        setMetadataReplication(max, ""max"");
      if (min > 5)
        setMetadataReplication(min, ""min"");
  private static void setMetadataReplication(int replication, String reason) throws IOException {
    String rep = getConsoleReader().readLine(
        ""Your HDFS replication "" + reason
            + "" is not compatible with our default !METADATA replication of 5. What do you want to set your !METADATA replication to? ("" + replication + "") "");
    if (rep == null || rep.length() == 0)
      rep = Integer.toString(replication);
    else
      // Lets make sure it's a number
      Integer.parseInt(rep);
    initialMetadataConf.put(Property.TABLE_FILE_REPLICATION.getKey(), rep);
  }
","Reduce this switch case number of lines from 44 to at most 5, for example by extracting code into methods."
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/client/BatchWriter.java,"  
  /**
   * Queues one mutation to write
   * 
   * @param m
   *          the mutation to add
   * @throws MutationsRejectedException
   *           this could be thrown because current or previous mutations failed
   */
  
  public void addMutation(Mutation m) throws MutationsRejectedException;
  
  /**
   * Queues several mutations to write
   * 
   * @param iterable
   *          allows adding any number of mutations iteratively
   * @throws MutationsRejectedException
   *           this could be thrown because current or previous mutations failed
   */
  public void addMutations(Iterable<Mutation> iterable) throws MutationsRejectedException;
  
  /**
   * Send any buffered mutations to Accumulo immediately.
   * 
   * @throws MutationsRejectedException
   *           this could be thrown because current or previous mutations failed
   */
  public void flush() throws MutationsRejectedException;
  
  /**
   * Flush and release any resources.
   * 
   * @throws MutationsRejectedException
   *           this could be thrown because current or previous mutations failed
   */
  public void close() throws MutationsRejectedException;
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
906ed038bfc3870ab0b19935c332903c3ee699e3,src/server/src/main/java/org/apache/accumulo/server/master/state/MergeStats.java,"      if (chopped) {
        if (state.equals(TabletState.HOSTED)) {
          this.chopped++;
        } else if (!hasWALs) {
          this.chopped++;
        }
      }
    log.info(""Computing next merge state for "" + info.getRange() + "" which is presently "" + state + "" isDelete : "" + info.isDelete());
      log.info(""failed to see any tablets for this range, ignoring "" + info.getRange());
        log.info(""Merge range is already contained in a single tablet "" + info.getRange());
            log.info(""Waiting for "" + info + "" lower split to occur "" + info.getRange());
            log.info(""Waiting for "" + info + "" upper split to occur "" + info.getRange());
        log.info(""Waiting for "" + hosted + "" hosted tablets to be "" + total + "" "" + info.getRange());
      log.info(chopped + "" tablets are chopped "" + info.getRange());
        log.info(""Waiting for "" + chopped + "" chopped tablets to be "" + needsToBeChopped + "" "" + info.getRange());
        log.info(chopped + "" tablets are chopped, "" + unassigned + "" are offline "" + info.getRange());
          log.info(""Waiting for "" + unassigned + "" unassigned tablets to be "" + total + "" "" + info.getRange());
      log.info(unassigned + "" tablets are unassigned "" + info.getRange());

      if (!tls.walogs.isEmpty() && verify.getMergeInfo().overlaps(tls.extent)) {
","Define a constant instead of duplicating this literal ""Waiting for "" 5 times."
063115e9f44ef48c5eb46b0635397590a94d7b3b,core/src/main/java/org/apache/accumulo/core/security/handler/Authenticator.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.security.handler;

import java.util.Properties;

import org.apache.accumulo.core.client.AccumuloSecurityException;
import org.apache.accumulo.core.security.thrift.tokens.SecurityToken;

public interface Authenticator {
  public SecurityToken login(Properties properties) throws AccumuloSecurityException;
}","Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/trace/SpanTree.java,"  final Map<Long,List<Long>> parentChildren = new HashMap<Long,List<Long>>();
  public final Map<Long,RemoteSpan> nodes = new HashMap<Long,RemoteSpan>();
  
  public SpanTree() {}
  
  public void addNode(RemoteSpan span) {
    nodes.put(span.spanId, span);
    if (parentChildren.get(span.parentId) == null) parentChildren.put(span.parentId, new ArrayList<Long>());
    parentChildren.get(span.parentId).add(span.spanId);
  }
  
  public Set<Long> visit(SpanTreeVisitor visitor) {
    Set<Long> visited = new HashSet<Long>();
    List<Long> root = parentChildren.get(new Long(Span.ROOT_SPAN_ID));
    if (root == null || root.isEmpty()) return visited;
    RemoteSpan rootSpan = nodes.get(root.iterator().next());
    if (rootSpan == null) return visited;
    recurse(0, null, rootSpan, visitor, visited);
    return visited;
  }
  
  private void recurse(int level, RemoteSpan parent, RemoteSpan node, SpanTreeVisitor visitor, Set<Long> visited) {
    // improbable case: duplicate spanId in a trace tree: prevent
    // infinite recursion
    if (visited.contains(node.spanId)) return;
    visited.add(node.spanId);
    List<RemoteSpan> children = new ArrayList<RemoteSpan>();
    List<Long> childrenIds = parentChildren.get(node.spanId);
    if (childrenIds != null) {
      for (Long childId : childrenIds) {
        RemoteSpan child = nodes.get(childId);
        if (child != null) {
          children.add(child);
      }
    }
    children = TraceDump.sortByStart(children);
    visitor.visit(level, parent, node, children);
    for (RemoteSpan child : children) {
      recurse(level + 1, node, child, visitor, visited);
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/bulk/BulkMinusOne.java,"package org.apache.accumulo.test.randomwalk.bulk;
import org.apache.accumulo.test.randomwalk.State;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
81684b769061339a144ad09b8f5a30251d46b8fa,server/src/main/java/org/apache/accumulo/server/ServerOpts.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.server;

import org.apache.accumulo.core.cli.Help;

import com.beust.jcommander.Parameter;

public class ServerOpts extends Help {
  @Parameter(names={""-a"", ""--address""}, description = ""address to bind to"")
  String address = null;
  
  public String getAddress() {
    if (address != null)
      return address;
    return ""0.0.0.0"";
  }
}","Make this IP ""0.0.0.0"" address configurable."
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/simple/src/test/java/org/apache/accumulo/examples/simple/filedata/ChunkCombinerTest.java,"package org.apache.accumulo.examples.simple.filedata;
import org.apache.accumulo.examples.simple.filedata.ChunkCombiner;
import org.apache.accumulo.examples.simple.filedata.FileDataIngest;","Rename ""table"" which hides the field declared at line 107."
e3968883f8c1bf1fdf6d020e9ecfc5a8727f8845,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/bulk/BulkPlusOne.java,"    log.debug(""Finished bulk import, start rows "" + printRows + "" last row "" + String.format(FMT, LOTS - 1) + "" marker "" + markerColumnFamily);",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
02a26268575ac93d74796ec8fd8798f85b92dac1,core/src/main/java/org/apache/accumulo/core/iterators/aggregation/StringMax.java,    return new Value(Long.toString(max).getBytes());,"Remove this unused method parameter ""ex""."
0811c7958ecc1a9a2c8f80702273856f1cd2eab8,src/core/src/main/java/org/apache/accumulo/core/trace/TraceFormatter.java,import org.apache.accumulo.cloudtrace.thrift.RemoteSpan;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
af59f0ad10af71de2f7de9880a1dbe1595956cc5,core/src/main/java/org/apache/accumulo/core/util/shell/commands/UserCommand.java,import org.apache.accumulo.core.security.tokens.PasswordToken;,1 duplicated blocks of code must be removed.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,core/src/main/java/org/apache/accumulo/core/cli/Help.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.cli;

import com.beust.jcommander.JCommander;
import com.beust.jcommander.Parameter;
import com.beust.jcommander.ParameterException;

public class Help {
  @Parameter(names={""-h"", ""-?"", ""--help"", ""-help""}, help=true)
  public boolean help = false;
  public void parseArgs(String programName, String[] args) {
    JCommander commander = new JCommander(this);
    commander.setProgramName(programName);
    try {
      commander.parse(args);
    } catch (ParameterException ex) {
      commander.usage();
      System.err.println(ex.getMessage());
      System.exit(0);
    }
    if (help) {
      commander.usage();
      System.exit(0);
    }
  }
}","Remove this call to ""exit"" or ensure it is really required."
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/iterators/conf/ColumnSet.java,"  private Set<ColFamHashKey> objectsCF;
  private Set<ColHashKey> objectsCol;
  
  private ColHashKey lookupCol = new ColHashKey();
  private ColFamHashKey lookupCF = new ColFamHashKey();
  
  public ColumnSet() {
    objectsCF = new HashSet<ColFamHashKey>();
    objectsCol = new HashSet<ColHashKey>();
  }
  
  public ColumnSet(Collection<String> objectStrings) {
    this();
    for (String column : objectStrings) {
      PerColumnIteratorConfig pcic = PerColumnIteratorConfig.decodeColumns(column, null);
      
      if (pcic.getColumnQualifier() == null) {
        add(pcic.getColumnFamily());
      } else {
        add(pcic.getColumnFamily(), pcic.getColumnQualifier());
      }
  }
  
  protected void add(Text colf) {
    objectsCF.add(new ColFamHashKey(new Text(colf)));
  }
  
  protected void add(Text colf, Text colq) {
    objectsCol.add(new ColHashKey(colf, colq));
  }
  
  public boolean contains(Key key) {
    // lookup column family and column qualifier
    if (objectsCol.size() > 0) {
      lookupCol.set(key);
      if (objectsCol.contains(lookupCol)) return true;
    // lookup just column family
    if (objectsCF.size() > 0) {
      lookupCF.set(key);
      return objectsCF.contains(lookupCF);
    return false;
  }
  
  public boolean isEmpty() {
    return objectsCol.size() == 0 && objectsCF.size() == 0;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/examples/src/main/java/org/apache/accumulo/examples/client/ReadWriteExample.java,"    if (cl.getArgs().length != 0)
      throw new ParseException(""unrecognized options "" + cl.getArgList());
    if (hasOpt(debugOpt))
      Logger.getLogger(Constants.CORE_PACKAGE_NAME).setLevel(Level.TRACE);
    if (hasOpt(createEntriesOpt))
      createEntries(false);
    if (hasOpt(deleteEntriesOpt))
      createEntries(true);
    if (hasOpt(deletetableOpt))
      conn.tableOperations().delete(getOpt(tableNameOpt, DEFAULT_TABLE_NAME));","Remove this call to ""exit"" or ensure it is really required."
50f47f759f1fcda4b68716a07b74baab440c7251,core/src/main/java/org/apache/accumulo/core/cli/ClientOpts.java,"        return getInstance().getAuthenticator().login(principal, props);","Remove this unused method parameter ""principal""."
6ff92b12bc7ad98bd176d7cf72e2417932e6f342,core/src/main/java/org/apache/accumulo/core/client/mock/MockShell.java,"      try {
        while (scanner.hasNextLine() && !hasExited()) {
          execCommand(scanner.nextLine(), true, isVerbose());
        }
      } finally {
        scanner.close();
      }",1 duplicated blocks of code must be removed.
4661491d0b1de8fe4d5ce1d3534de01546bfb3df,test/src/test/java/org/apache/accumulo/test/functional/ChaoticBlancerIT.java,public class ChaoticBlancerIT extends ConfigurableMacIT {,"Use ""Integer.toString"" instead."
6a5500a5b3f34b26386877e332973e7b926aa4ce,core/src/test/java/org/apache/accumulo/core/client/mapred/AccumuloRowInputFormatTest.java,"import java.nio.charset.Charset;
import org.apache.accumulo.core.security.thrift.tokens.PasswordToken;
      AccumuloInputFormat.setConnectorInfo(job, user, new PasswordToken().setPassword(pass.getBytes(Charset.forName(""UTF-8""))));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
fe239249b11bc3de48e423c5e9e50f1f9fe00f5e,core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloMultiTableInputFormat.java,"import static com.google.common.base.Preconditions.checkNotNull;

import java.io.IOException;
import java.util.List;
import java.util.Map;

 * This class allows MapReduce jobs to use multiple Accumulo tables as the source of data. This {@link org.apache.hadoop.mapreduce.InputFormat} provides keys
 * and values of type {@link Key} and {@link Value} to the Map function.
public class AccumuloMultiTableInputFormat extends AbstractInputFormat<Key,Value> {
  public static void setBatchScanConfigs(Job job, Map<String,BatchScanConfig> configs) {

  public RecordReader<Key,Value> createRecordReader(InputSplit inputSplit, TaskAttemptContext context) throws IOException, InterruptedException {
    return new AbstractRecordReader<Key,Value>() {
        for (IteratorSetting setting : iterators) {",Do not forget to remove this deprecated code someday.
7942da1d204d271bff01e9e93208cdd67d0eefa3,test/src/main/java/org/apache/accumulo/test/randomwalk/security/Authenticate.java,"import org.apache.accumulo.core.security.thrift.TCredentials;
  public static void authenticate(TCredentials auth, State state, Properties props) throws Exception {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/test/java/org/apache/accumulo/server/tabletserver/log/MultiReaderTest.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
        if (fs != null) fs.delete(new Path(""manyMaps""), true);
    
        for (int i = 0; i < 1000; i++) {
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d138a73ad757c12b3d30aa1a6029b63cc3eaa66,server/src/main/java/org/apache/accumulo/server/client/HdfsZooInstance.java,"import org.apache.accumulo.core.security.tokens.PasswordToken;
import org.apache.accumulo.core.security.tokens.SecurityToken;",Replace all tab characters in this file by sequences of white-spaces.
057b8d6cb0ccbf472067a755d76eba7ee2e3fd71,test/src/test/java/org/apache/accumulo/test/functional/FateStarvationIT.java,"public class FateStarvationIT extends SimpleMacIT {
    String tableName = makeTableName();
    c.tableOperations().create(tableName);
    c.tableOperations().addSplits(tableName, TestIngest.getSplitPoints(0, 100000, 50));
    opts.tableName = tableName;
    c.tableOperations().flush(tableName, null, null, true);
      c.tableOperations().compact(tableName, splits.get(idx1), splits.get(idx2), false, false);
    c.tableOperations().offline(tableName);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
4325cd202245dc839d860ed6ce5ebc24bb452586,fate/src/main/java/org/apache/accumulo/fate/zookeeper/ZooCache.java,package org.apache.accumulo.fate.zookeeper;,"Remove this call to ""exit"" or ensure it is really required."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/constraints/UnsatisfiableConstraint.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    private List<Short> violations;
    private String vDesc;
    
    public UnsatisfiableConstraint(short vcode, String violationDescription) {
        this.violations = Collections.unmodifiableList(Collections.singletonList(vcode));
        this.vDesc = violationDescription;
    }
    
    public List<Short> check(Environment env, Mutation mutation) {
        return violations;
    }
    
    public String getViolationDescription(short violationCode) {
        return vDesc;
    }
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/util/LoggingRunnable.java,"package org.apache.accumulo.core.util;

import java.util.Date;

import org.apache.log4j.Logger;

public class LoggingRunnable implements Runnable {
    private Runnable runnable;
    private Logger log;

    public LoggingRunnable(Logger log, Runnable r){
        this.runnable = r;
        this.log = log;
    }
    
    public void run() {
        try{
            runnable.run();
        }catch(Throwable t){
            try{
                log.error(""Thread \""""+Thread.currentThread().getName()+""\"" died ""+t.getMessage(), t);
            }catch(Throwable t2){
                //maybe the logging system is screwed up OR there is a bug in the exception, like t.getMessage() throws a NPE
                System.err.println(""ERROR ""+new Date()+"" Failed to log message about thread death ""+t2.getMessage());
                t2.printStackTrace();
                
                //try to print original exception
                System.err.println(""ERROR ""+new Date()+"" Exception that failed to log : ""+t.getMessage());
                t.printStackTrace();
            }
        }
    }
    
    public static void main(String[] args) {
		Runnable r = new Runnable(){
			@Override
			public void run() {
				int x[] = new int[0];
				
				x[0]++;
			}
		};
		
		LoggingRunnable lr = new LoggingRunnable(null, r);
		lr.run();
		
	}
    
}",Return empty string instead.
ff1e582020a1437e9c520ef3a1af99477462d803,core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteCommand.java,"    deleteOptAuths = new Option(""l"", ""visibility-label"", true, ""formatted visibility"");
    timestampOpt = new Option(""t"", ""timestamp"", true, ""timestamp to use for deletion"");",2 duplicated blocks of code must be removed.
35f8e2b1868cea9849efae7fae21e8ac789a0817,server/src/main/java/org/apache/accumulo/server/util/LocalityCheck.java,"import java.nio.charset.Charset;

  private static final Charset utf8 = Charset.forName(""UTF8"");
    Connector connector = instance.getConnector(args[2], args[3].getBytes(utf8));",Move this variable to comply with Java Code Conventions.
35f8e2b1868cea9849efae7fae21e8ac789a0817,core/src/main/java/org/apache/accumulo/core/util/TextUtil.java,"import java.nio.charset.Charset;

  private static final Charset utf8 = Charset.forName(""UTF8"");
  
      newText.append(suffix.getBytes(utf8), 0, suffix.length());",Move this variable to comply with Java Code Conventions.
7812b78e878300e65f38f24fd74c87ce4d18ada7,server/src/main/java/org/apache/accumulo/server/client/BulkImporter.java,"      TabletClientService.Iface client = ThriftUtil.getTServerClient(location, timeInMillis);","Immediately return this expression instead of assigning it to the temporary variable ""client""."
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/master/TServerLockWatcher.java,"import org.apache.accumulo.fate.zookeeper.ZooLock.AsyncLockWatcher;
import org.apache.accumulo.fate.zookeeper.ZooLock.LockLossReason;","Remove this call to ""exit"" or ensure it is really required."
5e14ecff940065c80ed5975124552c9014cc3442,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/shard/Grep.java,import org.apache.accumulo.core.iterators.user.IntersectingIterator;,"Remove this unused private ""match"" method."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/examples/src/main/java/org/apache/accumulo/examples/isolation/InterferenceTest.java,"          if (row == null)
            row = entry.getKey().getRowData();
            if (count != NUM_COLUMNS)
              System.err.println(""ERROR Did not see "" + NUM_COLUMNS + "" columns in row "" + row);
            if (values.size() > 1)
              System.err.println(""ERROR Columns in row "" + row + "" had multiple values "" + values);
        if (count > 0 && count != NUM_COLUMNS)
          System.err.println(""ERROR Did not see "" + NUM_COLUMNS + "" columns in row "" + row);
        if (values.size() > 1)
          System.err.println(""ERROR Columns in row "" + row + "" had multiple values "" + values);
    if (iterations < 1)
      iterations = Long.MAX_VALUE;
    if (!conn.tableOperations().exists(table))
      conn.tableOperations().create(table);
    if (Boolean.parseBoolean(args[6]))
      r = new Reader(new IsolatedScanner(conn.createScanner(table, Constants.NO_AUTHS)));
    else
      r = new Reader(conn.createScanner(table, Constants.NO_AUTHS));","Remove this call to ""exit"" or ensure it is really required."
190fc92eab965a787f19797fda3754bece6a1ae2,core/src/main/java/org/apache/accumulo/core/master/thrift/MasterMonitorInfo.java,"                  TableInfo _val21; // required
                  byte _val28; // required
            TableInfo _val48; // required
            byte _val55; // required",Rename this package name to match the regular expression '^[a-z]+(\.[a-z][a-z0-9]*)*$'.
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/helloworld/InsertWithBatchWriter.java,package org.apache.accumulo.examples.simple.helloworld;,2 duplicated blocks of code must be removed.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/tabletserver/TLevel.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/monitor/util/celltypes/TableStateType.java,      case OFFLINE:,"Remove this unused private ""appendProp"" method."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/client/mock/IteratorAdapter.java,"package org.apache.accumulo.core.client.mock;

import java.io.IOException;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.NoSuchElementException;

import org.apache.accumulo.core.data.Key;
import org.apache.accumulo.core.data.Value;
import org.apache.accumulo.core.iterators.SortedKeyValueIterator;


public class IteratorAdapter implements Iterator<Entry<Key, Value>> {
    
    SortedKeyValueIterator<Key, Value> inner;
    
    public IteratorAdapter(SortedKeyValueIterator<Key, Value> inner) {
        this.inner = inner;
    }
    
    @Override
    public boolean hasNext() {
        return inner.hasTop();
    }

    @Override
    public Entry<Key, Value> next() {
        try {
            Entry<Key, Value> result = new MockEntry(new Key(inner.getTopKey()), new Value(inner.getTopValue()));
            inner.next();
            return result;
        } catch (IOException ex) {
            throw new NoSuchElementException();
        }
    }

    @Override
    public void remove() {
        throw new UnsupportedOperationException();
    }
}",Return empty string instead.
ccaad172643805d56f5dd46cbbc7dcd1a5519cbf,src/server/src/main/java/org/apache/accumulo/server/tabletserver/Compactor.java,"import org.apache.accumulo.cloudtrace.instrument.Span;
import org.apache.accumulo.cloudtrace.instrument.Trace;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/Compact.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    @Override
    public void visit(State state, Properties props) throws Exception {
        Connector conn = state.getConnector();
        
        Random rand = (Random) state.get(""rand"");
        
        @SuppressWarnings(""unchecked"")
        List<String> tableNames = (List<String>) state.get(""tables"");
        
        String tableName = tableNames.get(rand.nextInt(tableNames.size()));
        
        // TODO need to sometimes do null start and end ranges
        
        TreeSet<Text> range = new TreeSet<Text>();
        range.add(new Text(String.format(""%016x"", Math.abs(rand.nextLong()))));
        range.add(new Text(String.format(""%016x"", Math.abs(rand.nextLong()))));
        
        try {
            boolean wait = rand.nextBoolean();
            conn.tableOperations().compact(tableName, range.first(), range.last(), false, wait);
            log.debug((wait ? ""compacted "" : ""initiated compaction "") + tableName);
        } catch (TableNotFoundException tne) {
            log.debug(""compact "" + tableName + "" failed, doesnt exist"");
        } catch (TableOfflineException toe) {
            log.debug(""compact "" + tableName + "" failed, offline"");
        }
        
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/util/ListInstances.java,"import org.apache.accumulo.core.cli.Help;
import com.beust.jcommander.Parameter;

  
  static class Opts extends Help {
    @Parameter(names=""--print-errors"", description=""display errors while listing instances"")
    boolean printErrors = false;
    @Parameter(names=""--print-all"", description=""print information for all instances, not just those with names"")
    boolean printAll = false;
    @Parameter(names={""-z"", ""--zookeepers""}, description=""the zookeepers to contact"")
    String keepers = null;
  }
  static Opts opts = new Opts();
  static int errors = 0;
    opts.parseArgs(ListInstances.class.getName(), args);
    if (opts.keepers == null) {
      opts.keepers = ServerConfiguration.getSiteConfiguration().get(Property.INSTANCE_ZK_HOST);
    System.out.println(""INFO : Using ZooKeepers "" + opts.keepers);
    if (opts.printAll) {
    if (!opts.printErrors && errors > 0) {
    if (opts.printErrors) {","Remove this unused private ""appendProp"" method."
4325cd202245dc839d860ed6ce5ebc24bb452586,core/src/main/java/org/apache/accumulo/core/client/admin/InstanceOperationsImpl.java,import org.apache.accumulo.fate.zookeeper.ZooCache;,"Remove this call to ""exit"" or ensure it is really required."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/test/java/org/apache/accumulo/server/master/balancer/TableLoadBalancerTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ef0f6ddcd9b722a57ec6f0299ba883ce4747b6a3,core/src/test/java/org/apache/accumulo/core/util/shell/ShellTest.java,"    // exec(""createuser root"", false, ""user exists"");
  
  @Test
  public void execFileTest() throws IOException {
    Shell.log.debug(""Starting exec file test --------------------------"");
    shell.config(""--fake"", ""-u"", ""test"", ""-p"", ""secret"", ""-f"", ""src/test/resources/shelltest.txt"");
    assertEquals(0, shell.start());
    assertGoodExit(""Unknown command"", false);
  }",1 duplicated blocks of code must be removed.
5597259bbfa3da9833cf047b480efbba6f46ed02,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/NumSummation.java,"/**
 * @deprecated since 1.4
 * @use org.apache.accumulo.core.iterators.user.SummingCombiner with SummingCombiner.Type.VARNUM
 */",1 duplicated blocks of code must be removed.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActionStats.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */","Remove this unused private ""appendProp"" method."
a943f323b6ef9a614edee55c075eb63567b5c80a,server/src/main/java/org/apache/accumulo/server/master/tableOps/ImportTable.java,"import org.apache.accumulo.server.security.SystemCredentials;
    MetadataTableUtil.deleteTable(tableInfo.tableId, false, SystemCredentials.get().getAsThrift(), environment.getMasterLock());
        security.grantTablePermission(SystemCredentials.get().getAsThrift(), tableInfo.user, tableInfo.tableId, permission);
    AuditedSecurityOperation.getInstance().deleteTable(SystemCredentials.get().getAsThrift(), tableInfo.tableId);",Move this constructor to comply with Java Code Conventions.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/DeleteTable.java,"package org.apache.accumulo.server.test.randomwalk.concurrent;

import java.util.List;
import java.util.Properties;
import java.util.Random;

import org.apache.accumulo.core.client.Connector;
import org.apache.accumulo.core.client.TableNotFoundException;
import org.apache.accumulo.server.test.randomwalk.State;
import org.apache.accumulo.server.test.randomwalk.Test;


public class DeleteTable extends Test {

	@Override
	public void visit(State state, Properties props) throws Exception {
		Connector conn = state.getConnector();
		
		Random rand = (Random) state.get(""rand"");
		
		@SuppressWarnings(""unchecked"")
		List<String> tableNames = (List<String>) state.get(""tables"");
		
		String tableName = tableNames.get(rand.nextInt(tableNames.size()));
		
		try {
			conn.tableOperations().delete(tableName);
			log.debug(""Deleted table ""+tableName);
		} catch (TableNotFoundException e) {
			log.debug(""Delete ""+tableName+"" failed, doesnt exist"");
		}
	}
}",Return empty string instead.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/zookeeper/ZooCache.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/tabletserver/mastermessage/SplitReportMessage.java,"  Map<KeyExtent,Text> extents;
  KeyExtent old_extent;
  
  public SplitReportMessage(KeyExtent old_extent, Map<KeyExtent,Text> newExtents) {
    this.old_extent = old_extent;
    extents = new TreeMap<KeyExtent,Text>(newExtents);
  }
  
  public SplitReportMessage(KeyExtent old_extent, KeyExtent ne1, Text np1, KeyExtent ne2, Text np2) {
    this.old_extent = old_extent;
    extents = new TreeMap<KeyExtent,Text>();
    extents.put(ne1, np1);
    extents.put(ne2, np2);
  }
  
  public void send(AuthInfo credentials, String serverName, MasterClientService.Iface client) throws TException, ThriftSecurityException {
    TabletSplit split = new TabletSplit();
    split.oldTablet = old_extent.toThrift();
    split.newTablets = Translator.translate(extents.keySet(), Translator.KET);
    client.reportSplitExtent(null, credentials, serverName, split);
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/WordCount.java,package org.apache.accumulo.examples.simple.mapreduce;,"Rename ""table"" which hides the field declared at line 107."
bcb8f36140f781e4d6a932827f3b04982eb19400,core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,"      updateUser(credentials);
    if (!connector.securityOperations().authenticateUser(authInfo.user, authInfo.getPassword()))
      throw new RuntimeException(""Unable to authenticate user "" + authInfo.user);",Define and throw a dedicated exception instead of using a generic one.
951ee9fea7f4530e159c416f1e22255864f7854c,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReader.java,"import org.apache.log4j.Logger;
  public static final Logger log = Logger.getLogger(TabletServerBatchReader.class);
  private final int batchReaderInstance = getNextBatchReaderInstance();
  private static class BatchReaderThreadFactory implements ThreadFactory {
    private final int batchReaderInstance;
    
    BatchReaderThreadFactory(int batchReaderInstance) {
      this.batchReaderInstance = batchReaderInstance;
    }
        new BatchReaderThreadFactory(batchReaderInstance));
  /**
   * Warning: do not rely upon finalize to close this class. Finalize is not guaranteed to be called.
   */
  @Override
  protected void finalize() {
    if (!queryThreadPool.isShutdown()) {
      log.warn(TabletServerBatchReader.class.getSimpleName() + "" not shutdown; did you forget to call close()?"");
      close();
    }
  }
  ",Move this variable to comply with Java Code Conventions.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/util/TabletOperations.java,"  
  private static final Logger log = Logger.getLogger(TabletOperations.class);
  
  public static String createTabletDirectory(FileSystem fs, String tableDir, Text endRow) {
    String lowDirectory;
    UniqueNameAllocator namer = UniqueNameAllocator.getInstance();
    while (true) {
      try {
        if (endRow == null) {
          lowDirectory = Constants.DEFAULT_TABLET_LOCATION;
          Path lowDirectoryPath = new Path(tableDir + lowDirectory);
          if (fs.exists(lowDirectoryPath) || fs.mkdirs(lowDirectoryPath)) return lowDirectory;
          log.warn(""Failed to create "" + lowDirectoryPath + "" for unknown reason"");
        } else {
          lowDirectory = ""/t-"" + namer.getNextName();
          Path lowDirectoryPath = new Path(tableDir + lowDirectory);
          if (fs.exists(lowDirectoryPath)) throw new IllegalStateException(""Dir exist when it should not "" + lowDirectoryPath);
          if (fs.mkdirs(lowDirectoryPath)) return lowDirectory;
      } catch (IOException e) {
        log.warn(e);
      }
      
      log.warn(""Failed to create dir for tablet in table "" + tableDir + "" will retry ..."");
      UtilWaitThread.sleep(3000);
      
  }
  
  public static String createTabletDirectory(String tableDir, Text endRow) {
    while (true) {
      try {
        FileSystem fs = FileSystem.get(CachedConfiguration.getInstance());
        return createTabletDirectory(fs, tableDir, endRow);
      } catch (IOException e) {
        log.warn(e);
      }
      UtilWaitThread.sleep(3000);
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,server/src/test/java/org/apache/accumulo/server/master/balancer/TableLoadBalancerTest.java,"        return instance.getConnector(""user"", ""pass"").tableOperations();
    Connector c = instance.getConnector(""user"", ""pass"".getBytes());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/functional/FateStarvationTest.java,"package org.apache.accumulo.test.functional;
import org.apache.accumulo.test.TestIngest;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
4dd9f798694a3f2bc22d69d518f6f06bec58adeb,core/src/main/java/org/apache/accumulo/core/conf/Property.java,"      Property.TSERV_SCAN_MAX_OPENFILES, Property.TSERV_LOGGER_COUNT,",Catch Exception instead of Throwable.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/client/impl/ClientExecReturn.java,"package org.apache.accumulo.core.client.impl;

public interface ClientExecReturn<T, C> {
    T execute(C client) throws Exception;
}",Return empty string instead.
a0524e8ab79fd4302d233cffae508630f6a8874e,server/src/main/java/org/apache/accumulo/server/monitor/servlets/DefaultServlet.java,"import java.util.ArrayList;
import java.util.Arrays;
    plotData(sb, title, points, new ArrayList<String>(), data);
  }
  
  private static void plotData(StringBuilder sb, String title, boolean points, List<String> labels, @SuppressWarnings(""rawtypes"") List... series) {
    for (int i = 0; i < series.length; i++) {
      List<Pair<Long,? extends Number>> data = series[i];
      sb.append(""    var d"" + i + "" = ["");
      String sep = """";
      for (Pair<Long,? extends Number> point : data) {
        if (point.getSecond() == null)
          continue;
        
        String y;
        if (point.getSecond() instanceof Double)
          y = String.format(""%1.2f"", point.getSecond());
        else
          y = point.getSecond().toString();
        
        sb.append(sep);
        sep = "","";
        sb.append(""["" + point.getFirst() + "","" + y + ""]"");
      }
      sb.append(""    ];\n"");

    sb.append(""    $.plot($(\""#"" + id + ""\""),"");
    String sep = """";
    
    String colors[] = new String[] {""red"", ""blue"", ""green"", ""black""};

    sb.append(""["");
    for (int i = 0; i < series.length; i++) {
      sb.append(sep);
      sep = "","";
      sb.append(""{ "");
      if (labels.size() > 0) {
        sb.append(""label: \"""" + labels.get(i) + ""\"", "");
      }
      sb.append(""data: d"" + i + "", "" + opts + "", color:\"""" + colors[i] + ""\"" }"");
    }
    sb.append(""], "");
    sb.append(""{yaxis:{}, xaxis:{mode:\""time\"",minTickSize: [1, \""minute\""],timeformat: \""%H:%M\"", ticks:3}});"");
    plotData(sb, ""Scan (Entries/s)"", false, Arrays.asList(""Read"", ""Returned""), Monitor.getScanRateOverTime(), Monitor.getQueryRateOverTime());
    plotData(sb, ""Seeks"", Monitor.getLookupsOverTime(), false);",Use isEmpty() to check whether the collection is empty or not.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/master/state/MetaDataTableScanner.java,"    if (!result)
      mdScanner.close();","Remove this call to ""exit"" or ensure it is really required."
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,"import org.apache.accumulo.core.security.tokens.SecurityToken;
  private SecurityToken credentials;
  public SecurityToken updateUser(String user, byte[] pass) throws AccumuloException, AccumuloSecurityException {
    SecurityToken token;
  public SecurityToken getCredentials() {",Either log or rethrow this exception.
c815e4cc135d93b730eba779ca2ee2cca8c2e1be,src/core/src/main/java/org/apache/accumulo/core/iterators/user/TimestampFilter.java,"import java.text.ParseException;
  private static final String LONG_PREFIX = ""LONG"";
      if (hasStart) {
        String s = options.get(START);
        if (s.startsWith(LONG_PREFIX))
          start = Long.valueOf(s.substring(LONG_PREFIX.length()));
        else
          start = dateParser.parse(s).getTime();
      }
      if (hasEnd) {
        String s = options.get(END);
        if (s.startsWith(LONG_PREFIX))
          end = Long.valueOf(s.substring(LONG_PREFIX.length()));
        else
          end = dateParser.parse(s).getTime();
      }
    io.addNamedOption(""start"", ""start timestamp (yyyyMMddHHmmssz or LONG<longstring>)"");
    io.addNamedOption(""end"", ""end timestamp (yyyyMMddHHmmssz or LONG<longstring>)"");
    boolean hasStart = false;
    boolean hasEnd = false;
      if (options.containsKey(START)) {
        hasStart = true;
        String s = options.get(START);
        if (s.startsWith(LONG_PREFIX))
          Long.valueOf(s.substring(LONG_PREFIX.length()));
        else
          dateParser.parse(s);
      }
      if (options.containsKey(END)) {
        hasEnd = true;
        String s = options.get(END);
        if (s.startsWith(LONG_PREFIX))
          Long.valueOf(s.substring(LONG_PREFIX.length()));
        else
          dateParser.parse(s);
      }
      if (!hasStart && !hasEnd)
        return false;
    SimpleDateFormat dateParser = initDateParser();
    try {
      long startTS = dateParser.parse(start).getTime();
      setStart(is, startTS, startInclusive);
    } catch (ParseException e) {
      throw new IllegalArgumentException(""couldn't parse "" + start);
    }
    SimpleDateFormat dateParser = initDateParser();
    try {
      long endTS = dateParser.parse(end).getTime();
      setEnd(is, endTS, endInclusive);
    } catch (ParseException e) {
      throw new IllegalArgumentException(""couldn't parse "" + end);
    }
    is.addOption(START, LONG_PREFIX + Long.toString(start));
    is.addOption(END, LONG_PREFIX + Long.toString(end));","Rename ""hasStart"" which hides the field declared at line 53."
2960a2b36fb746463c00f461ba068fcb2e7f1671,src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingArrayCombiner.java,"    VARLEN, FIXEDLEN, STRING
        case VARLEN:
        case FIXEDLEN:
    io.setName(""summingarraycombiner"");
    io.setDescription(""SummingArrayCombiner can interpret Values as arrays of Longs using a variety of encodings (arrays of variable length longs or fixed length longs, or comma-separated strings) before combining"");
    io.addNamedOption(TYPE, ""<VARLEN|FIXEDLEN|STRING|fullClassName>"");","Refactor this method to throw at most one checked exception instead of: java.io.IOException, java.lang.InstantiationException, java.lang.IllegalAccessException"
56cd6b7861a0dbfc21fa08f44d11210b45f0fd96,start/src/main/java/org/apache/accumulo/start/classloader/vfs/AccumuloVFSClassLoader.java,"  public interface Printer {
    void print(String s);
  }
    printClassPath(new Printer() {
      @Override
      public void print(String s) { 
        System.out.println(s);
      }
    });
  }
  public static void printClassPath(Printer out) {
          out.print("""");
          out.print(""Level "" + level + "" URL classpath items are:"");
              out.print(""\t"" + u.toExternalForm());
          out.print(""Level "" + level + "" VFS classpaths items are:"");
            out.print(""\t"" + f.getURL().toExternalForm());
          out.print(""Unknown classloader configuration "" + classLoader.getClass());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/test/java/org/apache/accumulo/core/data/RangeTest.java,"    if (k1 != null)
      ik1 = new Key(new Text(k1), 0l);
    if (k2 != null)
      ik2 = new Key(new Text(k2), 0l);
    if (r1 != null)
      tr1 = new Text(r1);
    if (r2 != null)
      tr2 = new Text(r2);","Remove this call to ""exit"" or ensure it is really required."
057b8d6cb0ccbf472067a755d76eba7ee2e3fd71,test/src/test/java/org/apache/accumulo/test/functional/CombinerIT.java,"public class CombinerIT extends SimpleMacIT {
  private void checkSum(String tableName, Connector c) throws Exception {
    Scanner s = c.createScanner(tableName, Authorizations.EMPTY);
    String tableName = makeTableName();
    c.tableOperations().create(tableName);
    c.tableOperations().attachIterator(tableName, setting);
    BatchWriter bw = c.createBatchWriter(tableName, new BatchWriterConfig());
    checkSum(tableName, c);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d138a73ad757c12b3d30aa1a6029b63cc3eaa66,core/src/test/java/org/apache/accumulo/core/client/mock/MockTableOperationsTest.java,import org.apache.accumulo.core.security.tokens.PasswordToken;,Replace all tab characters in this file by sequences of white-spaces.
9cc068dd87d479bbc6f1445e9003b02682144751,core/src/main/java/org/apache/accumulo/core/client/lexicoder/DoubleLexicoder.java,"/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.client.lexicoder;

/**
 * 
 */
public class DoubleLexicoder implements Lexicoder<Double> {
  
  private ULongLexicoder longEncoder = new ULongLexicoder();
  
  @Override
  public byte[] encode(Double d) {
    long l = Double.doubleToRawLongBits(d);
    if (l < 0)
      l = ~l;
    else
      l = l ^ 0x8000000000000000l;
    
    return longEncoder.encode(l);
  }
  
  @Override
  public Double decode(byte[] data) {
    long l = longEncoder.decode(data);
    if (l < 0)
      l = l ^ 0x8000000000000000l;
    else
      l = ~l;
    return Double.longBitsToDouble(l);
  }
  
}",Rename this generic name to match the regular expression '^[A-Z]$'.
b1945d4dd4a2327314b35de5442a3028c7d557aa,src/core/src/test/java/org/apache/accumulo/core/iterators/user/VersioningIteratorTest.java,  private static final Encoder<Long> encoder = LongCombiner.FIXED_LEN_ENCODER;,Either log or rethrow this exception.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,examples/simple/src/main/java/org/apache/accumulo/examples/simple/filedata/FileDataQuery.java,"  public FileDataQuery(String instanceName, String zooKeepers, String user, byte[] password, String tableName, Authorizations auths) throws AccumuloException,
    conn = instance.getConnector(user, password);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
0c234533331e2e8232ded52e9ecc053505f1ec9c,test/src/main/java/org/apache/accumulo/test/MiniAccumuloCluster.java,"import org.apache.accumulo.server.util.PortUtils;
    zooKeeperPort = PortUtils.getRandomFreePort();
    appendProp(fileWriter, Property.MASTER_CLIENTPORT, """" + PortUtils.getRandomFreePort(), siteConfig);
    appendProp(fileWriter, Property.TSERV_CLIENTPORT, """" + PortUtils.getRandomFreePort(), siteConfig);
    appendProp(fileWriter, Property.TRACE_PORT, """" + PortUtils.getRandomFreePort(), siteConfig);",Either log or rethrow this exception.
3de0c1ec44d476fe1465eb05d33c32de3ccf1068,core/src/main/java/org/apache/accumulo/core/util/ServerServices.java,"import com.google.common.net.HostAndPort;

  public HostAndPort getAddress(Service service) {
    return AddressUtil.parseAddress(getAddressString(service));","Remove this unused method parameter ""threadName""."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/MetaBlockDoesNotExist.java,"    /**
     * Constructor
     * 
     * @param s
     *            message.
     */
    MetaBlockDoesNotExist(String s) {
        super(s);
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
446a37a9795f2df7adc841154ca05add79cf286e,core/src/main/java/org/apache/accumulo/core/client/mapred/InputFormatBase.java,"import org.apache.accumulo.core.metadata.MetadataTable;
import org.apache.accumulo.core.metadata.schema.MetadataSchema.TabletsSection;
      TabletsSection.TabletColumnFamily.PREV_ROW_COLUMN.fetch(scanner);
      scanner.fetchColumnFamily(TabletsSection.LastLocationColumnFamily.NAME);
      scanner.fetchColumnFamily(TabletsSection.CurrentLocationColumnFamily.NAME);
      scanner.fetchColumnFamily(TabletsSection.FutureLocationColumnFamily.NAME);
          if (key.getColumnFamily().equals(TabletsSection.LastLocationColumnFamily.NAME)) {
          if (key.getColumnFamily().equals(TabletsSection.CurrentLocationColumnFamily.NAME)
              || key.getColumnFamily().equals(TabletsSection.FutureLocationColumnFamily.NAME)) {
          if (TabletsSection.TabletColumnFamily.PREV_ROW_COLUMN.hasColumns(key)) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e511baa049c58509539ab7eb793c0da97c9d3ef6,core/src/main/java/org/apache/accumulo/core/client/ZooKeeperInstance.java,  @Deprecated,Return empty string instead.
a650bc93ce99a5f771fb10615334c5fbea8b40a4,core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ClientService.java,"                    String _elem10; // optional
              String _elem15; // optional
                    String _elem18; // optional
              String _elem23; // optional
                    String _elem26; // optional
              String _elem31; // optional
                    TDiskUsage _elem34; // optional
              TDiskUsage _elem39; // optional
                    String _elem42; // optional
              String _elem47; // optional
                    ByteBuffer _elem50; // optional
              ByteBuffer _elem55; // optional
                    ByteBuffer _elem58; // optional
              ByteBuffer _elem63; // optional",277 duplicated blocks of code must be removed.
9b71198338e75be5a7ed58a3f39c3e2a8d2cb1dc,core/src/main/java/org/apache/accumulo/core/util/shell/commands/FormatterCommand.java,"import org.apache.accumulo.core.client.AccumuloSecurityException;
public class FormatterCommand extends ShellPluginConfigurationCommand {
  private Option interpeterOption;

  public FormatterCommand() {
    super(""formatter"", Property.TABLE_FORMATTER_CLASS, ""f"");
  }


    return ShellPluginConfigurationCommand.getPluginClass(tableName, shellState, Formatter.class, Property.TABLE_FORMATTER_CLASS);
    Options options = super.getOptions();
    interpeterOption = new Option(""i"", ""interpeter"", false, ""configure class as interpreter also"");
    options.addOption(interpeterOption);
    return options;
  protected void setPlugin(CommandLine cl, Shell shellState, String tableName, String className) throws AccumuloException, AccumuloSecurityException {
    super.setPlugin(cl, shellState, tableName, className);
    if (cl.hasOption(interpeterOption.getOpt()))
      shellState.getConnector().tableOperations().setProperty(tableName, Property.TABLE_INTERPRETER_CLASS.toString(), className);
  protected void removePlugin(CommandLine cl, Shell shellState, String tableName) throws AccumuloException, AccumuloSecurityException {
    super.removePlugin(cl, shellState, tableName);
    if (cl.hasOption(interpeterOption.getOpt()))
      shellState.getConnector().tableOperations().removeProperty(tableName, Property.TABLE_INTERPRETER_CLASS.toString());
  }",Return empty string instead.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/client/impl/ScannerImpl.java,"    if (size > 0)
      this.size = size;
    else
      throw new IllegalArgumentException(""size must be greater than zero"");","Remove this call to ""exit"" or ensure it is really required."
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,core/src/main/java/org/apache/accumulo/core/cli/ClientOpts.java,import org.apache.accumulo.trace.instrument.Trace;,Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
d7ba6ca6f26c5ffc280a8b18d60e0c264910540d,server/src/main/java/org/apache/accumulo/server/Accumulo.java,"  
    // So this: if (!dfs.setSafeMode(SafeModeAction.SAFEMODE_GET))
      return (Boolean) setSafeMode.invoke(dfs, get);",2 duplicated blocks of code must be removed.
83ec5ed392729a90ab458173dc14f98140654da5,src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java,"        throw new ValueFormatException(e);
        throw new ValueFormatException(""trying to convert to long, but byte array isn't long enough, wanted "" + (offset + 8) + "" found "" + b.length);
      try {
        return Long.parseLong(new String(b));
      } catch (NumberFormatException nfe) {
        throw new ValueFormatException(nfe);
      }",Move this variable to comply with Java Code Conventions.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/trace/src/main/java/cloudtrace/instrument/TraceProxy.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    // private static final Logger log = Logger.getLogger(TraceProxy.class);
    
    static final Sampler ALWAYS = new Sampler() {
        @Override
        public boolean next() {
            return true;
        }
    };
    
    public static <T> T trace(T instance) {
    
    @SuppressWarnings(""unchecked"")
    public static <T> T trace(final T instance, final Sampler sampler) {
        InvocationHandler handler = new InvocationHandler() {
            @Override
            public Object invoke(Object obj, Method method, Object[] args) throws Throwable {
                if (!sampler.next()) {
                    return method.invoke(instance, args);
                }
                Span span = Trace.on(method.getName());
                try {
                    return method.invoke(instance, args);
                } catch (Throwable ex) {
                    ex.printStackTrace();
                    throw ex;
                } finally {
                    span.stop();
                }
            }
        };
        return (T) Proxy.newProxyInstance(instance.getClass().getClassLoader(), instance.getClass().getInterfaces(), handler);
    }
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/iterators/FilteringIterator.java,"      if (goodKey == true)
        return;
      if ((index = name.indexOf(""."")) < 0)
        namesToClasses.put(name, e.getValue());
        if (!namesToOptions.containsKey(subName))
          namesToOptions.put(subName, new HashMap<String,String>());","Remove this call to ""exit"" or ensure it is really required."
48e331cc2d55a37421b5dd7bbb45e91657ea811f,test/src/main/java/org/apache/accumulo/test/randomwalk/shard/BulkInsert.java,"    Collection<Text> splits = conn.tableOperations().listSplits(tableName, maxSplits);",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/GetGroupsCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/multitable/CreateTable.java,"package org.apache.accumulo.test.randomwalk.multitable;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/impl/ClientExecReturn.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/test/VerifyIngest.java,"import com.beust.jcommander.Parameter;

  public static class Opts extends TestIngest.Opts {
    @Parameter(names=""-useGet"", description=""fetches values one at a time, instead of scanning"")
    boolean useGet = false;
  }
  
    Opts opts = new Opts();
    opts.parseArgs(VerifyIngest.class.getName(), args);
    Instance instance = opts.getInstance();
      if (opts.trace) {
          connector = opts.getConnector();
      byte[][] bytevals = TestIngest.generateValues(opts);
      int expectedRow = opts.startRow;
      byte randomValue[] = new byte[opts.dataSize];
      Key endKey = new Key(new Text(""row_"" + String.format(""%010d"", opts.rows + opts.startRow)));
      while (expectedRow < (opts.rows + opts.startRow)) {
        if (opts.useGet) {
          Text rowKey = new Text(""row_"" + String.format(""%010d"", expectedRow + opts.startRow));
          Text colf = new Text(opts.columnFamily);
          if (opts.random != null) {
            ev = TestIngest.genRandomValue(random, randomValue, opts.random.intValue(), expectedRow, expectedCol);
          if (expectedCol >= opts.cols) {
          scanner.setBatchSize(opts.scanBatchSize);
          for (int j = 0; j < opts.cols; j++) {
            scanner.fetchColumn(new Text(opts.columnFamily), new Text(""col_"" + String.format(""%05d"", j)));
            if (expectedRow >= (opts.rows + opts.startRow)) {
              log.error(""expectedRow ("" + expectedRow + "") >= (ingestArgs.rows + ingestArgs.startRow)  ("" + (opts.rows + opts.startRow)
            if (opts.random != null) {
              value = TestIngest.genRandomValue(random, randomValue, opts.random.intValue(), expectedRow, colNum);
            if (opts.timestamp >= 0 && entry.getKey().getTimestamp() != opts.timestamp) {
            if (expectedCol >= opts.cols) {
      if (expectedRow != (opts.rows + opts.startRow)) {
        log.error(""Did not read expected number of rows. Saw "" + (expectedRow - opts.startRow) + "" expected "" + opts.rows);","Remove this call to ""exit"" or ensure it is really required."
3d7a6e71abea53485ef37b9e6e27134a722c6088,maven-plugin/src/main/java/org/apache/accumulo/maven/plugin/AbstractAccumuloMojo.java,"import org.apache.maven.plugins.annotations.Component;
import org.apache.maven.project.MavenProject;
  @Component
  private MavenProject project;
  void configureMiniClasspath(String miniClasspath) throws MalformedURLException {
    StringBuilder sb = new StringBuilder();
    if (miniClasspath == null && project != null) {
      sb.append(project.getBuild().getOutputDirectory());
      String sep = File.pathSeparator;
      sb.append(sep).append(project.getBuild().getTestOutputDirectory());
      for (Artifact artifact : project.getArtifacts()) {
        addArtifact(sb, sep, artifact);
      classpath = sb.toString();
  
  private void addArtifact(StringBuilder classpath, String separator, Artifact artifact) throws MalformedURLException {
    classpath.append(separator).append(artifact.getFile().toURI().toURL());
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f343540ca4b9e4359c43d6f990e486de960b637c,core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java,"    if (!exists(tableName))
      throw new TableNotFoundException(tableName, tableName, """");
    acu.addSplits(tableName, partitionKeys);
    return acu.getSplits(tableName);",Either log or rethrow this exception.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/util/Stat.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    long max = Long.MIN_VALUE;
    long min = Long.MAX_VALUE;
    long sum = 0;
    int count = 0;
    double partialStdDev = 0;
    
    public void addStat(long stat) {
        if (stat > max) max = stat;
        if (stat < min) min = stat;
        
        sum += stat;
        
        partialStdDev += stat * stat;
        
        count++;
    }
    
    public long getMin() {
        return min;
    }
    
    public long getMax() {
        return max;
    }
    
    public double getAverage() {
        return ((double) sum) / count;
    }
    
    public double getStdDev() {
        return Math.sqrt(partialStdDev / count - getAverage() * getAverage());
    }
    
    public String toString() {
        return String.format(""%,d %,d %,.2f %,d"", getMin(), getMax(), getAverage(), count);
    }
    
    public void clear() {
        sum = 0;
        count = 0;
        partialStdDev = 0;
    }
    
    public long getSum() {
        return sum;
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
527a100ef5de9c51fb17b0b340f036ee4cd98590,src/core/src/main/java/org/apache/accumulo/core/data/thrift/TMutation.java,"@SuppressWarnings(""all"") public class TMutation implements org.apache.thrift.TBase<TMutation, TMutation._Fields>, java.io.Serializable, Cloneable {",13 duplicated blocks of code must be removed.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/GrepCommand.java,"      if (!shellState.getConnector().tableOperations().exists(tableName))
        throw new TableNotFoundException(null, tableName, null);
    if (cl.getArgList().isEmpty())
      throw new MissingArgumentException(""No terms specified"");
    if (prio < 0)
      throw new IllegalArgumentException(""Priority < 0 "" + prio);","Remove this call to ""exit"" or ensure it is really required."
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/simple/src/test/java/org/apache/accumulo/examples/simple/dirlist/CountTest.java,"package org.apache.accumulo.examples.simple.dirlist;
import org.apache.accumulo.examples.simple.dirlist.FileCount;
import org.apache.accumulo.examples.simple.dirlist.Ingest;
import org.apache.accumulo.examples.simple.dirlist.QueryUtil;",2 duplicated blocks of code must be removed.
e33d01549f612ac35ca5ab83d1b6f127681558bb,core/src/main/java/org/apache/accumulo/core/client/admin/InstanceOperationsImpl.java,"   *          the Credential, containing principal and Authentication Token",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,test/src/main/java/org/apache/accumulo/test/randomwalk/security/ChangePass.java,"      conn.securityOperations().changeUserPassword(new UserPassToken(target, newPass));",Either log or rethrow this exception.
99da5641c28784c7b717cce6749673863c2ec8cf,server/src/main/java/org/apache/accumulo/server/security/AuditedSecurityOperation.java,"import org.apache.accumulo.core.security.Credentials;
  public void changePassword(TCredentials credentials, Credentials newInfo) throws ThriftSecurityException {
  public void createUser(TCredentials credentials, Credentials newUser, Authorizations authorizations) throws ThriftSecurityException {","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/tabletserver/metrics/TabletServerScanMetricsMBean.java,"package org.apache.accumulo.server.tabletserver.metrics;

public interface TabletServerScanMetricsMBean {
	
	public static final String scan = ""scan"";
	public static final String resultSize = ""result"";
	
	public long getScanCount();
	public long getScanAvgTime();
	public long getScanMinTime();
	public long getScanMaxTime();
	public long getResultCount();
	public long getResultAvgSize();
	public long getResultMinSize();
	public long getResultMaxSize();
	public void reset();

}",Return empty string instead.
937e6b8543b2595bcd5b086a80ed776380251d9b,core/src/main/java/org/apache/accumulo/core/iterators/user/LargeRowFilter.java,"      throw new IllegalArgumentException(""Bad # of options, must supply: "" + MAX_COLUMNS + "" as value"");
    if (!options.containsKey(MAX_COLUMNS))
      throw new IllegalArgumentException(""Bad # of options, must supply: "" + MAX_COLUMNS + "" as value"");
    try {
      maxColumns = Integer.parseInt(options.get(MAX_COLUMNS));
    } catch (Exception e) {
      throw new IllegalArgumentException(""bad integer "" + MAX_COLUMNS + "":"" + options.get(MAX_COLUMNS));","Remove the literal ""false"" boolean value."
ecb758fdf4900793f1b82ed067c541d8642afd1d,core/src/test/java/org/apache/accumulo/core/data/MutationTest.java,"    m2.putDelete(""cf3"", ""cq3"");
    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    DataOutputStream dos = new DataOutputStream(bos);
    assertEquals(3, m2.getUpdates().size());
    assertEquals(3, m2.size());
    assertEquals(m2.getUpdates().get(2), ""cf3"", ""cq3"", """", 0l, false, true, """");
    Mutation m1 = convert(m2);
    assertEquals(3, m1.getUpdates().size());
    assertEquals(3, m1.size());
    assertEquals(m2.getUpdates().get(2), ""cf3"", ""cq3"", """", 0l, false, true, """");","Remove this unused method parameter ""timestamp""."
6f18b26ba335eeb4b62bc6b680eccb7bc318eb05,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaIngester.java,"    AccumuloOutputFormat.setOutputInfo(job.getConfiguration(), user, password, true, tablename);
    AccumuloOutputFormat.setZooKeeperInstance(job.getConfiguration(), instanceName, zookeepers);",1 duplicated blocks of code must be removed.
7acbcc2794f8a9c8e5a99bcbc3cb6f4141c0e601,core/src/main/java/org/apache/accumulo/core/iterators/system/SynchronizedIterator.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
public class SynchronizedIterator<K extends WritableComparable<?>,V extends Writable> implements SortedKeyValueIterator<K,V> {
  
  
  
  
  
  
  
  public SynchronizedIterator() {}
  public SynchronizedIterator(SortedKeyValueIterator<K,V> source) {",Move this constructor to comply with Java Code Conventions.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/test/java/org/apache/accumulo/core/client/mapreduce/AccumuloFileOutputFormatTest.java,"import org.apache.hadoop.mapreduce.Job;
  static Job job;
  public void setup() throws IOException {
    job = new Job();
  public void writeBadVisibility() throws IOException, InterruptedException {
    AccumuloFileOutputFormat afof = new AccumuloFileOutputFormat();
    RecordWriter<Key,Value> rw = afof.getRecordWriter(tac);
    
    Path file = afof.getDefaultWorkFile(tac, "".rf"");

    rw.write(new Key(""r1"", ""cf1"", ""cq1"", ""A&B""), new Value("""".getBytes()));
    rw.write(new Key(""r1"", ""cf1"", ""cq2"", ""A&B""), new Value("""".getBytes()));
    try {
      rw.write(new Key(""r1"", ""cf1"", ""cq2"", ""A&""), new Value("""".getBytes()));
      assertFalse(true);
    } catch (Exception e) {}
    
    file.getFileSystem(tac.getConfiguration()).delete(file.getParent(), true);
  }

  @Test
    AccumuloFileOutputFormat.setReplication(job, a);
    AccumuloFileOutputFormat.setFileBlockSize(job, b);
    AccumuloFileOutputFormat.setDataBlockSize(job, c);
    AccumuloFileOutputFormat.setIndexBlockSize(job, d);
    AccumuloFileOutputFormat.setCompressionType(job, e);
    
    AccumuloConfiguration acuconf = AccumuloFileOutputFormat.getAccumuloConfiguration(job);
    assertEquals(a, acuconf.getCount(Property.TABLE_FILE_REPLICATION));
    assertEquals(b, acuconf.getMemoryInBytes(Property.TABLE_FILE_BLOCK_SIZE));
    assertEquals(c, acuconf.getMemoryInBytes(Property.TABLE_FILE_COMPRESSED_BLOCK_SIZE));
    assertEquals(d, acuconf.getMemoryInBytes(Property.TABLE_FILE_COMPRESSED_BLOCK_SIZE_INDEX));
    assertEquals(e, acuconf.get(Property.TABLE_FILE_COMPRESSION_TYPE));","Remove this unused private ""appendProp"" method."
6e526d702caaae157c44254b041497d18af761d0,server/src/main/java/org/apache/accumulo/server/security/handler/ZKAuthenticator.java,    return this.getClass().getSuperclass().getName();,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
05b3359b9c6643cbdb2284afead9a0dcac2a9300,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"    public long readaheadThreshold = Constants.SCANNER_DEFAULT_READAHEAD_THRESHOLD;
        List<IterInfo> ssiList, Map<String,Map<String,String>> ssio, List<ByteBuffer> authorizations, boolean waitForWrites, boolean isolated,
        long readaheadThreshold) throws NotServingTabletException, ThriftSecurityException, org.apache.accumulo.core.tabletserver.thrift.TooManyFilesException {

      scanSession.readaheadThreshold = readaheadThreshold;
      if (scanResult.more && scanSession.batchCount > scanSession.readaheadThreshold) {",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ExitCommand.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    @Override
    public int execute(String fullCommand, CommandLine cl, Shell shellState) {
        shellState.setExit(true);
        return 0;
    }
    
    @Override
    public String description() {
        return ""exits the shell"";
    }
    
    @Override
    public int numArgs() {
        return 0;
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b7fe5384340a76696b040a397389ad2b6157798e,contrib/accumulo_sample/ingest/src/main/java/aggregator/GlobalIndexUidAggregator.java,"import org.apache.accumulo.core.data.Value;
import org.apache.accumulo.core.iterators.aggregation.Aggregator;
@SuppressWarnings(""deprecation"")",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/bulk/BulkMinusOne.java,"package org.apache.accumulo.server.test.randomwalk.bulk;

import org.apache.accumulo.core.data.Value;
import org.apache.accumulo.server.test.randomwalk.State;


public class BulkMinusOne extends BulkTest {

    private static final Value negOne = new Value(""-1"".getBytes());
    
    @Override
    protected void runLater(State state) throws Exception {
        log.info(""Decrementing"");
        BulkPlusOne.bulkLoadLots(log, state, negOne);
    }

}",Return empty string instead.
db4a291f944e8a6ad9d63dcbedfa9fe3108f0ead,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/BatchScan.java,"import org.apache.accumulo.core.client.AccumuloSecurityException;
    } catch (RuntimeException e) {
      if (e.getCause() instanceof AccumuloSecurityException) {
        log.debug(""BatchScan "" + tableName + "" failed, permission error"");
      } else {
        throw e;
      }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,core/src/main/java/org/apache/accumulo/core/util/shell/commands/PasswdCommand.java,"import java.nio.ByteBuffer;
import org.apache.accumulo.core.security.thrift.Credentials;
    if (!shellState.getConnector().securityOperations().authenticateUser(currentUser, oldPassword.getBytes()))
    shellState.getConnector().securityOperations().changeUserPassword(user, pass);
      shellState.updateUser(new Credentials(user, ByteBuffer.wrap(pass), shellState.getConnector().getInstance().getInstanceID()));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/master/state/RootTabletStateStore.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/multitable/Commit.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    @Override
    public void visit(State state, Properties props) throws Exception {
        state.getMultiTableBatchWriter().flush();
        
        Integer numWrites = state.getInteger(""numWrites"");
        Integer totalWrites = state.getInteger(""totalWrites"") + numWrites;
        
        log.debug(""Committed "" + numWrites + "" writes.  Total writes: "" + totalWrites);
        
        state.set(""totalWrites"", totalWrites);
        state.set(""numWrites"", new Integer(0));
    }
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a1c5667873834cdd74cb3eb5a19ec25486fba290,core/src/main/java/org/apache/accumulo/core/util/shell/commands/DebugCommand.java,"      shellState.getReader().println(Shell.isDebuggingEnabled() ? ""on"" : ""off"");",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,server/src/main/java/org/apache/accumulo/server/util/VerifyTabletAssignments.java,"import java.nio.ByteBuffer;
import org.apache.accumulo.core.security.thrift.Credentials;
import org.apache.accumulo.trace.instrument.Tracer;
import org.apache.accumulo.trace.thrift.TInfo;
    @Parameter(names = {""-v"", ""--verbose""}, description = ""verbose mode (prints locations of tablets)"")
    
  private static void checkTable(final Opts opts, String tableName, HashSet<KeyExtent> check) throws AccumuloException, AccumuloSecurityException,
      TableNotFoundException, InterruptedException {
    MetadataTable.getEntries(conn.getInstance(), new Credentials(opts.user, ByteBuffer.wrap(opts.getPassword()), inst.getInstanceID()), tableName, false,
        locations, tablets);
            checkTabletServer(conf.getConfiguration(), opts.user, ByteBuffer.wrap(opts.getPassword()), entry, failures);
  private static void checkTabletServer(AccumuloConfiguration conf, final String user, final ByteBuffer pass, Entry<String,List<KeyExtent>> entry,
      HashSet<KeyExtent> failures) throws ThriftSecurityException, TException, NoSuchScanIDException {
    Credentials st = new Credentials(user, pass, HdfsZooInstance.getInstance().getInstanceID());
    InitialMultiScan is = client.startMultiScan(tinfo, st, batch, emptyListColumn, emptyListIterInfo, emptyMapSMapSS, Constants.NO_AUTHS.getAuthorizationsBB(),
        false);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/master/state/Assignment.java,"  public KeyExtent tablet;
  public TServerInstance server;
  
  public Assignment(KeyExtent tablet, TServerInstance server) {
    this.tablet = tablet;
    this.server = server;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ScanType.java,"/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package org.apache.accumulo.core.tabletserver.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum ScanType implements org.apache.thrift.TEnum {
  SINGLE(0),
  BATCH(1);

  private final int value;

  private ScanType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static ScanType findByValue(int value) { 
    switch (value) {
      case 0:
        return SINGLE;
      case 1:
        return BATCH;
      default:
        return null;
    }
  }
}",Return empty string instead.
9d13f546ebb1e716c1d25c35225190b1b2805975,src/core/src/main/java/org/apache/accumulo/core/iterators/filter/Filter.java, * @use org.apache.accumulo.core.iterators.Filter,"Remove this unused private ""match"" method."
3dbd87897442d632a09660f5bb5667c28e4bf9c4,core/src/main/java/org/apache/accumulo/core/master/thrift/RecoveryException.java," * Autogenerated by Thrift Compiler (0.9.0)
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
@SuppressWarnings(""all"") public class RecoveryException extends TException implements org.apache.thrift.TBase<RecoveryException, RecoveryException._Fields>, java.io.Serializable, Cloneable {
    // check for sub-struct validity",Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'.
5b8f1ab7eff80532ef2d0cc679c573d86050035e,core/src/main/java/org/apache/accumulo/core/file/rfile/BlockIndex.java,"    private Key prevKey;
    public BlockIndexEntry(int pos, int entriesLeft, Key key, Key prevKey) {
      this.prevKey = prevKey;
    @Override
    
    public Key getPrevKey() {
      return prevKey;
    }
      Key myPrevKey = rk.getKey();
        index.add(new BlockIndexEntry(pos, indexEntry.getNumEntries() - count, rk.getKey(), myPrevKey));","Use ""Character.toString"" instead."
f37ee0b85f8d71ed03d655d7e4b4ff53c7d74314,test/src/main/java/org/apache/accumulo/test/MiniAccumuloCluster.java,"  
    
    @Override
        
  
  
  
  
  
    
    argList.addAll(Arrays.asList(javaBin, ""-cp"", classpath, ""-Xmx128m"", ""-XX:+UseConcMarkSweepGC"", ""-XX:CMSInitiatingOccupancyFraction=75"", className));
    
    
    
  
  
  
  
    
    
    
    
    
    
  
  
    
      @Override
    
    
    
    
  
  
  
  
  ",Reduce the number of conditional operators (6) used in the expression (maximum allowed 3).
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/util/ByteArrayComparator.java,"  private static final long serialVersionUID = 1L;
  
  @Override
  public int compare(byte[] o1, byte[] o2) {
    int minLen = Math.min(o1.length, o2.length);
    
    for (int i = 0; i < minLen; i++) {
      int a = (o1[i] & 0xff);
      int b = (o2[i] & 0xff);
      
      if (a != b) {
        return a - b;
      }
    
    return o1.length - o2.length;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/shard/ContinuousQuery.java,package org.apache.accumulo.examples.simple.shard;,2 duplicated blocks of code must be removed.
8773302cfebff3d1c129b32e7f92dec4094496da,core/src/test/java/org/apache/accumulo/core/client/mock/MockConnectorTest.java,"    Connector c = mockInstance.getConnector(""root"", new PasswordToken(""""));
    assertEquals(mockInstance, mockInstance.getConnector(""foo"", new PasswordToken(""bar"")).getInstance());
    assertEquals(name, mockInstance.getConnector(""foo"", new PasswordToken(""bar"")).getInstance().getInstanceName());","Rename ""connector"" which hides the field declared at line 67."
162e17aa5e9d1f86066301921ad01e45fa0c8ad4,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaMapper.java,"import org.apache.accumulo.examples.wikisearch.ingest.WikipediaInputFormat.WikipediaInputSplit;

  private int myGroup = -1;
  private int numGroups = -1;
    WikipediaInputSplit wiSplit = (WikipediaInputSplit)context.getInputSplit();
    myGroup = wiSplit.getPartition();
    numGroups = WikipediaConfiguration.getNumGroups(conf);
    
    FileSplit split = wiSplit.getFileSplit();
      int groupId = WikipediaMapper.getPartitionId(article, numGroups);
      if(groupId != myGroup)
        return;
      while (tok.incrementToken()) {","Immediately return this expression instead of assigning it to the temporary variable ""result""."
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/bloomfilter/BloomFilter.java," * Redistribution and use in source and binary forms, with or 
 * without modification, are permitted provided that the following 
 *  - Redistributions of source code must retain the above copyright 
 *  - Redistributions in binary form must reproduce the above copyright 
 *    notice, this list of conditions and the following disclaimer in 
 *    nor the names of its contributors may be used to endorse or 
 *    promote products derived from this software without specific prior 
 *    
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
 * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN 
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
 * 
 * 
 * 
  
  
  
  
   * 
    
  
    
    
    
  
    
  
    
  
  
  
  
  
  
  
    
    
  
    
    
    
    
      
    
  
  ",Replace all tab characters in this file by sequences of white-spaces.
7bf768e0dca1e43782f3eb8bab30ba29032c0507,src/core/src/main/java/org/apache/accumulo/core/client/IteratorSetting.java,"   * Get layer at which this iterator applies. See {@link #setPriority(int)} for how the priority is used.
   *          the priority for the iterator (see {@link #setPriority(int)})
   *          the priority for the iterator (see {@link #setPriority(int)})
   *          the priority for the iterator (see {@link #setPriority(int)})
   * 
   *          the priority for the iterator (see {@link #setPriority(int)})
  public IteratorSetting(int priority, Class<? extends SortedKeyValueIterator<Key,Value>> iteratorClass, Map<String,String> properties) {
   *          the priority for the iterator (see {@link #setPriority(int)})
    ",1 duplicated blocks of code must be removed.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/util/TBufferedServerSocket.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
368f68225070941364940adb5472b517e713e27d,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ConfigCommand.java,"import org.apache.accumulo.core.util.format.Formatter;
import org.apache.accumulo.start.classloader.AccumuloClassLoader;
  IOException, ClassNotFoundException {
        
        // Fall back to the default formatter
        if (property.equals(Property.TABLE_FORMATTER_CLASS.getKey())) {
          shellState.setFormatterClass(tableName, AccumuloClassLoader.loadClass(Property.TABLE_FORMATTER_CLASS.getDefaultValue(), Formatter.class));
        }
        
        // Load the formatter before setting the parameter
        if (property.equals(Property.TABLE_FORMATTER_CLASS.getKey())) {
          shellState.setFormatterClass(tableName, AccumuloClassLoader.loadClass(value, Formatter.class));
        }
        ","Remove this unused private ""debugQuery"" method."
aa7110234e15a017bb1dbc99b4351f0bf06cc73b,test/src/test/java/org/apache/accumulo/test/functional/StartIT.java,"import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
public class StartIT extends ConfigurableMacIT {

",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
6a5500a5b3f34b26386877e332973e7b926aa4ce,test/src/main/java/org/apache/accumulo/test/functional/VisibilityTest.java,"    getConnector().securityOperations().changeUserAuthorizations(getPrincipal(), new Authorizations(nbas(userAuths)));
    getConnector().securityOperations().changeUserAuthorizations(getPrincipal(), new Authorizations(""BASE"", ""DEFLABEL""));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,test/src/main/java/org/apache/accumulo/test/randomwalk/security/DropTable.java,"import org.apache.accumulo.core.security.thrift.Credentials;
    Credentials auth;
      auth = WalkingSecurity.get(state).getTabCredentials();
      auth = WalkingSecurity.get(state).getSysCredentials();
    Connector conn = state.getInstance().getConnector(auth.getPrincipal(), auth.getToken());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/conf/ConfigSanityCheck.java,"  
  /**
   * @param args
   */
  public static void main(String[] args) {
    ServerConfiguration.getSystemConfiguration();
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
55ddd27058e2475ba1bc870a66fb5d3777934eec,src/core/src/test/java/org/apache/accumulo/core/iterators/RegExIteratorTest.java,"import junit.framework.TestCase;

/**
 * @deprecated since 1.4
 */",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
6abb3e5ccb533adff0ae715dc3eb0c4a56ed4874,core/src/main/java/org/apache/accumulo/core/util/shell/commands/SetIterCommand.java,"  private Option mincScopeOpt, majcScopeOpt, scanScopeOpt, nameOpt, priorityOpt;
    String tableName = OptUtil.configureTableOpt(cl, shellState);
    o.addOption(OptUtil.tableOpt(""table to configure iterators on""));","Reduce this switch case number of lines from 8 to at most 5, for example by extracting code into methods."
a263f3e57501ee2a3872cde23f6cfc9958526b42,src/core/src/main/java/org/apache/accumulo/core/conf/Property.java,"  TSERV_WORKQ_THREADS(""tserver.workq.threads"", ""2"", PropertyType.COUNT,
      ""The number of threads for the distributed workq.  These threads are used for copying failed bulk files.""),
",Move this variable to comply with Java Code Conventions.
48c98ba2e3bea2b11621030693f5e37fc8dfa10d,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/Node.java,"  public String toString() {
    return this.getClass().getName();
  }
  
  @Override",Do not forget to remove this deprecated code someday.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/TableCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/FlushCommand.java,"  
  private Text startRow;
  private Text endRow;
  
  private boolean wait;
  private Option optStartRow, optEndRow, waitOpt;
  
  @Override
  public String description() {
    return ""flushes a tables data that is currently in memory to disk"";
  }
  
  protected void doTableOp(Shell shellState, String tableName) throws AccumuloException, AccumuloSecurityException, TableNotFoundException {
    shellState.getConnector().tableOperations().flush(tableName, startRow, endRow, wait);
    Shell.log.info(""Flush of table "" + tableName + (wait ? "" completed."" : "" initiated...""));
    if (tableName.equals(Constants.METADATA_TABLE_NAME)) {
      Shell.log.info(""  May need to flush "" + Constants.METADATA_TABLE_NAME + "" table multiple times."");
      Shell.log.info(""  Flushing "" + Constants.METADATA_TABLE_NAME + "" causes writes to itself and"");
      Shell.log.info(""  minor compactions, which also cause writes to itself."");
      Shell.log.info(""  Check the monitor web page and give it time to settle."");
  }
  
  @Override
  public int execute(String fullCommand, CommandLine cl, Shell shellState) throws Exception {
    wait = cl.hasOption(waitOpt.getLongOpt());
    startRow = null;
    if (cl.hasOption(optStartRow.getOpt())) startRow = new Text(cl.getOptionValue(optStartRow.getOpt()));
    endRow = null;
    if (cl.hasOption(optEndRow.getOpt())) endRow = new Text(cl.getOptionValue(optEndRow.getOpt()));
    return super.execute(fullCommand, cl, shellState);
  }
  
  @Override
  public Options getOptions() {
    Options opts = super.getOptions();
    waitOpt = new Option(""w"", ""wait"", false, ""wait for flush to finish"");
    opts.addOption(waitOpt);
    optStartRow = new Option(""b"", ""begin-row"", true, ""begin row"");
    opts.addOption(optStartRow);
    optEndRow = new Option(""e"", ""end-row"", true, ""end row"");
    opts.addOption(optEndRow);
    return opts;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/impl/ThriftTransportPool.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/iterators/WholeRowIterator.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
af9a1216a1853a7bd6e89ab581fadaf682cb69a0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/GrepCommand.java,"    numThreadsOpt = new Option(""nt"", ""num-threads"", true, ""number of threads to use"");",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/performance/scan/CollectTabletStats.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/shard/DeleteWord.java,"  
  @Override
  public void visit(State state, Properties props) throws Exception {
    String indexTableName = (String) state.get(""indexTableName"");
    String docTableName = (String) state.get(""docTableName"");
    int numPartitions = (Integer) state.get(""numPartitions"");
    Random rand = (Random) state.get(""rand"");
    String wordToDelete = Insert.generateRandomWord(rand);
    
    // use index to find all documents containing word
    Scanner scanner = state.getConnector().createScanner(indexTableName, Constants.NO_AUTHS);
    scanner.fetchColumnFamily(new Text(wordToDelete));
    
    ArrayList<Range> documentsToDelete = new ArrayList<Range>();
    
    for (Entry<Key,Value> entry : scanner)
      documentsToDelete.add(new Range(entry.getKey().getColumnQualifier()));
    
    if (documentsToDelete.size() > 0) {
      // use a batch scanner to fetch all documents
      BatchScanner bscanner = state.getConnector().createBatchScanner(docTableName, Constants.NO_AUTHS, 8);
      bscanner.setRanges(documentsToDelete);
      
      BatchWriter ibw = state.getMultiTableBatchWriter().getBatchWriter(indexTableName);
      BatchWriter dbw = state.getMultiTableBatchWriter().getBatchWriter(docTableName);
      
      int count = 0;
      
      for (Entry<Key,Value> entry : bscanner) {
        String docID = entry.getKey().getRow().toString();
        String doc = entry.getValue().toString();
        Insert.unindexDocument(ibw, doc, docID, numPartitions);
        Mutation m = new Mutation(docID);
        m.putDelete(""doc"", """");
        dbw.addMutation(m);
        count++;
      }
      
      bscanner.close();
      
      state.getMultiTableBatchWriter().flush();
      
      if (count != documentsToDelete.size()) {
        throw new Exception(""Batch scanner did not return expected number of docs "" + count + "" "" + documentsToDelete.size());
      }
    log.debug(""Deleted "" + documentsToDelete.size() + "" documents containing "" + wordToDelete);
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/client/admin/SecurityOperations.java,"   * @deprecated Use {@link #createUser(String,byte[])} instead

  /**
   * Create a user
   * 
   * @param user
   *          the name of the user to create
   * @param password
   *          the plaintext password for the user
   * @throws AccumuloException
   *           if a general error occurs
   * @throws AccumuloSecurityException
   *           if the user does not have permission to create a user
   */
  public void createUser(String user, byte[] password) throws AccumuloException, AccumuloSecurityException;","Remove this unused private ""appendProp"" method."
ccaad172643805d56f5dd46cbbc7dcd1a5519cbf,src/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReaderIterator.java,import org.apache.accumulo.cloudtrace.instrument.TraceRunnable;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
efef09b0ab25b480910312c63e876d0d5613b646,src/core/src/main/java/org/apache/accumulo/core/iterators/FamilyIntersectingIterator.java,"    colq.set(currentDocID.getBytes(), zeroIndex + 1, currentDocID.getLength() - zeroIndex - 1);","Define a constant instead of duplicating this literal "" docID="" 5 times."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/monitor/ZooKeeperStatus.java,"import java.util.SortedSet;
import java.util.TreeSet;
  public static class ZooKeeperState implements Comparable<ZooKeeperState> {
    
    @Override
    public int compareTo(ZooKeeperState other) {
      if (this == other) {
        return 0;
      } else if (other == null) {
        return 1;
      } else {
        if (this.keeper == other.keeper) {
          return 0;
        } else if (null == this.keeper) {
          return -1;
        } else if (null == other.keeper) {
          return 1;
        } else {
          return this.keeper.compareTo(other.keeper);
        }
      }
    }
  private static SortedSet<ZooKeeperState> status = new TreeSet<ZooKeeperState>();
      TreeSet<ZooKeeperState> update = new TreeSet<ZooKeeperState>();
          transport.write(""stat\n"".getBytes(), 0, 5);","Remove this unused private ""appendProp"" method."
84a508592afc8fde6e035f6fef7f5990752256f2,server/src/main/java/org/apache/accumulo/server/monitor/servlets/TServersServlet.java,"          tsStats.addAll(client.getTabletStats(Tracer.traceInfo(), SecurityConstants.getThriftSystemCredentials(), tableId));
        historical = client.getHistoricalStats(Tracer.traceInfo(), SecurityConstants.getThriftSystemCredentials());","Immediately return this expression instead of assigning it to the temporary variable ""ret""."
0811c7958ecc1a9a2c8f80702273856f1cd2eab8,src/trace/src/main/java/org/apache/accumulo/cloudtrace/instrument/impl/RootMilliSpan.java,package org.apache.accumulo.cloudtrace.instrument.impl;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/RowIterator.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
e1545eabde886de7bebe63f8f50414086966d13e,test/src/main/java/org/apache/accumulo/test/randomwalk/security/WalkingSecurity.java,"  @SuppressWarnings(""deprecation"")",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/master/balancer/LoggerUser.java,"  
  Set<String> getLoggers();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
99da5641c28784c7b717cce6749673863c2ec8cf,server/src/test/java/org/apache/accumulo/server/gc/TestConfirmDeletes.java,"import org.apache.accumulo.core.security.Credentials;
    Credentials credentials = new Credentials(""root"", new PasswordToken(new byte[0]));
    gc.init(fs, instance, credentials, false);
    Credentials credentials = new Credentials(""root"", new PasswordToken(new byte[0]));
    Scanner scanner = instance.getConnector(credentials.getPrincipal(), credentials.getToken()).createScanner(MetadataTable.NAME, Authorizations.EMPTY);
    Connector conn = instance.getConnector(credentials.getPrincipal(), credentials.getToken());","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/master/tableOps/CloneTable.java,"import org.apache.accumulo.fate.Repo;
import org.apache.accumulo.fate.zookeeper.ZooUtil.NodeExistsPolicy;","Remove this call to ""exit"" or ensure it is really required."
8c2ef69058fa4917c9b330ca9c8b8cc2ce548e36,server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousStatsCollector.java,        client = MasterClient.getConnectionWithRetry(HdfsZooInstance.getInstance());,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
0811c7958ecc1a9a2c8f80702273856f1cd2eab8,src/server/src/main/java/org/apache/accumulo/server/logger/LogWriter.java,"import org.apache.accumulo.cloudtrace.instrument.Span;
import org.apache.accumulo.cloudtrace.instrument.Trace;
import org.apache.accumulo.cloudtrace.thrift.TInfo;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/examples/src/main/java/org/apache/accumulo/examples/helloworld/ReadData.java,"    if (args.length > 5)
      start = new Key(new Text(args[5]));
    if (args.length > 6)
      end = new Key(new Text(args[6]));","Remove this call to ""exit"" or ensure it is really required."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousMoru.java,"import java.util.Set;
import org.apache.accumulo.core.cli.BatchWriterOpts;
import org.apache.accumulo.server.test.continuous.ContinuousIngest.BaseOpts;
import com.beust.jcommander.Parameter;
import com.beust.jcommander.validators.PositiveInteger;

 * A map only job that reads a table created by continuous ingest and creates doubly linked list. This map reduce job tests the ability of a map only job to read and
  static class Opts extends BaseOpts {
    @Parameter(names=""--maxColF"", description=""maximum column family value to use"")
    short maxColF = Short.MAX_VALUE;
    
    @Parameter(names=""--maxColQ"", description=""maximum column qualifier value to use"")
    short maxColQ = Short.MAX_VALUE;
 
    @Parameter(names=""--maxMappers"", description=""the maximum number of mappers to use"", required=true, validateWith=PositiveInteger.class)
    int maxMaps = 0;
  }
  
    Opts opts = new Opts();
    BatchWriterOpts bwOpts = new BatchWriterOpts();
    opts.parseArgs(ContinuousMoru.class.getName(), args, bwOpts);
    opts.setAccumuloConfigs(job);
      Set<Range> ranges = opts.getConnector().tableOperations().splitRangeByTablets(opts.getTableName(), new Range(), opts.maxMaps);
      AccumuloInputFormat.setRanges(job.getConfiguration(), ranges);
    AccumuloOutputFormat.setMaxLatency(job.getConfiguration(), (int) (bwOpts.batchLatency / 1000.0));
    AccumuloOutputFormat.setMaxMutationBufferSize(job.getConfiguration(), bwOpts.batchMemory);
    AccumuloOutputFormat.setMaxWriteThreads(job.getConfiguration(), bwOpts.batchThreads);
    conf.setLong(MIN, opts.min);
    conf.setLong(MAX, opts.max);
    conf.setInt(MAX_CF, opts.maxColF);
    conf.setInt(MAX_CQ, opts.maxColQ);
    opts.stopTracing();","Remove this unused private ""appendProp"" method."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/constraints/SystemConstraint.java,"package org.apache.accumulo.server.constraints;

import org.apache.accumulo.core.constraints.Constraint;

public abstract class SystemConstraint implements Constraint
{
}",Return empty string instead.
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,test/src/main/java/org/apache/accumulo/test/functional/ZombieTServer.java,"import org.apache.accumulo.trace.instrument.Tracer;
import org.apache.accumulo.trace.thrift.TInfo;",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
84a508592afc8fde6e035f6fef7f5990752256f2,server/src/main/java/org/apache/accumulo/server/tabletserver/mastermessage/TabletStatusMessage.java,"import org.apache.accumulo.core.security.thrift.ThriftInstanceTokenWrapper;
  public void send(ThriftInstanceTokenWrapper auth, String serverName, Iface client) throws TException, ThriftSecurityException {","Immediately return this expression instead of assigning it to the temporary variable ""ret""."
2db5ce6186e32c451328154b024951cc5090505f,core/src/main/java/org/apache/accumulo/core/file/blockfile/cache/LruBlockCache.java,"import org.apache.accumulo.core.util.NamingThreadFactory;
  private final ScheduledExecutorService scheduleThreadPool = Executors.newScheduledThreadPool(1, new NamingThreadFactory(""LRUBlockCacheStats""));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c8b5f1755c0563e93f21036ecf88da37b567aa74,core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java,"  public int execute(final String fullCommand, final CommandLine cl, final Shell shellState) throws Exception {
    final String tableName = OptUtil.getTableOpt(cl, shellState);
    final Text startRow = OptUtil.getStartRow(cl);
    final Text endRow = OptUtil.getEndRow(cl);
    if (cl.hasOption(verboseOpt.getOpt())) {
    }
    if (cl.hasOption(forceOpt.getOpt())) {
    }
    if (size < 0) {
    } else {
      final Merge merge = new Merge() {
    final Options o = new Options();",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
ba26076fd1da7ba83d25ea24d43ba1fe2822dcef,src/server/src/main/java/org/apache/accumulo/server/test/performance/thrift/NullTserver.java,"  public static class ThriftClientHandler extends ClientServiceHandler implements TabletClientService.Iface {
    public ThriftClientHandler(TransactionWatcher watcher) {","Remove this call to ""exit"" or ensure it is really required."
a63607a89356ef85af81e377b289fafe413687c5,server/src/main/java/org/apache/accumulo/server/util/Admin.java,"import org.apache.accumulo.cloudtrace.instrument.Tracer;
    MasterClient.execute(HdfsZooInstance.getInstance(), new ClientExec<MasterClientService.Client>() {
      public void execute(MasterClientService.Client client) throws Exception {
        client.shutdown(Tracer.traceInfo(), credentials, tabletServersToo);
    MasterClient.execute(HdfsZooInstance.getInstance(), new ClientExec<MasterClientService.Client>() {
      public void execute(MasterClientService.Client client) throws Exception {
        client.shutdownTabletServer(Tracer.traceInfo(), SecurityConstants.getSystemCredentials(), finalServer, force);","Immediately return this expression instead of assigning it to the temporary variable ""client""."
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/reader/AggregatingRecordReader.java,"package org.apache.accumulo.examples.wikisearch.reader;
import org.apache.accumulo.examples.wikisearch.ingest.WikipediaConfiguration;
import org.apache.accumulo.examples.wikisearch.util.TextUtil;",2 duplicated blocks of code must be removed.
9d13f546ebb1e716c1d25c35225190b1b2805975,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/GrepCommand.java,import org.apache.accumulo.core.iterators.user.GrepIterator;,"Remove this unused private ""match"" method."
5bd33fa1e9625e3c088ee39f626c256aca75b0da,examples/simple/src/test/java/org/apache/accumulo/examples/simple/dirlist/CountTest.java,"import org.apache.accumulo.core.client.BatchWriterConfig;
      BatchWriter bw = conn.createBatchWriter(""dirlisttable"", new BatchWriterConfig());","Remove this unused method parameter ""e""."
02a26268575ac93d74796ec8fd8798f85b92dac1,core/src/main/java/org/apache/accumulo/core/iterators/user/LargeRowFilter.java,"  public static final Value SUPPRESS_ROW_VALUE = new Value(""SUPPRESS_ROW"".getBytes());","Remove this unused method parameter ""ex""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/test/java/org/apache/accumulo/server/zookeeper/DistributedReadWriteLockTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,contrib/accumulo_sample/ingest/src/main/java/reader/AggregatingRecordReader.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/util/format/ShardedTableDistributionFormatter.java,"      } else
        day = ""NULL    "";
      if (countsByDay.get(day) == null)
        countsByDay.put(day, new HashSet<String>());","Remove this call to ""exit"" or ensure it is really required."
c456043bbf9ea1ddf9e3facee86c09adab345c8f,core/src/main/java/org/apache/accumulo/core/data/Range.java,"   * Creates a range from startRow to endRow
   * Creates a range from startRow to endRow
   * Creates a range from startKey to endKey
   * 
   * Copies a range
  /**
   * @return the first key in the range, null if the key is infinite
   */
   * @return true if the given key is before the range, otherwise false
  
  
  /**
   * Compares this range to another range. Compares in the order start key, inclusiveness of start key, end key, inclusiveness of end key. Infinite keys sort
   * first, and non-infinite keys are compared with {@link Key#compareTo(Key)}. Inclusive sorts before non-inclusive.
   */
  
  
  
  ",Either log or rethrow this exception.
22cdcbc700e4c68b21738ab7087a35ef784b0fc1,server/src/main/java/org/apache/accumulo/server/master/recovery/MapRLogCloser.java,"import org.apache.accumulo.server.fs.VolumeManager;
  public long close(Master m, VolumeManager fs, Path path) throws IOException {
    FileSystem ns = fs.getFileSystemByPath(path);
      ns.setPermission(path, roPerm);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/admin/ActiveScan.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/iterators/LargeRowFilter.java,"      if (currentPosition == keys.size())
        readNextRow();","Remove this call to ""exit"" or ensure it is really required."
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/client/mapred/InputFormatBase.java,"  
  
   * 
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
   * 
  
   * 
  
   * 
   * 
  
   * 
  
   * 
   * 
  
   * 
  
   * 
   * 
   * 
   * 
   * 
   * 
  
   * 
  
   * 
  
   * 
  
   * 
    
     * 
    
      
      
      
      
      
    
    
    
    
    
  
    
    
    
    
      
      
      
      
      
      
        
          
          
          
          
        
        
        
        
        
        
        
        
      
    
  
    
    
    
    
    
    
    
      
    
  
    
    
    
    
  ",Replace all tab characters in this file by sequences of white-spaces.
2d9b208fb83df755e0cc32908318743f79e2793f,proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanState.java,"/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.accumulo.proxy.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum ScanState implements org.apache.thrift.TEnum {
  IDLE(0),
  RUNNING(1),
  QUEUED(2);

  private final int value;

  private ScanState(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static ScanState findByValue(int value) { 
    switch (value) {
      case 0:
        return IDLE;
      case 1:
        return RUNNING;
      case 2:
        return QUEUED;
      default:
        return null;
    }
  }
}",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/util/AddressUtil.java,"  static public InetSocketAddress parseAddress(String address, Property portDefaultProperty) {
    final int dfaultPort = ServerConfiguration.getSystemConfiguration().getPort(Property.TSERV_CLIENTPORT);
    return org.apache.accumulo.core.util.AddressUtil.parseAddress(address, dfaultPort);
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
994df698e70d4a5810c095299addd09497eed57a,core/src/main/java/org/apache/accumulo/core/client/mock/MockTable.java,"    if (m.size() == 0)
      throw new IllegalArgumentException(""Can not add empty mutations"");",Remove the declaration of thrown exception 'java.lang.NumberFormatException' which is a runtime exception.
190fc92eab965a787f19797fda3754bece6a1ae2,core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java,"   * Imports a table exported via exportTable and copied via hadoop distcp.
   * 
   * @param tableName
   *          Name of a table to create and import into.
   * @param importDir
   *          Directory that contains the files copied by distcp from exportTable
   * @throws TableExistsException
   * @throws AccumuloException
   * @throws AccumuloSecurityException
   */
  public void importTable(String tableName, String importDir) throws TableExistsException, AccumuloException, AccumuloSecurityException;
  
  /**
   * Exports a table. The tables data is not exported, just table metadata and a list of files to distcp. The table being exported must be offline and stay
   * offline for the duration of distcp. To avoid losing access to a table it can be cloned and the clone taken offline for export.
   * 
   * <p>
   * See docs/examples/README.export
   * 
   * @param tableName
   *          Name of the table to export.
   * @param exportDir
   *          An empty directory in HDFS where files containing table metadata and list of files to distcp will be placed.
   * @throws TableNotFoundException
   * @throws AccumuloException
   * @throws AccumuloSecurityException
   */
  public void exportTable(String tableName, String exportDir) throws TableNotFoundException, AccumuloException, AccumuloSecurityException;

  /**",Rename this package name to match the regular expression '^[a-z]+(\.[a-z][a-z0-9]*)*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/StringSummation.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
5597259bbfa3da9833cf047b480efbba6f46ed02,src/core/src/main/java/org/apache/accumulo/core/client/mock/MockAccumulo.java,"@SuppressWarnings(""deprecation"")
  /**
   * @deprecated since 1.4
   */",1 duplicated blocks of code must be removed.
5bd33fa1e9625e3c088ee39f626c256aca75b0da,examples/simple/src/main/java/org/apache/accumulo/examples/simple/client/SequentialBatchWriter.java,"import java.util.concurrent.TimeUnit;

import org.apache.accumulo.core.client.BatchWriterConfig;
    BatchWriter bw = connector.createBatchWriter(table, new BatchWriterConfig().setMaxMemory(maxMemory).setMaxLatency(maxLatency, TimeUnit.MILLISECONDS)
        .setMaxWriteThreads(numThreads));","Remove this unused method parameter ""e""."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/tabletserver/log/LogEntry.java,"package org.apache.accumulo.core.tabletserver.log;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;

import org.apache.accumulo.core.data.KeyExtent;
import org.apache.hadoop.io.DataInputBuffer;
import org.apache.hadoop.io.DataOutputBuffer;


public class LogEntry {
    public KeyExtent extent;
    public long timestamp;
    public String server;
    public String filename;
    public int tabletId;
    public Collection<String> logSet;
    
    public String toString() {
        return extent.toString() + "" "" + filename + "" ("" + tabletId + "")"";
    }
    
    public String getName() {
        return server + ""/"" + filename;
    }
    
    public byte[] toBytes() throws IOException {
        DataOutputBuffer out = new DataOutputBuffer();
        extent.write(out);
        out.writeLong(timestamp);
        out.writeUTF(server);
        out.writeUTF(filename);
        out.write(tabletId);
        out.write(logSet.size());
        for (String s :logSet) {
            out.writeUTF(s);
        }
        return Arrays.copyOf(out.getData(), out.getLength());
    }
    public void fromBytes(byte bytes[]) throws IOException {
        DataInputBuffer inp = new DataInputBuffer();
        inp.reset(bytes, bytes.length);
        extent = new KeyExtent();
        extent.readFields(inp);
        timestamp = inp.readLong();
        server = inp.readUTF();
        filename = inp.readUTF();
        tabletId = inp.read();
        int count = inp.read();
        ArrayList<String> logSet = new ArrayList<String>(count);
        for (int i = 0; i < count; i++)
            logSet.add(inp.readUTF());
        this.logSet = logSet;
    }
    
}",Return empty string instead.
5ceae82e623f5802c6dfea55512c03267f35128f,src/examples/src/main/java/org/apache/accumulo/examples/mapreduce/RowHash.java,"    AccumuloInputFormat.setZooKeeperInstance(job.getConfiguration(), args[0], args[1]);
    AccumuloInputFormat.setInputInfo(job.getConfiguration(), args[2], args[3].getBytes(), args[4], new Authorizations());
      AccumuloInputFormat.fetchColumns(job.getConfiguration(), Collections.singleton(new Pair<Text,Text>(cf, cq)));","Remove this unused private ""debugQuery"" method."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/iterators/user/SummingArrayCombiner.java,      return sb.toString().getBytes();,"Remove this unused private ""appendProp"" method."
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/util/SystemPropUtil.java,"import org.apache.accumulo.fate.zookeeper.ZooUtil.NodeExistsPolicy;
import org.apache.accumulo.fate.zookeeper.ZooUtil.NodeMissingPolicy;","Remove this call to ""exit"" or ensure it is really required."
b73ac43e0f240e4ff78efbf9fbc2c95ae00e55ec,src/start/src/test/java/org/apache/accumulo/start/Test.java,"    String CONF_DIR = System.getenv(""ACCUMULO_HOME"") + ""/conf/"";
    String SITE_CONF = CONF_DIR + configFile;
        d = db.parse(new File(CONF_DIR + ""examples/512MB/standalone/"" + configFile));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/master/balancer/TableLoadBalancer.java,"    if (clazzName == null)
      clazzName = DefaultLoadBalancer.class.getName();
    if (tops == null)
      try {
        tops = HdfsZooInstance.getInstance().getConnector(SecurityConstants.getSystemCredentials()).tableOperations();
      } catch (AccumuloException e) {
        log.error(""Unable to access table operations from within table balancer"", e);
      } catch (AccumuloSecurityException e) {
        log.error(""Unable to access table operations from within table balancer"", e);
      }
    if (t == null)
      return minBalanceTime;
      if (tableBalanceTime < minBalanceTime)
        minBalanceTime = tableBalanceTime;","Remove this call to ""exit"" or ensure it is really required."
3be979b3598d87b498a5b02d380e5249fd73e10f,server/src/main/java/org/apache/accumulo/server/master/state/MetaDataTableScanner.java,      mdScanner.close();,"Remove this unused method parameter ""ex""."
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/client/mock/IteratorAdapter.java,"  
  SortedKeyValueIterator<Key,Value> inner;
  
  public IteratorAdapter(SortedKeyValueIterator<Key,Value> inner) {
    this.inner = inner;
  }
  
  @Override
  public boolean hasNext() {
    return inner.hasTop();
  }
  
  @Override
  public Entry<Key,Value> next() {
    try {
      Entry<Key,Value> result = new KeyValue(new Key(inner.getTopKey()), new Value(inner.getTopValue()).get());
      inner.next();
      return result;
    } catch (IOException ex) {
      throw new NoSuchElementException();
  }
  
  @Override
  public void remove() {
    throw new UnsupportedOperationException();
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
3be979b3598d87b498a5b02d380e5249fd73e10f,server/src/test/java/org/apache/accumulo/server/security/ZKAuthenticatorTest.java,"    byte[] test = ZKSecurityTool.convertAuthorizations(converted);
    Authorizations test2 = ZKSecurityTool.convertAuthorizations(test);
    Set<SystemPermission> converted = ZKSecurityTool.convertSystemPermissions(ZKSecurityTool.convertSystemPermissions(perms));
    Set<TablePermission> converted = ZKSecurityTool.convertTablePermissions(ZKSecurityTool.convertTablePermissions(perms));
      storedBytes = ZKSecurityTool.createPass(rawPass);
      assertTrue(ZKSecurityTool.checkPass(rawPass, storedBytes));","Remove this unused method parameter ""ex""."
a9efdd884330d37d46c0f8b9dc59cdce0a91c5f7,core/src/main/java/org/apache/accumulo/core/client/security/SecurityErrorCode.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.client.security;

/**
 * 
 */
public enum SecurityErrorCode {
  DEFAULT_SECURITY_ERROR,
  BAD_CREDENTIALS,
  PERMISSION_DENIED,
  USER_DOESNT_EXIST,
  CONNECTION_ERROR,
  USER_EXISTS,
  GRANT_INVALID,
  BAD_AUTHORIZATIONS,
  INVALID_INSTANCEID,
  TABLE_DOESNT_EXIST,
  UNSUPPORTED_OPERATION,
  INVALID_TOKEN,
  AUTHENTICATOR_FAILED,
  AUTHORIZOR_FAILED,
  PERMISSIONHANDLER_FAILED,
  TOKEN_EXPIRED,
  SERIALIZATION_ERROR,
  INSUFFICIENT_PROPERTIES;
}",Do not forget to remove this deprecated code someday.
a943f323b6ef9a614edee55c075eb63567b5c80a,server/src/main/java/org/apache/accumulo/server/master/tableOps/BulkImport.java,"import org.apache.accumulo.server.security.SystemCredentials;
              List<String> fail = client.bulkImportFiles(Tracer.traceInfo(), SystemCredentials.get().getAsThrift(), tid, tableId, attempt, errorDir, setTime);",Move this constructor to comply with Java Code Conventions.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/test/java/org/apache/accumulo/server/constraints/MetadataConstraintsTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/iterators/system/DeletingIterator.java,"    if (super.getTopKey().isDeleted())
      skipRowColumn();
    else
      getSource().next();","Remove this call to ""exit"" or ensure it is really required."
5c97efc2576278f4b8b6b004ded78c98251cda24,proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanState.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.accumulo.proxy.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

@SuppressWarnings(""all"") public enum ScanState implements org.apache.thrift.TEnum {
  IDLE(0),
  RUNNING(1),
  QUEUED(2);

  private final int value;

  private ScanState(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static ScanState findByValue(int value) { 
    switch (value) {
      case 0:
        return IDLE;
      case 1:
        return RUNNING;
      case 2:
        return QUEUED;
      default:
        return null;
    }
  }
}",Return empty string instead.
b8859513a7f9cec03d7af3f45c7516344798fe06,server/src/main/java/org/apache/accumulo/server/master/balancer/TabletBalancer.java,import org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException;,1 duplicated blocks of code must be removed.
8025e96e0b108063f3028eb06b78847de2fa95d4,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/query/Query.java,"package org.apache.accumulo.examples.wikisearch.query;
import org.apache.accumulo.examples.wikisearch.logic.ContentLogic;
import org.apache.accumulo.examples.wikisearch.logic.QueryLogic;
import org.apache.accumulo.examples.wikisearch.sample.Results;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/test/continuous/TimeBinner.java,"            if (data < mindw.d)
              mindw.d = data_min;
            if (data > maxdw.d)
              maxdw.d = data_max;","Remove this call to ""exit"" or ensure it is really required."
7942da1d204d271bff01e9e93208cdd67d0eefa3,core/src/test/java/org/apache/accumulo/core/client/mapred/AccumuloFileOutputFormatTest.java,"      AccumuloInputFormat.setConnectorInfo(job, user, new PasswordToken(pass));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
86066e645d2ebe86659fa699482ab1a523286bc5,src/core/src/test/java/org/apache/accumulo/core/data/MutationTest.java,"import junit.framework.TestCase;
",Replace all tab characters in this file by sequences of white-spaces.
5bd33fa1e9625e3c088ee39f626c256aca75b0da,examples/simple/src/main/java/org/apache/accumulo/examples/simple/shard/Reverse.java,"import org.apache.accumulo.core.client.BatchWriterConfig;
    BatchWriter bw = conn.createBatchWriter(outTable, new BatchWriterConfig());","Remove this unused method parameter ""e""."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServerConstants.java,"package org.apache.accumulo.server.tabletserver;

public class TabletServerConstants {

	public static final String IntermediateKeyName = ""IntermediateKey"";
	public static final String ColumnSetName = ""ColumnSet"";
	public static final String AuthorizationSetName = ""AuthorizationSet"";
	public static final String EndKeyName = ""EndKey"";
	public static final String MaxResultsName = ""MaxResults"";
	public static final String PreviousQueryTypeName = ""PreviousQueryType"";
	public static final String PreviousQueryStatusName = ""PreviousQueryStatus"";
}",Return empty string instead.
e511baa049c58509539ab7eb793c0da97c9d3ef6,core/src/main/java/org/apache/accumulo/core/iterators/LargeRowFilter.java,@Deprecated,Return empty string instead.
996803bed195567366ea9b90ec6b9f99b44a24ea,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/BasicServlet.java,"    sb.append(""<a href='/vis'>Server Activity</a><br />\n"");","Move the ""80"" string literal on the left side of this string comparison."
cb6bcc517b27df03106d7e5eca344ed45699e31f,src/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/LogCopyInfo.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ee3a264e704c17de90c186065f50a0775ce4ad10,src/server/src/main/java/org/apache/accumulo/server/upgrade/RunPreUpgradeCheck.java,"import org.apache.accumulo.server.zookeeper.IZooReaderWriter;
    IZooReaderWriter session = ZooReaderWriter.getInstance();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
612fd01c5340167328661e271e9c58656832cc68,server/src/main/java/org/apache/accumulo/server/master/state/MergeStats.java,"import org.apache.accumulo.core.data.PartialKey;
    if (extent.isMeta()) {
      // don't go off the root tablet
      range = new Range(new Key(first).followingKey(PartialKey.ROW), false, Constants.METADATA_ROOT_TABLET_KEYSPACE.getEndKey(), false);
    }
    log.debug(""Scanning range "" + range);
      log.debug(""consistency check: "" + tls + "" walogs "" + tls.walogs.size());
        log.debug(""failing consistency: needs to be chopped"" + tls.extent);
          log.debug(""failing consistency: prev row is too high "" + start);
        if (tls.getState(master.onlineTabletServers()) != TabletState.UNASSIGNED) {
          log.debug(""failing consistency: assigned or hosted "" + tls);
        }
        log.debug(""hole in !METADATA"");
    log.debug(""chopped "" + chopped + "" v.chopped "" + verify.chopped + 
        "" unassigned "" + unassigned + "" v.unassigned "" + verify.unassigned +
        "" verify.total "" + verify.total);","Use ""Integer.toString"" instead."
8a33be695e0bcb769412db499df9cbec23004740,server/src/main/java/org/apache/accumulo/server/util/RandomWriter.java,"import org.apache.accumulo.core.cli.BatchWriterOpts;
    BatchWriterOpts bwOpts = new BatchWriterOpts();
    opts.parseArgs(RandomWriter.class.getName(), args, bwOpts);
      BatchWriter bw = connector.createBatchWriter(opts.getTableName(), bwOpts.getBatchWriterConfig());","Remove this unused method parameter ""opts""."
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloFileOutputFormat.java," * 
  
  
   * 
  
   * 
  
   * 
   * 
  
   * 
  
   * 
  
   * 
  
    
    
    
      
      
        
        
  ",Replace all tab characters in this file by sequences of white-spaces.
f765888e3decac70571cf836e5300fb9a015b38e,core/src/main/java/org/apache/accumulo/core/client/admin/FindMax.java,"    // System.out.printf(""findMax(%s, %s, %s, %s)%n"", Key.toPrintableString(start.getBytes(), 0, start.getLength(), 1000), inclStart,",Use isEmpty() to check whether the collection is empty or not.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/master/thrift/MasterMonitorInfo.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */","Remove this unused private ""appendProp"" method."
63401308a8fc8ff7ad54afa3e8bb2d93e1971a74,server/src/main/java/org/apache/accumulo/server/tabletserver/Compactor.java,"import org.apache.accumulo.core.iterators.system.ColumnFamilySkippingIterator;
import org.apache.accumulo.core.iterators.SortedKeyValueIterator;
      ColumnFamilySkippingIterator cfsi = new ColumnFamilySkippingIterator(delIter);

      SortedKeyValueIterator<Key,Value> itr = iterEnv.getTopLevelIterator(IteratorUtil.loadIterators(env.getIteratorScope(), cfsi, extent, acuTableConf,","Use ""Integer.toString"" instead."
cb6bcc517b27df03106d7e5eca344ed45699e31f,src/core/src/main/java/org/apache/accumulo/core/data/thrift/TMutation.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/client/mock/MockScannerBase.java,"      if (topLevelIterators.isEmpty())
        return iter;","Remove this call to ""exit"" or ensure it is really required."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java," * A SortedKeyValueIterator that combines the Values for different versions (timestamps) of a Key into a single Value. Combiner will replace one or more versions of a Key
 * A combiner will not combine keys that differ by more than the timestamp.
      topKey = new Key(source.getTopKey());","Remove this unused private ""appendProp"" method."
d058d74769338929ff2d677ebbe671cdedffeaf1,test/src/main/java/org/apache/accumulo/test/TestIngest.java,"          if (e.getAuthorizationFailuresMap().size() > 0) {
            for (Entry<KeyExtent,Set<SecurityErrorCode>> entry : e.getAuthorizationFailuresMap().entrySet()) {","Remove the literal ""false"" boolean value."
c07e968e4f3e7164cfb3e94ca19f91d3a2e9b642,start/src/main/java/org/apache/accumulo/start/classloader/AccumuloClassLoader.java,"import java.util.Collections;
import java.util.Set;
import java.util.TreeSet;
  /* @formatter:off */
  /* @formatter:on */
  
  public static final String MAVEN_PROJECT_BASEDIR_PROPERTY_NAME = ""general.maven.project.basedir"";
  public static final String DEFAULT_MAVEN_PROJECT_BASEDIR_VALUE = """";
    for (String classpath : getMavenClasspaths())
      addUrl(classpath, urls);
  private static Set<String> getMavenClasspaths() {
    String baseDirname = AccumuloClassLoader.getAccumuloString(MAVEN_PROJECT_BASEDIR_PROPERTY_NAME, DEFAULT_MAVEN_PROJECT_BASEDIR_VALUE);
    if (baseDirname == null || baseDirname.trim().isEmpty())
      return Collections.emptySet();
    Set<String> paths = new TreeSet<String>();
    findMavenTargetClasses(paths, new File(baseDirname.trim()), 0);
    return paths;
  }
  
  private static void findMavenTargetClasses(Set<String> paths, File file, int depth) {
    if (depth > 3)
      return;
    if (file.isDirectory()) {
      File[] children = file.listFiles();
      for (File child : children)
        findMavenTargetClasses(paths, child, depth + 1);
    } else if (""pom.xml"".equals(file.getName())) {
      paths.add(file.getParentFile().getAbsolutePath() + File.separator + ""target"" + File.separator + ""classes"");
    }
  }
  ",1 duplicated blocks of code must be removed.
9dc244484b4d35859d4d22b27580a47ae7da0e1a,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchWriter.java,"  public void updateBinningStats(int count, long time, Map<String,TabletServerMutations<Mutation>> binnedMutations) {
  private synchronized void updateBatchStats(Map<String,TabletServerMutations<Mutation>> binnedMutations) {
    for (Entry<String,TabletServerMutations<Mutation>> entry : binnedMutations.entrySet()) {
      TabletServerMutations<Mutation> tsm = entry.getValue();
    synchronized void add(String location, TabletServerMutations<Mutation> tsm) {
    private Map<String,TabletServerMutations<Mutation>> serversMutations;
      serversMutations = new HashMap<String,TabletServerMutations<Mutation>>();
    private void binMutations(MutationSet mutationsToProcess, Map<String,TabletServerMutations<Mutation>> binnedMutations) {
      Map<String,TabletServerMutations<Mutation>> binnedMutations = new HashMap<String,TabletServerMutations<Mutation>>();
    private synchronized void addMutations(Map<String,TabletServerMutations<Mutation>> binnedMutations) {
      for (Entry<String,TabletServerMutations<Mutation>> entry : binnedMutations.entrySet()) {
        TabletServerMutations<Mutation> currentMutations = serversMutations.get(server);
    private synchronized TabletServerMutations<Mutation> getMutationsToSend(String server) {
      TabletServerMutations<Mutation> tsmuts = serversMutations.remove(server);
          TabletServerMutations<Mutation> tsmuts = getMutationsToSend(location);
      public void send(TabletServerMutations<Mutation> tsm) throws AccumuloServerException, AccumuloSecurityException {
      
      // TODO remove this",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/client/SequentialBatchWriter.java,package org.apache.accumulo.examples.simple.client;,2 duplicated blocks of code must be removed.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/MetaBlockAlreadyExists.java,"  /**
   * Constructor
   * 
   * @param s
   *          message.
   */
  MetaBlockAlreadyExists(String s) {
    super(s);
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bfc44fd328c471d06b480835ba826b706dcf6816,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReader.java,  private Authorizations authorizations = Authorizations.EMPTY;,"Remove this unused method parameter ""range""."
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,core/src/main/java/org/apache/accumulo/core/client/admin/InstanceOperationsImpl.java,"import org.apache.accumulo.core.security.thrift.Credentials;
import org.apache.accumulo.trace.instrument.Tracer;
  private Credentials credentials;
  public InstanceOperationsImpl(Instance instance, Credentials credentials) {
  /* (non-Javadoc)
   * @see org.apache.accumulo.core.client.admin.InstanceOperations#setProperty(java.lang.String, java.lang.String)
   */
        client.setSystemProperty(Tracer.traceInfo(), credentials, property, value);
  /* (non-Javadoc)
   * @see org.apache.accumulo.core.client.admin.InstanceOperations#removeProperty(java.lang.String)
   */
        client.removeSystemProperty(Tracer.traceInfo(), credentials, property);
  /* (non-Javadoc)
   * @see org.apache.accumulo.core.client.admin.InstanceOperations#getSystemConfiguration()
   */
  /* (non-Javadoc)
   * @see org.apache.accumulo.core.client.admin.InstanceOperations#getSiteConfiguration()
   */
  /* (non-Javadoc)
   * @see org.apache.accumulo.core.client.admin.InstanceOperations#getTabletServers()
   */
  
  /* (non-Javadoc)
   * @see org.apache.accumulo.core.client.admin.InstanceOperations#getActiveScans(java.lang.String)
   */
  
      for (org.apache.accumulo.core.tabletserver.thrift.ActiveScan activeScan : client.getActiveScans(Tracer.traceInfo(), credentials)) {
  /* (non-Javadoc)
   * @see org.apache.accumulo.core.client.admin.InstanceOperations#testClassLoad(java.lang.String, java.lang.String)
   */
  /*
   * (non-Javadoc)
   * 
   * @see org.apache.accumulo.core.client.admin.InstanceOperations#getActiveCompactions(java.lang.String)
   */
      for (org.apache.accumulo.core.tabletserver.thrift.ActiveCompaction activeCompaction : client.getActiveCompactions(Tracer.traceInfo(), credentials)) {
  /*
   * (non-Javadoc)
   * 
   * @see org.apache.accumulo.core.client.admin.InstanceOperations#ping(java.lang.String)
   */
      client.getTabletServerStatus(Tracer.traceInfo(), credentials);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/AddSplitsCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/security/SystemPermission.java,"  // One can add new permissions, with new numbers, but please don't change or use numbers previously assigned
  GRANT((byte) 0),
  CREATE_TABLE((byte) 1),
  DROP_TABLE((byte) 2),
  ALTER_TABLE((byte) 3),
  CREATE_USER((byte) 4),
  DROP_USER((byte) 5),
  ALTER_USER((byte) 6),
  SYSTEM((byte) 7);
  
  private byte permID;
  
  private static HashMap<Byte,SystemPermission> mapping;
  static {
    mapping = new HashMap<Byte,SystemPermission>(SystemPermission.values().length);
    for (SystemPermission perm : SystemPermission.values())
      mapping.put(perm.permID, perm);
  }
  
  private SystemPermission(byte id) {
    this.permID = id;
  }
  
  public byte getId() {
    return this.permID;
  }
  
  public static List<String> printableValues() {
    SystemPermission[] a = SystemPermission.values();
    List<String> list = new ArrayList<String>(a.length);
    for (SystemPermission p : a)
      list.add(""System."" + p);
    return list;
  }
  
  public static SystemPermission getPermissionById(byte id) {
    if (mapping.containsKey(id)) return mapping.get(id);
    throw new IndexOutOfBoundsException(""No such permission"");
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
af59f0ad10af71de2f7de9880a1dbe1595956cc5,server/src/test/java/org/apache/accumulo/server/master/TestMergeState.java,import org.apache.accumulo.core.security.tokens.PasswordToken;,1 duplicated blocks of code must be removed.
99da5641c28784c7b717cce6749673863c2ec8cf,server/src/main/java/org/apache/accumulo/server/trace/TraceFileSystem.java,  @Deprecated,"Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/trace/src/test/java/cloudtrace/instrument/PerformanceTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
446a37a9795f2df7adc841154ca05add79cf286e,server/src/main/java/org/apache/accumulo/server/util/Admin.java,import org.apache.accumulo.core.metadata.MetadataTable;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
3dee665c59730f298fa71cba720c5db2c285c4cf,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/filedata/ChunkInputFormat.java," * An InputFormat that turns the file data ingested with {@link FileDataIngest} into an InputStream using {@link ChunkInputStream}. Mappers used with this
 * InputFormat must close the InputStream.",1 duplicated blocks of code must be removed.
5939c271058774a087f29c1818b43fde75c57318,proxy/src/test/java/org/apache/accumulo/proxy/SimpleTest.java,import org.apache.accumulo.server.mini.MiniAccumuloCluster;,Either log or rethrow this exception.
9cc068dd87d479bbc6f1445e9003b02682144751,core/src/test/java/org/apache/accumulo/core/client/lexicoder/IntegerLexicoderTest.java,"/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.client.lexicoder;

public class IntegerLexicoderTest extends LexicoderTest {
  public void testSortOrder() {
    assertSortOrder(new IntegerLexicoder(), Integer.MIN_VALUE, 0xff123456, 0xffff3456, 0xffffff56, -1, 0, 1, 0x12, 0x1234, 0x123456, 0x1234678,
        Integer.MAX_VALUE);
  }
}",Rename this generic name to match the regular expression '^[A-Z]$'.
ee3a264e704c17de90c186065f50a0775ce4ad10,src/server/src/main/java/org/apache/accumulo/server/master/state/tables/TableManager.java,"import org.apache.accumulo.server.zookeeper.IZooReaderWriter;
    IZooReaderWriter zoo = ZooReaderWriter.getInstance();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a63607a89356ef85af81e377b289fafe413687c5,core/src/main/java/org/apache/accumulo/core/util/ThriftUtil.java,"import org.apache.accumulo.cloudtrace.instrument.Span;
import org.apache.accumulo.cloudtrace.instrument.Trace;
import org.apache.thrift.TException;
import org.apache.thrift.protocol.TMessage;
import org.apache.thrift.protocol.TProtocol;

  public static class TraceProtocol extends TCompactProtocol {

    @Override
    public void writeMessageBegin(TMessage message) throws TException {
      Trace.start(""client:"" + message.name);
      super.writeMessageBegin(message);
    }

    @Override
    public void writeMessageEnd() throws TException {
      super.writeMessageEnd();
      Span currentTrace = Trace.currentTrace();
      if (currentTrace != null)
        currentTrace.stop();
    }

    public TraceProtocol(TTransport transport) {
      super(transport);
    }
  }
  
  public static class TraceProtocolFactory extends TCompactProtocol.Factory {
    private static final long serialVersionUID = 1L;

    @Override
    public TProtocol getProtocol(TTransport trans) {
      return new TraceProtocol(trans);
    }
  }
  static private TProtocolFactory protocolFactory = new TraceProtocolFactory();
    return factory.getClient(protocolFactory.getProtocol(transport), protocolFactory.getProtocol(transport));
  static public void returnClient(TServiceClient iface) { // Eew... the typing here is horrible
      ThriftTransportPool.getInstance().returnTransport(iface.getInputProtocol().getTransport());
  static public TabletClientService.Client getTServerClient(String address, AccumuloConfiguration conf) throws TTransportException {
  public static void execute(String address, AccumuloConfiguration conf, ClientExec<TabletClientService.Client> exec) throws AccumuloException,
      TabletClientService.Client client = null;
  public static <T> T execute(String address, AccumuloConfiguration conf, ClientExecReturn<T,TabletClientService.Client> exec) throws AccumuloException,
      TabletClientService.Client client = null;","Immediately return this expression instead of assigning it to the temporary variable ""client""."
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/client/mapreduce/lib/util/OutputConfigurator.java,"  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
   * 
  
   * 
  
   * 
   * 
  
   * 
  ",Replace all tab characters in this file by sequences of white-spaces.
604382ebc3be76dac9eb18bb5a8485bfd2aede07,server/src/main/java/org/apache/accumulo/server/util/FileSystemMonitor.java,"    try {
    } finally {
      br.close();
    }","Remove this unused method parameter ""tservers""."
98fc95216ce9d59ebfba0774d119421e3e00ea0c,start/src/test/java/org/apache/accumulo/start/MainTest.java,"import static org.easymock.EasyMock.createMock;
import static org.easymock.EasyMock.expect;
import static org.easymock.EasyMock.replay;
import static org.junit.Assert.assertEquals;


import org.easymock.EasyMock;
  private static final Class<?> MAIN_CLASS = String.class; // arbitrary

  @Before
  public void setUp() {

  @Test
  public void testLoadClassFromJar_ExplicitMainClass() throws Exception {
    String[] args = {""jar"", ""the.jar"", ""main.class"", ""arg1"", ""arg2""};
    EasyMock.<Class<?>> expect(cl.loadClass(""main.class"")).andReturn(MAIN_CLASS);

  @Test
  public void testLoadClassFromJar_ManifestMainClass() throws Exception {
    String[] args = {""jar"", ""the.jar"", ""arg1"", ""arg2""};
    EasyMock.<Class<?>> expect(cl.loadClass(MAIN_CLASS_NAME)).andReturn(MAIN_CLASS);

  @Test(expected = ClassNotFoundException.class)
    String[] args = {""jar"", ""the.jar"", ""arg1"", ""arg2""};

  @Test(expected = ClassNotFoundException.class)
    String[] args = {""jar"", ""the.jar""};
  @Test(expected = ClassNotFoundException.class)
    String[] args = {""jar"", ""the.jar"", ""main.class"", ""arg1"", ""arg2""};

  @Test(expected = ClassNotFoundException.class)
    String[] args = {""jar"", ""the.jar"", ""arg1"", ""arg2""};
  private void mockManifestMainClass(JarFile f, String mainClassName) throws Exception {",Define and throw a dedicated exception instead of using a generic one.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/multitable/MultiTableFixture.java,"package org.apache.accumulo.test.randomwalk.multitable;
import org.apache.accumulo.test.randomwalk.Fixture;
import org.apache.accumulo.test.randomwalk.State;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/util/TServerUtils.java,"  public static final ThreadLocal<String> clientAddress = new ThreadLocal<String>();
      Property minThreadProperty, 
      Property timeBetweenThreadChecksProperty, 
      Property maxMessageSizeProperty) throws UnknownHostException {
    long maxMessageSize = 10 * 1000 * 1000;
    if (maxMessageSizeProperty != null)
      maxMessageSize = conf.getMemoryInBytes(maxMessageSizeProperty);
          return TServerUtils.startTServer(port, processor, serverName, threadName, minThreads, timeBetweenThreadChecks, maxMessageSize);
      long timeBetweenThreadChecks, long maxMessageSize) throws TTransportException {
          int larger = pool.getCorePoolSize() + Math.min(pool.getQueue().size(), 2);
  public static ServerPort startTServer(int port, TProcessor processor, String serverName, String threadName, int numThreads, long timeBetweenThreadChecks, long maxMessageSize)
    ServerPort result = startHsHaServer(port, processor, serverName, threadName, numThreads, timeBetweenThreadChecks, maxMessageSize);","Remove this unused private ""appendProp"" method."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,contrib/accumulo_sample/query/src/main/java/iterator/OptimizedQueryIterator.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
1d138a73ad757c12b3d30aa1a6029b63cc3eaa66,test/src/main/java/org/apache/accumulo/test/randomwalk/security/WalkingSecurity.java,"import org.apache.accumulo.core.security.tokens.PasswordToken;
import org.apache.accumulo.core.security.tokens.SecurityToken;",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/examples/src/main/java/org/apache/accumulo/examples/filedata/ChunkInputStream.java,"    if (source != null)
      throw new RuntimeException(""setting new source without closing old one"");
      if (!source.hasNext())
        return;
      if (gotEndMarker)
        return count = pos = 0;
      else
        throw new IOException(""no end chunk marker but source has no data"");
      if (gotEndMarker)
        return -1;
    if (!currentVis.contains(thisKey.getColumnVisibility()))
      currentVis.add(thisKey.getColumnVisibility());
    if (source != null)
      throw new RuntimeException(""don't get visibilities before chunks have been completely read"");
    if (source == null)
      return -1;
        if (source != null && source.hasNext())
          log.debug(""next key: "" + source.peek().getKey());
          if (source != null && source.hasNext())
            log.debug(""next key: "" + source.peek().getKey());","Remove this call to ""exit"" or ensure it is really required."
052068601041f9d97a882ef3db0cc99f46cbf38a,server/src/main/java/org/apache/accumulo/server/master/tableOps/ImportTable.java,"              if (newName == null) {
                throw new ThriftTableOperationException(tableInfo.tableId, tableInfo.tableName, TableOperation.IMPORT, TableOperationExceptionType.OTHER,
                    ""File "" + oldName + "" does not exist in import dir"");
              }
",Either log or rethrow this exception.
75202271ee82e1149c0140915f6389621be8271c,src/core/src/main/java/org/apache/accumulo/core/client/admin/InstanceOperations.java,"import org.apache.accumulo.core.zookeeper.ZooLock;
import org.apache.log4j.Logger;
import org.apache.thrift.TApplicationException;
import org.apache.thrift.TException;
import org.apache.thrift.TServiceClient;
import org.apache.thrift.transport.TTransportException;
  private static final Logger log = Logger.getLogger(InstanceOperations.class);
      try {
        byte[] data = ZooLock.getLockData(cache, path + ""/"" + candidate);
        if (data != null && !""master"".equals(new String(data))) {
          results.add(candidate);
        }
      } catch (Exception ex) {
        log.error(""Unable to read lock data:"" + path);",Either log or rethrow this exception.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/AboutCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/gc/GarbageCollectWriteAheadLogs.java,"        if (fileToServerMap.remove(filename) != null)
          status.currentLog.inUse++;","Remove this call to ""exit"" or ensure it is really required."
1d138a73ad757c12b3d30aa1a6029b63cc3eaa66,server/src/main/java/org/apache/accumulo/server/security/SecurityConstants.java,"import org.apache.accumulo.core.security.tokens.PasswordToken;
import org.apache.accumulo.core.security.tokens.SecurityToken;",Replace all tab characters in this file by sequences of white-spaces.
ae7e1ce055e1990d2da37d50d06449f3f88b86e6,core/src/main/java/org/apache/accumulo/core/util/shell/commands/ConfigCommand.java,"      if (!(p.getKey().endsWith(""."")) && !p.isExperimental()) {",Replace all tab characters in this file by sequences of white-spaces.
48e331cc2d55a37421b5dd7bbb45e91657ea811f,test/src/main/java/org/apache/accumulo/test/functional/FunctionalTest.java,    Collection<Text> splits = getConnector().tableOperations().listSplits(table);,Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/CheckPermission.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
public class CheckPermission extends Test {
    
    @Override
    public void visit(State state, Properties props) throws Exception {
        Connector conn = state.getConnector();
        
        
        
        List<String> tableNames = (List<String>) state.get(""tables"");
        
            if (rand.nextBoolean()) {
                log.debug(""Checking systerm permission "" + userName);
                conn.securityOperations().hasSystemPermission(userName, SystemPermission.values()[rand.nextInt(SystemPermission.values().length)]);
            } else {
                log.debug(""Checking table permission "" + userName + "" "" + tableName);
                conn.securityOperations().hasTablePermission(userName, tableName, TablePermission.values()[rand.nextInt(TablePermission.values().length)]);
            
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/monitor/util/celltypes/TableStateType.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    @Override
    public String alignment() {
        return ""center"";
    }
    
    @Override
    public String format(Object obj) {
        TableState state = obj == null ? TableState.UNKNOWN : (TableState) obj;
        String style = null;
        switch (state) {
            case ONLINE:
                break;
            case NEW:
            case DELETING:
                style = ""warning"";
                break;
            case OFFLINE:
            case UNKNOWN:
            default:
                style = ""error"";
        }
        style = style != null ? "" class='"" + style + ""'"" : """";
        return String.format(""<span%s>%s</span>"", style, state);
    }
    
    @Override
    public int compare(TableState o1, TableState o2) {
        if (o1 == null && o2 == null) return 0;
        else if (o1 == null) return -1;
        return o1.compareTo(o2);
    }
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2a73cbcddcd21f5730ba0a5c2f32072fa7243951,src/core/src/test/java/org/apache/accumulo/core/iterators/user/IntersectingIteratorTest.java,"package org.apache.accumulo.core.iterators.user;
import java.util.Collections;
import java.util.Iterator;
import java.util.Map.Entry;
import junit.framework.Assert;
import org.apache.accumulo.core.Constants;
import org.apache.accumulo.core.client.BatchScanner;
import org.apache.accumulo.core.client.BatchWriter;
import org.apache.accumulo.core.client.Connector;
import org.apache.accumulo.core.client.mock.MockInstance;
import org.apache.accumulo.core.data.Mutation;
import org.apache.accumulo.core.iterators.DefaultIteratorEnvironment;
import org.apache.accumulo.core.iterators.IteratorEnvironment;
import org.apache.accumulo.core.iterators.SortedKeyValueIterator;
import org.apache.accumulo.core.iterators.SortedMapIterator;
  
  public void testWithBatchScanner() throws Exception {
    Value empty = new Value(new byte[] {});
    MockInstance inst = new MockInstance(""mockabye"");
    Connector connector = inst.getConnector(""user"", ""pass"");
    connector.tableOperations().create(""index"");
    BatchWriter bw = connector.createBatchWriter(""index"", 1000, 1000, 1);
    Mutation m = new Mutation(""000012"");
    m.put(""rvy"", ""5000000000000000"", empty);
    m.put(""15qh"", ""5000000000000000"", empty);
    bw.addMutation(m);
    bw.close();
    
    BatchScanner bs = connector.createBatchScanner(""index"", Constants.NO_AUTHS, 10);
    IteratorSetting ii = new IteratorSetting(20, IntersectingIterator.class);
    IntersectingIterator.setColumnFamilies(ii, new Text[] {new Text(""rvy""), new Text(""15qh"")});
    bs.addScanIterator(ii);
    bs.setRanges(Collections.singleton(new Range()));
    Iterator<Entry<Key,Value>> iterator = bs.iterator();
    Assert.assertTrue(iterator.hasNext());
    Entry<Key,Value> next = iterator.next();
    Key key = next.getKey();
    Assert.assertEquals(key.getColumnQualifier(), new Text(""5000000000000000""));
    Assert.assertFalse(iterator.hasNext());
  }",Either log or rethrow this exception.
e7855b8477694d120f228f2b2747e72a826c52c4,test/src/test/java/org/apache/accumulo/test/functional/RestartIT.java,"  @Test(timeout = 2 * 60 * 1000)
  public void killedTabletServer2() throws Exception {
    Connector c = getConnector();
    c.tableOperations().create(""t"");
    List<ProcessReference> procs = new ArrayList<ProcessReference>(cluster.getProcesses().get(ServerType.TABLET_SERVER));
    for (ProcessReference tserver : procs) {
      cluster.killProcess(ServerType.TABLET_SERVER, tserver);
    }
    cluster.start();
    c.tableOperations().create(""tt"");
  }
","Rename the ""log"" logger to comply with the format ""LOG(?:GER)?""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/functional/DeleteRowsTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/start/src/main/java/org/apache/accumulo/start/classloader/AccumuloClassLoader.java,"      if (userDir == null)
        throw new RuntimeException(""Property user.dir is not set"");
    if (null != envJars && !envJars.equals(""""))
      cp = cp.append("","").append(envJars);
    if (null != envJars && !envJars.equals(""""))
      cp = cp.append("","").append(envJars);
        if (classpath.length() == 0)
          continue;
          if (extDir.isDirectory())
            urls.add(extDir.toURI().toURL());
        if (!f.isDirectory())
          f = f.getParentFile();
    if (cp == null)
      return new ArrayList<URL>();
    if (classpath.length() == 0)
      return;
      if (extDir.isDirectory())
        urls.add(extDir.toURI().toURL());
    return getAccumuloString(CLASSPATH_PROPERTY_NAME, ACCUMULO_CLASSPATH_VALUE);
   * Looks for the site configuration file for Accumulo and if it has a property for propertyName return it otherwise returns defaultValue Should throw an
   * exception if the default configuration can not be read;
   * @param propertyName
   *          Name of the property to pull
   * @param defaultValue
   *          Value to default to if not found.
  
      if (site_classpath_string != null)
        return site_classpath_string;
   * Parses and XML Document for a property node for a <name> with the value propertyName if it finds one the function return that property's value for its
   * <value> node. If not found the function will return null
   * @param propertyName
          if (null == parent)
            parent = getAccumuloClassLoader();","Remove this call to ""exit"" or ensure it is really required."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/iterators/user/TimestampFilter.java,"import java.text.ParseException;
  private static final String LONG_PREFIX = ""LONG"";
      if (hasStart) {
        String s = options.get(START);
        if (s.startsWith(LONG_PREFIX))
          start = Long.valueOf(s.substring(LONG_PREFIX.length()));
        else
          start = dateParser.parse(s).getTime();
      }
      if (hasEnd) {
        String s = options.get(END);
        if (s.startsWith(LONG_PREFIX))
          end = Long.valueOf(s.substring(LONG_PREFIX.length()));
        else
          end = dateParser.parse(s).getTime();
      }
    io.addNamedOption(""start"", ""start timestamp (yyyyMMddHHmmssz or LONG<longstring>)"");
    io.addNamedOption(""end"", ""end timestamp (yyyyMMddHHmmssz or LONG<longstring>)"");
    boolean hasStart = false;
    boolean hasEnd = false;
      if (options.containsKey(START)) {
        hasStart = true;
        String s = options.get(START);
        if (s.startsWith(LONG_PREFIX))
          Long.valueOf(s.substring(LONG_PREFIX.length()));
        else
          dateParser.parse(s);
      }
      if (options.containsKey(END)) {
        hasEnd = true;
        String s = options.get(END);
        if (s.startsWith(LONG_PREFIX))
          Long.valueOf(s.substring(LONG_PREFIX.length()));
        else
          dateParser.parse(s);
      }
      if (!hasStart && !hasEnd)
        return false;
    SimpleDateFormat dateParser = initDateParser();
    try {
      long startTS = dateParser.parse(start).getTime();
      setStart(is, startTS, startInclusive);
    } catch (ParseException e) {
      throw new IllegalArgumentException(""couldn't parse "" + start);
    }
    SimpleDateFormat dateParser = initDateParser();
    try {
      long endTS = dateParser.parse(end).getTime();
      setEnd(is, endTS, endInclusive);
    } catch (ParseException e) {
      throw new IllegalArgumentException(""couldn't parse "" + end);
    }
    is.addOption(START, LONG_PREFIX + Long.toString(start));
    is.addOption(END, LONG_PREFIX + Long.toString(end));","Remove this unused private ""appendProp"" method."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/client/BatchScanner.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.client;

import java.util.Collection;

import org.apache.accumulo.core.data.Range;

/**
 * Implementations of BatchScanner support efficient lookups of many ranges in accumulo.
 * 
 * Use this when looking up lots of ranges and you expect each range to contain a small amount of data. Also only use this when you do not care about the
 * returned data being in sorted order.
 * 
 * If you want to lookup a few ranges and expect those ranges to contain a lot of data, then use the Scanner instead. Also, the Scanner will return data in
 * sorted order, this will not.
 */

public interface BatchScanner extends ScannerBase {
    
    /**
     * Allows scanning over multiple ranges efficiently.
     * 
     * @param ranges
     *            specifies the non-overlapping ranges to query
     */
    void setRanges(Collection<Range> ranges);
    
    /**
     * Cleans up and finalizes the scanner
     */
    void close();
}",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/master/state/tables/TableManager.java,"    if (tableManager == null)
      tableManager = new TableManager();
          if (oldData != null)
            oldState = TableState.valueOf(new String(oldData));
          if (!transition)
            throw new IllegalTableTransitionException(oldState, newState);
        if (zooStateCache.get(ZooUtil.getRoot(instance) + Constants.ZTABLES + ""/"" + tableId + Constants.ZTABLE_STATE) != null)
          updateTableStateCache(tableId);
      if (log.isTraceEnabled())
        log.trace(event);
          if (Constants.ZTABLE_STATE.equals(""/"" + sa[1]))
            tableId = sa[0];
                  .equals(tablesPrefix + ""/"" + tableId + Constants.ZTABLE_NAME)))
            tableStateCache.remove(tableId);
              if (log.isTraceEnabled())
                log.trace(""Session expired "" + event);
              if (log.isTraceEnabled())
                log.trace(""Ignored "" + event);","Remove this call to ""exit"" or ensure it is really required."
7942da1d204d271bff01e9e93208cdd67d0eefa3,core/src/main/java/org/apache/accumulo/core/security/handler/Authenticator.java,"import org.apache.accumulo.core.security.tokens.AuthenticationToken;
  public AuthenticationToken login(Properties properties) throws AccumuloSecurityException;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ccaad172643805d56f5dd46cbbc7dcd1a5519cbf,src/server/src/main/java/org/apache/accumulo/server/master/tableOps/TraceRepo.java,"import org.apache.accumulo.cloudtrace.instrument.Span;
import org.apache.accumulo.cloudtrace.instrument.Trace;
import org.apache.accumulo.cloudtrace.instrument.Tracer;
import org.apache.accumulo.cloudtrace.thrift.TInfo;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
868ef44a281f781313ac959d0eb9ef5ccabb900f,test/src/test/java/org/apache/accumulo/test/functional/LateLastContactIT.java,  @Test(timeout=60*1000),Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
0be23a82c282a6d3166729adf116877afab624d2,src/server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousVerify.java,"    AccumuloInputFormat.setInputInfo(job.getConfiguration(), user, pass.getBytes(), table, new Authorizations());
    AccumuloInputFormat.setZooKeeperInstance(job.getConfiguration(), instance, zookeepers);
      AccumuloInputFormat.setRanges(job.getConfiguration(), ranges);
      AccumuloInputFormat.disableAutoAdjustRanges(job.getConfiguration());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b651adf29c5e8419e153616a2cbf6f7bdf75cf92,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ListIterCommand.java,"          for (Entry<String,String> optEntry : setting.getOptions().entrySet()) {",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
c4685380483148028f62b429abd4098cc0b79bdd,src/server/src/main/java/org/apache/accumulo/server/gc/SimpleGarbageCollector.java,"  SortedSet<String> getCandidates() throws Exception {
    Scanner scanner = instance.getConnector(credentials).createScanner(Constants.METADATA_TABLE_NAME, Constants.NO_AUTHS);
","Immediately return this expression instead of assigning it to the temporary variable ""result""."
069fb1afd18a86631a82ce89dca9c5ca06a9646e,core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsImpl.java,"  private Path checkPath(String dir, String kind, String type) throws IOException, AccumuloException {
    Path ret;
    FileSystem fs;

    if (dir.contains("":"")) {
      ret = new Path(dir);
      fs = ret.getFileSystem(CachedConfiguration.getInstance());
    } else {
      fs = FileUtil.getFileSystem(CachedConfiguration.getInstance(), instance.getConfiguration());
      ret = fs.makeQualified(new Path(dir));
    }

    if (!fs.exists(ret))
      throw new AccumuloException(kind + "" import "" + type + "" directory "" + dir + "" does not exist!"");

    if (!fs.getFileStatus(ret).isDir()) {
      throw new AccumuloException(kind + "" import "" + type + "" directory "" + dir + "" is not a directory!"");
    }

    if (type.equals(""failure"")) {
      FileStatus[] listStatus = fs.listStatus(ret);
      if (listStatus != null && listStatus.length != 0) {
        throw new AccumuloException(""Bulk import failure directory "" + ret + "" is not empty"");
      }
    }

    return ret;
  }

    Path dirPath = checkPath(dir, ""Bulk"", """");
    Path failPath = checkPath(failureDir, ""Bulk"", ""failure"");

      importDir = checkPath(importDir, ""Table"", """").toString();
    } catch (IOException e) {
      throw new AccumuloException(e);
    }

    try {
      FileSystem fs = new Path(importDir).getFileSystem(CachedConfiguration.getInstance());","Introduce a new variable instead of reusing the parameter ""importDir""."
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/scalability/Run.java,"package org.apache.accumulo.test.scalability;
import org.apache.accumulo.test.scalability.ScaleTest;
    ScaleTest test = (ScaleTest) Class.forName(String.format(""accumulo.test.scalability.%s"", opts.testId)).newInstance();","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/client/impl/TabletType.java,"  ROOT, METADATA, USER;
  
  public static TabletType type(KeyExtent ke) {
    if (ke.equals(Constants.ROOT_TABLET_EXTENT)) return ROOT;
    if (ke.getTableId().toString().equals(Constants.METADATA_TABLE_ID)) return METADATA;
    return USER;
  }
  
  public static TabletType type(Collection<KeyExtent> extents) {
    if (extents.size() == 0) throw new IllegalArgumentException();
    TabletType ttype = null;
    for (KeyExtent extent : extents) {
      if (ttype == null) ttype = type(extent);
      else if (ttype != type(extent)) throw new IllegalArgumentException(""multiple extent types not allowed "" + ttype + "" "" + type(extent));
    
    return ttype;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
4c360048c5e62a8c7b22d1038bd64a819dba38e9,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/SetIterCommand.java,"import org.apache.accumulo.core.iterators.user.ReqVisFilter;
    IteratorSetting setting = new IteratorSetting(priority, name, classname, options);
    shellState.getConnector().tableOperations().attachIterator(tableName, setting, scopes);","Remove this unused method parameter ""table""."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/security/VisibilityInterpreterFactory.java,"package org.apache.accumulo.core.security;

import org.apache.accumulo.core.security.Authorizations;
import org.apache.accumulo.core.security.ColumnVisibility;

public class VisibilityInterpreterFactory
{
    private static VisibilityInterpreter interpreter = null;
    
    public static VisibilityInterpreter create ()
    {
        if (interpreter == null)
        {
            throw new IllegalStateException (""ColumnVisibilityInterpreterFactory is not configured:  Interpreter is null"");
        }
        return interpreter.create();
    }
    
    public static VisibilityInterpreter create (ColumnVisibility cv, Authorizations authorizations)
    {
        if (interpreter == null)
        {
            throw new IllegalStateException (""ColumnVisibilityInterpreterFactory is not configured:  Interpreter is null"");
        }
        return interpreter.create(cv, authorizations);
    }
    
    public static void setInterpreter (VisibilityInterpreter interpreter)
    {
        VisibilityInterpreterFactory.interpreter = interpreter;
    }
}",Return empty string instead.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/test/java/org/apache/accumulo/core/client/mapreduce/AccumuloFileOutputFormatTest.java,"    
    Path file = new Path(System.getenv(""ACCUMULO_HOME"") + ""/target/"");
    f = new Path(file, ""_temporary"");
  public void teardown() throws IOException {
    if (f != null && f.getFileSystem(job.getConfiguration()).exists(f)) {
  
    RecordWriter<Key,Value> rw = afof.getRecordWriter(tac);","Remove this call to ""exit"" or ensure it is really required."
d25d1fe2436f530e6084da16c97626f64de8ce8c,core/src/main/java/org/apache/accumulo/core/data/Value.java,"  @Override
  @Override
  @Override
    return new String(get(), Constants.UTF8);","Make the ""audit"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/trace/src/main/java/cloudtrace/instrument/impl/MilliSpan.java,"    if (start > 0)
      throw new IllegalStateException(""Span for "" + description + "" has already been started"");
    if (start == 0)
      throw new IllegalStateException(""Span for "" + description + "" has not been started"");
    if (start == 0)
      return 0;
    if (stop > 0)
      return stop - start;
    if (parent == null)
      return -1;
    if (traceInfo == null)
      traceInfo = new HashMap<String,String>();
    if (traceInfo == null)
      return Collections.emptyMap();","Remove this call to ""exit"" or ensure it is really required."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ExecfileCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/RenameTable.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    @Override
    public void visit(State state, Properties props) throws Exception {
        Connector conn = state.getConnector();
        
        Random rand = (Random) state.get(""rand"");
        
        @SuppressWarnings(""unchecked"")
        List<String> tableNames = (List<String>) state.get(""tables"");
        
        String srcTableName = tableNames.get(rand.nextInt(tableNames.size()));
        String newTableName = tableNames.get(rand.nextInt(tableNames.size()));
        
        try {
            conn.tableOperations().rename(srcTableName, newTableName);
            log.debug(""Renamed table "" + srcTableName + "" "" + newTableName);
        } catch (TableExistsException e) {
            log.debug(""Rename "" + srcTableName + "" failed, "" + newTableName + "" exist"");
        } catch (TableNotFoundException e) {
            log.debug(""Rename "" + srcTableName + "" failed, doesnt exist"");
        }
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f9506d2552d0e75939b6d67be8c3496b2e734098,core/src/main/java/org/apache/accumulo/core/data/Value.java,"/*
package org.apache.accumulo.core.data;",Replace all tab characters in this file by sequences of white-spaces.
773d9dcba1c3292711b7682bef22136b87c5fb1c,src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsImpl.java,"import org.apache.accumulo.core.client.TableDeletedException;
    String tableId = Tables.getTableId(instance, tableName);
    TabletLocator tl = TabletLocator.getInstance(instance, credentials, new Text(tableId));
      if (!Tables.exists(instance, tableId))
        throw new TableDeletedException(tableId);
      if (Tables.getTableState(instance, tableId) == TableState.OFFLINE)
        throw new TableOfflineException(instance, tableId);

      binnedRanges.clear();","Remove this unused method parameter ""extent""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java,"    if (table == null)
      throw new TableNotFoundException(tableName, tableName, ""no such table"");","Remove this call to ""exit"" or ensure it is really required."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/test/java/org/apache/accumulo/core/client/mock/MockConnectorTest.java,"import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
    c.securityOperations().createUser(""greg"", new byte[] {});
    assertTrue(c.securityOperations().getUserAuthorizations(""greg"").isEmpty());
    c.securityOperations().changeUserAuthorizations(""greg"", new Authorizations(""A"".getBytes()));
    assertEquals(mockInstance, mockInstance.getConnector(""foo"", ""bar"").getInstance());
    assertEquals(name, mockInstance.getConnector(""foo"",""bar"").getInstance().getInstanceName());","Remove this unused private ""appendProp"" method."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/problems/ProblemType.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
421745a7d4c02ef1bf2a5e1e1c5125d2ce822f72,core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java,"   * @deprecated since 1.5.0; use {@link #listSplits(String, int)} instead.",Either log or rethrow this exception.
5bd33fa1e9625e3c088ee39f626c256aca75b0da,server/src/main/java/org/apache/accumulo/server/test/functional/DeleteRowsSplitTest.java,"import org.apache.accumulo.core.client.BatchWriterConfig;
    BatchWriter bw = getConnector().createBatchWriter(TABLE, new BatchWriterConfig());","Remove this unused method parameter ""e""."
e79adf2ed1c0b644963381f58bb1b0e7f750b845,core/src/main/java/org/apache/accumulo/core/util/AddressUtil.java,"    address = address.replace('+', ':');","Introduce a new variable instead of reusing the parameter ""address""."
93773813e5839ac9ffb4f5a2b2b70bcedb106286,core/src/main/java/org/apache/accumulo/core/client/mock/MockAccumulo.java,"import org.apache.accumulo.core.util.MetadataTable;
    createTable(""root"", MetadataTable.NAME, true, TimeType.LOGICAL);","Use ""Long.toString"" instead."
c8b5f1755c0563e93f21036ecf88da37b567aa74,core/src/main/java/org/apache/accumulo/core/util/shell/commands/UsersCommand.java,"  public int execute(final String fullCommand, final CommandLine cl, final Shell shellState) throws AccumuloException, AccumuloSecurityException, IOException {
    for (String user : shellState.getConnector().securityOperations().listUsers()) {
    }",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
86066e645d2ebe86659fa699482ab1a523286bc5,src/core/src/main/java/org/apache/accumulo/core/conf/DefaultConfiguration.java,import java.util.TreeMap;,Replace all tab characters in this file by sequences of white-spaces.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/parser/RangeCalculator.java,"package org.apache.accumulo.examples.wikisearch.parser;
import org.apache.accumulo.examples.wikisearch.iterator.EvaluatingIterator;
import org.apache.accumulo.examples.wikisearch.logic.AbstractQueryLogic;
import org.apache.accumulo.examples.wikisearch.normalizer.Normalizer;
import org.apache.accumulo.examples.wikisearch.protobuf.Uid;
import org.apache.accumulo.examples.wikisearch.util.TextUtil;","Rename ""table"" which hides the field declared at line 107."
f8cd6259c11999392c5068d312c97a05f0586cf6,core/src/main/java/org/apache/accumulo/core/client/TimedOutException.java, * @since 1.5.0,Move this constructor to comply with Java Code Conventions.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/trace/ShowTrace.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    
        if (id == null) return ""No trace id specified"";
    
    public void pageBody(HttpServletRequest req, HttpServletResponse resp, final StringBuilder sb) throws Exception {
        for (Entry<Key,Value> entry : scanner) {
        
                sb.append(String.format(""<td style='text-indent: %dpx'>%s@%s</td>\n"", level * 5, node.svc, node.sender));
                if (hasData) sb.append(""<td><input type='checkbox' onclick='toggle(\"""" + Long.toHexString(node.spanId) + ""\"")'></td>\n"");
                else sb.append(""<td></td>\n"");
                for (Entry<String,String> entry : node.data.entrySet()) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
9d293dda5e4d6d105a7600c7b605813ef54744e9,src/server/src/main/java/org/apache/accumulo/server/logger/LogService.java,"import org.apache.accumulo.server.security.SecurityUtil;
    SecurityUtil.serverLogin();
",Move this variable to comply with Java Code Conventions.
24cf3d7644ff44f67fe48e5a3993e5aed73d93e8,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/bulk/BulkPlusOne.java,"    fs.delete(fail, true);",Either log or rethrow this exception.
d9ab84498cad5ee70eee3d337224b3d5ca7ab0db,core/src/main/java/org/apache/accumulo/core/client/mock/MockConnector.java,"import org.apache.accumulo.core.client.AccumuloSecurityException;
import org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode;
import org.apache.accumulo.core.client.security.tokens.NullToken;
import org.apache.accumulo.core.security.Credentials;
  MockConnector(String username, MockInstance instance) throws AccumuloSecurityException {
    this(new Credentials(username, new NullToken()), new MockAccumulo(MockInstance.getDefaultFileSystem()), instance);
  MockConnector(Credentials credentials, MockAccumulo acu, MockInstance instance) throws AccumuloSecurityException {
    if (credentials.getToken().isDestroyed())
      throw new AccumuloSecurityException(credentials.getPrincipal(), SecurityErrorCode.TOKEN_EXPIRED);
    this.username = credentials.getPrincipal();",Either log or rethrow this exception.
a63637eeb9ccd14a5c2e587e3eb2cadaf4fb4bd3,server/src/main/java/org/apache/accumulo/server/gc/GarbageCollectWriteAheadLogs.java,"      Path swalog = new Path(recoveryDir, sortedWALog);
        if (trash == null || !trash.moveToTrash(swalog)) {
        try {
          if (fs.exists(swalog)) {
            log.error(""Unable to delete sorted walog "" + sortedWALog + "": "" + ioe);
          }
        } catch (IOException ex) {
          log.error(""Unable to check for the existence of "" + sortedWALog, ex);
        }",1 duplicated blocks of code must be removed.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/performance/scan/CollectTabletStats.java,package org.apache.accumulo.test.performance.scan;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/Framework.java,package org.apache.accumulo.test.randomwalk;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
9d50657d90a4450604b7c64ba1870cfc0f8b1a3a,server/src/main/java/org/apache/accumulo/server/util/TServerUtils.java,"import java.net.InetAddress;
    // check for the special ""bind to everything address""
    if (address.getAddress().getHostAddress().equals(""0.0.0.0"")) {
      // can't get the address from the bind, so we'll do our best to invent our hostname
      try {
        address = new InetSocketAddress(InetAddress.getLocalHost().getHostName(), address.getPort());
      } catch (UnknownHostException e) {
        throw new TTransportException(e);
      }
    }","Introduce a new variable instead of reusing the parameter ""address""."
35c43d82fc86d3b5fb711097ff29bc80a9ee6f75,core/src/main/java/org/apache/accumulo/core/client/mock/MockConnector.java,"  private final Instance instance;
  MockConnector(String username, Instance instance) {
    this(username, new MockAccumulo(), instance);
  MockConnector(String username, MockAccumulo acu, Instance instance) {
    this.instance = instance;
    return instance;",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
30e097294d334bf08cd81652e1633ae80fe74798,src/core/src/test/java/org/apache/accumulo/core/client/admin/TableOperationsHelperTest.java,"    /**
     * @deprecated since 1.4 {@link #attachIterator(String, IteratorSetting)}
     */",Either log or rethrow this exception.
35f8e2b1868cea9849efae7fae21e8ac789a0817,server/src/main/java/org/apache/accumulo/server/gc/SimpleGarbageCollector.java,"import java.nio.charset.Charset;

  private static final Charset utf8 = Charset.forName(""UTF8"");
      if (lock.tryLock(lockWatcher, new ServerServices(address, Service.GC_CLIENT).toString().getBytes(utf8))) {",Move this variable to comply with Java Code Conventions.
90898febb2d21e08ddea703618b63c8165283017,core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloInputFormat.java," * <li>{@link AccumuloInputFormat#setConnectorInfo(JobConf, String, byte[])} OR {@link AccumuloInputFormat#setConnectorInfo(JobConf, Path)}",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
1d138a73ad757c12b3d30aa1a6029b63cc3eaa66,test/src/main/java/org/apache/accumulo/test/functional/FunctionalTest.java,"import org.apache.accumulo.core.security.tokens.PasswordToken;
import org.apache.accumulo.core.security.tokens.SecurityToken;",Replace all tab characters in this file by sequences of white-spaces.
4a3a9df27b24fdc54a4d8b445cfc59a7724a7154,core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java,  @Deprecated,"Remove this unused method parameter ""ex""."
5939c271058774a087f29c1818b43fde75c57318,test/src/test/java/org/apache/accumulo/test/MetaSplitTest.java,"import org.apache.accumulo.server.mini.MiniAccumuloCluster;
import org.apache.accumulo.server.mini.MiniAccumuloConfig;",Either log or rethrow this exception.
02a26268575ac93d74796ec8fd8798f85b92dac1,server/src/main/java/org/apache/accumulo/server/util/SystemPropUtil.java,"    ZooReaderWriter.getInstance().putPersistentData(zPath, value.getBytes(), NodeExistsPolicy.OVERWRITE);","Remove this unused method parameter ""ex""."
42491533f6e743ed2b26519c556133f5e5f65132,proxy/src/main/java/org/apache/accumulo/proxy/ProxyServer.java,"import org.apache.accumulo.core.client.security.SecurityErrorCode;
      if (e.getSecurityErrorCode().equals(SecurityErrorCode.TABLE_DOESNT_EXIST))",Do not forget to remove this deprecated code someday.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/master/state/CurrentState.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
02a26268575ac93d74796ec8fd8798f85b92dac1,server/src/main/java/org/apache/accumulo/server/monitor/ZooKeeperStatus.java,"          transport.write(""stat\n"".getBytes(), 0, 5);","Remove this unused method parameter ""ex""."
7a69a7770bac8b72b27ef1e6d27b77081fc2d40c,server/src/main/java/org/apache/accumulo/server/test/randomwalk/security/CreateUser.java,"      conn.securityOperations().createUser(tableUserName, tabUserPass);
              state.getConnector().securityOperations().createUser(tableUserName, tabUserPass);",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
e6b82a5566f4ff375b8e9501c4042e424a76890c,start/src/main/java/org/apache/accumulo/start/classloader/vfs/AccumuloVFSClassLoader.java,"    return new AccumuloReloadingVFSClassLoader(dynamicCPath, vfs, wrapper, 1000, true);",Either log or rethrow this exception.
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/normalizer/NumberNormalizer.java,package org.apache.accumulo.examples.wikisearch.normalizer;,2 duplicated blocks of code must be removed.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/continuous/UndefinedAnalyzer.java,package org.apache.accumulo.test.continuous;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/util/MapFilePerformanceTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
9cc068dd87d479bbc6f1445e9003b02682144751,core/src/main/java/org/apache/accumulo/core/client/lexicoder/Lexicoder.java,"/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.client.lexicoder;

/**
 * An encoder that produces byte arrays in which the lexicographic sort order corresponds to the types sort order.
 */
public interface Lexicoder<T> extends Encoder<T> {
  
}",Rename this generic name to match the regular expression '^[A-Z]$'.
d058d74769338929ff2d677ebbe671cdedffeaf1,core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormat.java,"        if (e.getAuthorizationFailuresMap().size() >= 0) {
          for (Entry<KeyExtent,Set<SecurityErrorCode>> ke : e.getAuthorizationFailuresMap().entrySet()) {","Remove the literal ""false"" boolean value."
f3e3869b94d31077b28acae1e7d6ea7fd9297e03,server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"  private Map<FileRef,Pair<Key,Key>> getFirstAndLastKeys(SortedMap<FileRef,DataFileValue> allFiles) throws IOException {
    for (Entry<FileRef,DataFileValue> entry : allFiles.entrySet()) {

      firstAndLastKeys = getFirstAndLastKeys(datafileManager.getDatafileSizes());
    } else if (reason != MajorCompactionReason.USER) {
      MajorCompactionRequest request = new MajorCompactionRequest(extent, reason, fs, acuTableConf);
      request.setFiles(datafileManager.getDatafileSizes());
      strategy.gatherInformation(request);
      SortedMap<FileRef,DataFileValue> allFiles = datafileManager.getDatafileSizes();
      if (reason == MajorCompactionReason.CHOP) {
        inputFiles.addAll(findChopFiles(extent, firstAndLastKeys, allFiles.keySet()));
      } else if (reason == MajorCompactionReason.USER) {
        inputFiles.addAll(allFiles.keySet());
        MajorCompactionRequest request = new MajorCompactionRequest(extent, reason, fs, acuTableConf);
        request.setFiles(allFiles);
      propogateDeletes = !(droppedFiles.equals(allFiles.keySet()));
      filesToCompact = new HashMap<FileRef,DataFileValue>(allFiles);","Introduce a new variable instead of reusing the parameter ""mcr""."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/shard/Delete.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    @Override
    public void visit(State state, Properties props) throws Exception {
        String indexTableName = (String) state.get(""indexTableName"");
        String dataTableName = (String) state.get(""docTableName"");
        int numPartitions = (Integer) state.get(""numPartitions"");
        Random rand = (Random) state.get(""rand"");
        
        Entry<Key,Value> entry = Search.findRandomDocument(state, dataTableName, rand);
        if (entry == null) return;
        
        String docID = entry.getKey().getRow().toString();
        String doc = entry.getValue().toString();
        
        Insert.unindexDocument(state.getMultiTableBatchWriter().getBatchWriter(indexTableName), doc, docID, numPartitions);
        
        Mutation m = new Mutation(docID);
        m.putDelete(""doc"", """");
        
        state.getMultiTableBatchWriter().getBatchWriter(dataTableName).addMutation(m);
        
        log.debug(""Deleted document "" + docID);
        
        state.getMultiTableBatchWriter().flush();
    }
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
cf1c43fb0ec5525b50a736826abe6d3f4d7721bf,server/src/main/java/org/apache/accumulo/server/monitor/servlets/DefaultServlet.java,"import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;
        sb.append(""["" + utc2local(point.getFirst()) + "","" + y + ""]"");
    sb.append(""{yaxis:{}, xaxis:{mode:\""time\"",minTickSize: [1, \""minute\""],timeformat: \""%H:%M<br />"" + getShortTZName() + ""\"", ticks:3}});"");
  /**
   * Shows the current time zone (based on the current time) short name
   */
  private static String getShortTZName() {
    TimeZone tz = TimeZone.getDefault();
    return tz.getDisplayName(tz.inDaylightTime(new Date()), TimeZone.SHORT);
  }
  
  /**
   * Converts a unix timestamp in UTC to one that is relative to the local timezone
   */
  private static Long utc2local(Long utcMillis) {
    Calendar currentCalendar = Calendar.getInstance(); // default timezone
    currentCalendar.setTimeInMillis(utcMillis + currentCalendar.getTimeZone().getOffset(utcMillis));
    return currentCalendar.getTime().getTime();
  }
  ",1 duplicated blocks of code must be removed.
87df5f68e2e29a6ff0445f08dca6be9dc65c6039,server/src/main/java/org/apache/accumulo/server/master/recovery/MapRLogCloser.java,"package org.apache.accumulo.server.master.recovery;

import java.io.IOException;

import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.fs.permission.FsPermission;
import org.apache.log4j.Logger;

public class MapRLogCloser implements LogCloser {
  
  private static Logger log = Logger.getLogger(MapRLogCloser.class);
  
  @Override
  public long close(FileSystem fs, Path path) throws IOException {
    log.info(""Recovering file "" + path.toString() + "" by changing permission to readonly"");
    FsPermission roPerm = new FsPermission((short) 0444);
    try {
      fs.setPermission(path, roPerm);
      return 0;
    } catch (IOException ex) {
      log.error(""error recovering lease "", ex);
      // lets do this again
      return 1000;
    }
  }
  
}","Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
99d8e8b55e5b594d6ba4f4cba804aa1e01066f6e,core/src/test/java/org/apache/accumulo/core/iterators/user/TransformingIteratorTest.java,"    opts.clear();
    opts.put(TransformingIterator.AUTH_OPT, Authorizations.HEADER + ""~~~~"");
    try {
      ti.validateOptions(opts);
      Assert.assertFalse(true);
    } catch (IllegalArgumentException e) {}
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/simple/src/test/java/org/apache/accumulo/examples/simple/filedata/ChunkInputStreamTest.java,"package org.apache.accumulo.examples.simple.filedata;
import org.apache.accumulo.examples.simple.filedata.ChunkInputStream;
import org.apache.accumulo.examples.simple.filedata.FileDataIngest;","Rename ""table"" which hides the field declared at line 107."
a450ac2fa8bc20dd8406c02be88dda2f87f9dc26,core/src/test/java/org/apache/accumulo/core/client/TestThrift1474.java,"import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;
import org.junit.Test;",Move this constructor to comply with Java Code Conventions.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,contrib/accumulo_sample/ingest/src/main/java/normalizer/LcNoDiacriticsNormalizer.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
7aaaa6f397b6c7409cdb74c99dfc6373cfd1d7e6,proxy/src/main/java/org/apache/accumulo/proxy/thrift/ScanResult.java,"                org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                struct.results = new ArrayList<KeyValue>(_list8.size);
                for (int _i9 = 0; _i9 < _list8.size; ++_i9)
                  KeyValue _elem10; // required
                  _elem10 = new KeyValue();
                  _elem10.read(iprot);
                  struct.results.add(_elem10);
          for (KeyValue _iter11 : struct.results)
            _iter11.write(oprot);
          for (KeyValue _iter12 : struct.results)
            _iter12.write(oprot);
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.results = new ArrayList<KeyValue>(_list13.size);
          for (int _i14 = 0; _i14 < _list13.size; ++_i14)
            KeyValue _elem15; // required
            _elem15 = new KeyValue();
            _elem15.read(iprot);
            struct.results.add(_elem15);",Either log or rethrow this exception.
af9a1216a1853a7bd6e89ab581fadaf682cb69a0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/MaxRowCommand.java,"  private Option tableOpt, optAuths, optStartRow, optEndRow, optStartRowExclusive, optEndRowExclusive;
    boolean startInclusive = !cl.hasOption(optStartRowExclusive.getOpt());
    boolean endInclusive = !cl.hasOption(optEndRowExclusive.getOpt());
    return ""finds the max row in a table within a given range"";
    optStartRowExclusive = new Option(""be"", ""begin-exclusive"", false, ""make start row exclusive (by default it's inclusive)"");
    optStartRowExclusive.setArgName(""begin-exclusive"");
    optEndRowExclusive = new Option(""ee"", ""end-exclusive"", false, ""make end row exclusive (by default it's inclusive)"");
    optEndRowExclusive.setArgName(""end-exclusive"");
    opts.addOption(optStartRowExclusive);
    opts.addOption(optEndRowExclusive);
}",Replace all tab characters in this file by sequences of white-spaces.
5939c271058774a087f29c1818b43fde75c57318,test/src/test/java/org/apache/accumulo/test/ShellServerTest.java,"import org.apache.accumulo.server.mini.MiniAccumuloCluster;
import org.apache.accumulo.server.mini.MiniAccumuloConfig;",Either log or rethrow this exception.
9f03eb0f8739fc70ca829e3f0fdd7e7fa8ece9d3,core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsImpl.java,"  public Collection<Text> listSplits(String tableName) throws TableNotFoundException, AccumuloSecurityException {
    String tableId = Tables.getTableId(instance, tableName);

        // the following method throws AccumuloException for some conditions that should be retried
        MetadataTable.getEntries(instance, credentials, tableId, true, locations, tablets);
      } catch (AccumuloSecurityException ase) {
        throw ase;
        if (!Tables.exists(instance, tableId)) {
          throw new TableNotFoundException(tableId, tableName, null);
        }

        if (t instanceof RuntimeException && t.getCause() instanceof AccumuloSecurityException) {
          throw (AccumuloSecurityException) t.getCause();
        }

  @Override
  public Collection<Text> getSplits(String tableName) throws TableNotFoundException {
    try {
      return listSplits(tableName);
    } catch (AccumuloSecurityException e) {
      throw new RuntimeException(e);
    }
  }

  public Collection<Text> listSplits(String tableName, int maxSplits) throws TableNotFoundException, AccumuloSecurityException {
    Collection<Text> endRows = listSplits(tableName);
  @Override
  public Collection<Text> getSplits(String tableName, int maxSplits) throws TableNotFoundException {
    try {
      return listSplits(tableName, maxSplits);
    } catch (AccumuloSecurityException e) {
      throw new RuntimeException(e);
    }
  }
",Either log or rethrow this exception.
af2a1a98f2f556230870ef6b39fa4597edcd59c2,core/src/main/java/org/apache/accumulo/core/client/impl/ConnectorImpl.java,"  /**
   * 
   * Use {@link Instance#getConnector(String, byte[])}
   * 
   * @param instance
   * @param user
   * @param password
   * @throws AccumuloException
   * @throws AccumuloSecurityException
   * @see Instance#getConnector(String user, byte[] password)
   * @deprecated Not for client use
   */
  @Deprecated
  @Deprecated
  @Deprecated
  @Deprecated",3 duplicated blocks of code must be removed.
ae712f9cbd8182e49457d871b778f399ce1abdaf,src/core/src/main/java/org/apache/accumulo/core/client/ScannerBase.java," * This class hosts configuration methods that are shared between different types of scanners.
   * Remove an iterator from the list of iterators.
   * Adds a column family to the list of columns that will be fetched by this scanner. By default when no columns have been added the scanner fetches all
   * columns.
   * 
   *          the column family to be fetched
   * Adds a column to the list of columns that will be fetched by this scanner. The column is identified by family and qualifier. By default when no columns
   * have been added the scanner fetches all columns.
   * Clears the columns to be fetched (useful for resetting the scanner for reuse). Once cleared, the scanner will fetch all columns.
   * Returns an iterator over an accumulo table. This iterator uses the options that are currently set for its lifetime, so setting options will have no effect
   * 
   * @return an iterator over Key,Value pairs which meet the restrictions set on the scanner",Complete the task associated to this TODO comment.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,server/src/main/java/org/apache/accumulo/server/tabletserver/mastermessage/SplitReportMessage.java,"import org.apache.accumulo.core.security.thrift.Credentials;
  public void send(Credentials credentials, String serverName, MasterClientService.Iface client) throws TException, ThriftSecurityException {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/client/mock/MockInstanceOperations.java," * 
  
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
    ",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/master/state/TableStats.java,"    if (result == null)
      return new TableCounts();
    if (endScan <= startScan)
      return System.currentTimeMillis() - startScan;","Remove this call to ""exit"" or ensure it is really required."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/multitable/DropTable.java,"package org.apache.accumulo.server.test.randomwalk.multitable;

import java.util.ArrayList;
import java.util.Properties;
import java.util.Random;

import org.apache.accumulo.core.client.TableNotFoundException;
import org.apache.accumulo.server.test.randomwalk.State;
import org.apache.accumulo.server.test.randomwalk.Test;


public class DropTable extends Test {

	@Override
	public void visit(State state, Properties props) throws Exception {
		
		@SuppressWarnings(""unchecked"")
		ArrayList<String> tables = (ArrayList<String>) state.get(""tableList"");
		
		// don't drop a table if we only have one table or less
		if (tables.size() <= 1) {
			return;
		}
		
		Random rand = new Random();
		String tableName = tables.remove(rand.nextInt(tables.size()));
		
		try {
			state.getConnector().tableOperations().delete(tableName);
			log.debug(""Dropped "" + tableName);
		} catch (TableNotFoundException e) {
			log.error(""Tried to drop table ""+tableName+"" but could not be found!"");
		}
	}
}",Return empty string instead.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/ingest/src/test/java/org/apache/accumulo/examples/wikisearch/ingest/StandaloneStatusReporter.java,package org.apache.accumulo.examples.wikisearch.ingest;,"Rename ""table"" which hides the field declared at line 107."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/master/balancer/DefaultLoadBalancer.java,"    if (locations.size() == 0)
      return null;
        if (current.host().equals(last.host()))
          return current;
    if (assignments == null || !assignments.hasNext())
      assignments = locations.keySet().iterator();
      if (result == 0)
        return server.compareTo(obj.server);
            if (tableToBalance == null || tableToBalance.equals(e.getKey()))
              serverTotal += e.getValue().onlineTablets;
        if (needToUnload > needToLoad)
          moreBalancingNeeded = true;
    if (count == 0)
      return result;
          if (tooLittleMap.get(tableID) == null)
            tooLittleMap.put(tableID, 0);
      if (extent == null)
        return result;
    if (extents.size() == 0)
      return null;
        if (getMigrations(current, migrationsOut))
          return 1 * 1000;","Remove this call to ""exit"" or ensure it is really required."
8dccbe7e9960c204bf82326c9fe6e28dcb8d647e,core/src/main/java/org/apache/accumulo/core/data/thrift/TRange.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",296 duplicated blocks of code must be removed.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/data/ComparableBytes.java,"  
  public byte[] data;
  
  public ComparableBytes(byte[] b) {
    this.data = b;
  }
  
  public byte[] getBytes() {
    return data;
  }
  
  @Override
  public int getLength() {
    return data.length;
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
5e14ecff940065c80ed5975124552c9014cc3442,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/InputFormatBase.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
import org.apache.accumulo.core.iterators.user.VersioningIterator;","Remove this unused private ""match"" method."
be2fdba7d2851efd7ac2e41aa377b4d32f620ed6,src/server/src/main/java/org/apache/accumulo/server/client/BulkImporter.java,"import org.apache.accumulo.core.client.impl.Translator;
            log.debug(""Map file "" + mapFile + "" found to overlap "" + tabletsToAssignMapFileTo.size() + "" tablets"");
  final static byte[] byte0 = {0};

    String filename = file.toString();
    // log.debug(filename + "" finding overlapping tablets "" + startRow + "" -> "" + endRow);
    FileSKVIterator reader = FileOperations.getInstance().openReader(filename, true, fs, fs.getConf(), acuConf);
        // log.debug(filename + "" Seeking to row "" + row);
        if (!reader.hasTop()) {
          // log.debug(filename + "" not found"");
        }
        // log.debug(filename + "" found row "" + row + "" at location "" + tabletLocation);
        if (row != null && (endRow == null || row.compareTo(endRow) < 0)) {
          row = new Text(row);
          row.append(byte0, 0, byte0.length);
        } else
    // log.debug(filename + "" to be sent to "" + result);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
8c2ef69058fa4917c9b330ca9c8b8cc2ce548e36,server/src/main/java/org/apache/accumulo/server/monitor/Monitor.java,"          if (client != null) {
            mmi = client.getMasterStats(null, SecurityConstants.getSystemCredentials());
          } else {
            mmi = null;
          }
          if (client != null) {
          }
        if (mmi == null)
          UtilWaitThread.sleep(1000);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/reader/AggregatingRecordReader.java,"package org.apache.accumulo.examples.wikisearch.reader;
import org.apache.accumulo.examples.wikisearch.ingest.WikipediaConfiguration;
import org.apache.accumulo.examples.wikisearch.util.TextUtil;","Rename ""table"" which hides the field declared at line 107."
27d17cf9f06527002150d0a989ff6d2779e85d33,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/TablesServlet.java,    scanner.close();,"Move the ""print"" string literal on the left side of this string comparison."
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/bulk/GenerateTestData.java,"import com.beust.jcommander.Parameter;

  static class Opts extends org.apache.accumulo.core.cli.Help {
    @Parameter(names=""--start-row"", required=true)
    int startRow = 0;
    @Parameter(names=""--count"", required=true)
    int numRows = 0;
    @Parameter(names=""--output"", required=true)
    String outputFile;
  }
  
    Opts opts = new Opts();
    opts.parseArgs(GenerateTestData.class.getName(), args);
    FileSystem fs = FileSystem.get(CachedConfiguration.getInstance());
    PrintStream out = new PrintStream(new BufferedOutputStream(fs.create(new Path(opts.outputFile))));
    for (int i = 0; i < opts.numRows; i++) {
      out.println(String.format(""row_%08d\tvalue_%08d"", i + opts.startRow, i + opts.startRow));","Remove this call to ""exit"" or ensure it is really required."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/examples/src/test/java/org/apache/accumulo/examples/dirlist/CountTest.java,"      if (!this.containsKey(key))
        return super.put(key, value);","Remove this call to ""exit"" or ensure it is really required."
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,server/src/main/java/org/apache/accumulo/server/util/RemoveEntriesForMissingFiles.java," * 
  
  
    BatchWriter writer = null; ",Replace all tab characters in this file by sequences of white-spaces.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,start/src/main/java/org/apache/accumulo/start/classloader/vfs/ReloadingClassLoader.java,"/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.start.classloader.vfs;

/**
 * 
 */
public interface ReloadingClassLoader {
  ClassLoader getClassLoader();
}","Remove this unused private ""appendProp"" method."
d631e78ce6361c82ee6de2e98ecf3b0a14b33858,test/src/main/java/org/apache/accumulo/test/randomwalk/multitable/Write.java,"import org.apache.accumulo.core.client.TableOfflineException;

    } catch (TableOfflineException e) {
      log.error(""Table "" + tableName + "" is offline!"");
      return;",Either log or rethrow this exception.
ab3753db21f390e0c58b33d2e2b714708e2ae8e1,core/src/main/java/org/apache/accumulo/core/file/rfile/RFileOperations.java,"    int trep = conf.getInt(Property.TABLE_FILE_REPLICATION.getKey(), acuconf.getCount(Property.TABLE_FILE_REPLICATION));
    long tblock = conf.getLong(Property.TABLE_FILE_BLOCK_SIZE.getKey(), acuconf.getMemoryInBytes(Property.TABLE_FILE_BLOCK_SIZE));
    long blockSize = conf.getLong(Property.TABLE_FILE_COMPRESSED_BLOCK_SIZE.getKey(), acuconf.getMemoryInBytes(Property.TABLE_FILE_COMPRESSED_BLOCK_SIZE));
    long indexBlockSize = conf.getLong(Property.TABLE_FILE_COMPRESSED_BLOCK_SIZE_INDEX.getKey(),
        acuconf.getMemoryInBytes(Property.TABLE_FILE_COMPRESSED_BLOCK_SIZE_INDEX));
    String compression = conf.get(Property.TABLE_FILE_COMPRESSION_TYPE.getKey(), acuconf.get(Property.TABLE_FILE_COMPRESSION_TYPE));","Refactor this method to throw at most one checked exception instead of: java.io.IOException, java.lang.InterruptedException"
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/monitor/util/celltypes/PercentageType.java,"    if (obj == null)
      return ""-"";","Remove this call to ""exit"" or ensure it is really required."
f423648a208cbcc2a3dd7c82ec427cc6375c1bf8,src/core/src/main/java/org/apache/accumulo/core/iterators/user/AgeOffFilter.java,"import org.apache.accumulo.core.client.IteratorSetting;
  private static final String CURRENT_TIME = ""currentTime"";
  private AgeOffFilter(SortedKeyValueIterator<Key,Value> iterator, long threshold, long currentTime) {
    setSource(iterator);
    String time = options.get(CURRENT_TIME);
    io.addNamedOption(CURRENT_TIME, ""if set, use the given value as the absolute time in milliseconds as the current time of day"");
  
  /**
   * A convenience method for setting the age off threshold.
   * 
   * @param is
   *          IteratorSetting object to configure.
   * @param ttl
   *          age off threshold in milliseconds.
   */
  public static void setTTL(IteratorSetting is, Long ttl) {
    is.addOption(TTL, Long.toString(ttl));
  }
  
  /**
   * A convenience method for setting the current time (from which to measure the age off threshold).
   * 
   * @param is
   *          IteratorSetting object to configure.
   * @param currentTime
   *          time in milliseconds.
   */
  public static void setCurrentTime(IteratorSetting is, Long currentTime) {
    is.addOption(CURRENT_TIME, Long.toString(currentTime));
  }","Remove this unused method parameter ""hasStart""."
0d85d60c08f88bc6d3e366b192fba5a371654363,core/src/main/java/org/apache/accumulo/core/client/impl/OfflineScanner.java,"
  @Override
  public long getReadaheadThreshold() {
    throw new UnsupportedOperationException();
  }

  @Override
  public void setReadaheadThreshold(long batches) {
    throw new UnsupportedOperationException();
  }",Move this constructor to comply with Java Code Conventions.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/util/DeleteZooInstance.java,"package org.apache.accumulo.server.util;

import java.util.HashSet;
import java.util.Set;

import org.apache.accumulo.core.Constants;
import org.apache.accumulo.core.zookeeper.ZooUtil.NodeMissingPolicy;
import org.apache.accumulo.server.zookeeper.ZooReaderWriter;



public class DeleteZooInstance {

    /**
     * @param args : the name or UUID of the instance to be deleted
     */
    public static void main(String[] args) throws Exception {
        if (args.length < 1) {
            System.err.println(""Usage: "" + DeleteZooInstance.class.getName() + "" [instanceName|UUID ... ]"");
            System.exit(1);
        }
        ZooReaderWriter zk = ZooReaderWriter.getInstance();
        // try instance name:
        Set<String> instances = new HashSet<String>(zk.getChildren(Constants.ZROOT+Constants.ZINSTANCES));
        Set<String> uuids = new HashSet<String>(zk.getChildren(Constants.ZROOT));
        uuids.remove(""instances"");
        for (String name : args) {
            if (instances.contains(args[0])) {
                String path = Constants.ZROOT + Constants.ZINSTANCES + ""/"" + name;
                byte[] data = zk.getData(path, null);
                zk.recursiveDelete(path, NodeMissingPolicy.SKIP);
                zk.recursiveDelete(Constants.ZROOT + ""/"" + new String(data), NodeMissingPolicy.SKIP);
            }
            else if (uuids.contains(name)) {
                // look for the real instance name
                for (String instance : instances) {
                    String path = Constants.ZROOT + Constants.ZINSTANCES + ""/"" + instance;
                    byte[] data = zk.getData(path, null);
                    if (name.equals(new String(data)))
                        zk.recursiveDelete(path, NodeMissingPolicy.SKIP);
                }
                zk.recursiveDelete(Constants.ZROOT + ""/"" + name, NodeMissingPolicy.SKIP);
            }
        }
    }

}",Return empty string instead.
f868c3762cf39628e32bda051f98862a56628220,src/minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloConfig.java,"  private boolean runGC = false;
  
  /**
   * Whether or not the Accumulo garbage collector proces will run
   * @return
   */
  public boolean shouldRunGC() {
    return runGC;
  }
  
  /**
   * Sets if the Accumulo garbage collector process should run
   * @param shouldRunGC
   */
  public void runGC(boolean shouldRunGC) {
    runGC = shouldRunGC;
  }",Return empty string instead.
3fe10df99022df5edac28212bca97f1c73c2432e,core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,"    @SuppressWarnings(""deprecation"")
    @SuppressWarnings(""deprecation"")",1 duplicated blocks of code must be removed.
040f891216154de5f7c8a87e25cefc0f816aea9c,test/src/test/java/org/apache/accumulo/test/functional/MergeIT.java,"  @Test(timeout = 60 * 1000)
  @Test(timeout = 60 * 1000)
  @Test(timeout = 2 * 60 * 1000)",Either log or rethrow this exception.
56cd6b7861a0dbfc21fa08f44d11210b45f0fd96,core/src/main/java/org/apache/accumulo/core/util/TableDiskUsage.java,"  public interface Printer {
    void print(String line);
  }
  
  IOException {
    printDiskUsage(acuConf, tables, fs, conn, new Printer() {
      @Override
      public void print(String line) {
        System.out.println(line);
      }
    });
  }
  public static void printDiskUsage(AccumuloConfiguration acuConf, Collection<String> tables, FileSystem fs, Connector conn, Printer printer) throws TableNotFoundException,
  IOException {
  
      printer.print(String.format(""%,24d %s"", entry.getValue(), entry.getKey()));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
937e6b8543b2595bcd5b086a80ed776380251d9b,core/src/main/java/org/apache/accumulo/core/iterators/AggregatingIterator.java,"        throw new IllegalArgumentException(""classname null"");","Remove the literal ""false"" boolean value."
d23cf3373dd3c8f77b747197575f30d6ee6d1321,test/src/test/java/org/apache/accumulo/test/MiniAccumuloClusterTest.java,"    Connector conn = new ZooKeeperInstance(accumulo.getInstanceName(), accumulo.getZooKeepers()).getConnector(""root"", ""superSecret"");
    Connector uconn = new ZooKeeperInstance(accumulo.getInstanceName(), accumulo.getZooKeepers()).getConnector(""user1"", ""pass1"");
    Connector conn = new ZooKeeperInstance(accumulo.getInstanceName(), accumulo.getZooKeepers()).getConnector(""root"", ""superSecret"");","Define a constant instead of duplicating this literal ""digest"" 13 times."
3c4012cfb4602f5675f54013525104c011728ad8,core/src/main/java/org/apache/accumulo/core/util/shell/commands/ListIterCommand.java,"          for (Entry<String,String> optEntry : setting.getOptions().entrySet()) {",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
040f891216154de5f7c8a87e25cefc0f816aea9c,test/src/test/java/org/apache/accumulo/test/functional/BinaryIT.java,  @Test(timeout = 60 * 1000),Either log or rethrow this exception.
51610c1fcd8726de75be7e4a799c8eafce51a8bf,core/src/main/java/org/apache/accumulo/core/cli/ClientOnDefaultTable.java,"import org.apache.accumulo.core.client.mapreduce.AccumuloInputFormat;
import org.apache.accumulo.core.client.mapreduce.AccumuloOutputFormat;
import org.apache.hadoop.mapreduce.Job;

  
  public void setAccumuloConfigs(Job job) {
    super.setAccumuloConfigs(job);
    AccumuloInputFormat.setInputInfo(job.getConfiguration(), user, getPassword(), getTableName(), auths);
    AccumuloOutputFormat.setOutputInfo(job.getConfiguration(), user, getPassword(), true, getTableName());
  }
",Reorder the modifiers to comply with the Java Language Specification.
c74fd2fbc3e11a93a04aba495432126153a639f3,core/src/main/java/org/apache/accumulo/core/util/shell/commands/SetScanIterCommand.java,"import java.util.Map.Entry;
    Shell.log.warn(""Deprecated, use "" + new SetShellIterCommand().getName());
  protected void setTableProperties(final CommandLine cl, final Shell shellState, final int priority, final Map<String,String> options, final String classname,
      final String name) throws AccumuloException, AccumuloSecurityException, ShellCommandException, TableNotFoundException {
    
    final String tableName = OptUtil.getTableOpt(cl, shellState);

    
    for (Iterator<Entry<String,String>> i = options.entrySet().iterator(); i.hasNext();) {
      final Entry<String,String> entry = i.next();
      if (entry.getValue() == null || entry.getValue().isEmpty()) {
        i.remove();
      }
    }
",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
f3e3869b94d31077b28acae1e7d6ea7fd9297e03,core/src/main/java/org/apache/accumulo/core/conf/Property.java,"        || key.startsWith(Property.TABLE_ITERATOR_PREFIX.getKey()) || key.startsWith(Property.TABLE_LOCALITY_GROUP_PREFIX.getKey())
        || key.startsWith(Property.TABLE_COMPACTION_STRATEGY_PREFIX.getKey());
        || key.startsWith(Property.MONITOR_PREFIX.getKey() + ""banner."") || key.startsWith(VFS_CONTEXT_CLASSPATH_PROPERTY.getKey())
        || key.startsWith(Property.TABLE_COMPACTION_STRATEGY_PREFIX.getKey());
    log.info(""longNames "" + longNames);
      result.put(entry.getKey().substring(Property.TABLE_COMPACTION_STRATEGY_PREFIX.getKey().length()), entry.getValue());
    log.info(""result "" + result);","Introduce a new variable instead of reusing the parameter ""mcr""."
ff1e582020a1437e9c520ef3a1af99477462d803,core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteTableCommand.java,"import org.apache.accumulo.core.util.shell.Token;
    tableOpt = new Option(Shell.tableOption, ""tableName"", true, ""table to delete"");",2 duplicated blocks of code must be removed.
9ac95f86986a01dfb55ecfdaa1ed3776d2150501,test/src/test/java/org/apache/accumulo/test/functional/RenameIT.java,  @Test(timeout = 2 * 60 * 1000),Either log or rethrow this exception.
defe453bde195485c001219cac7ef00872db9620,src/core/src/test/java/org/apache/accumulo/core/iterators/user/VersioningIteratorTest.java,"package org.apache.accumulo.core.iterators.user;
import org.apache.accumulo.core.client.IteratorSetting;
import org.apache.accumulo.core.iterators.LongCombiner;
import org.apache.accumulo.core.iterators.SortedMapIterator;
      VersioningIterator it = new VersioningIterator();
      IteratorSetting is = new IteratorSetting(1, VersioningIterator.class);
      VersioningIterator.setMaxVersions(is, 3);
      it.init(new SortedMapIterator(tm), is.getProperties(), null);
      VersioningIterator it = new VersioningIterator();
      IteratorSetting is = new IteratorSetting(1, VersioningIterator.class);
      VersioningIterator.setMaxVersions(is, 3);
      it.init(new SortedMapIterator(tm), is.getProperties(), null);
        VersioningIterator it = new VersioningIterator();
        IteratorSetting is = new IteratorSetting(1, VersioningIterator.class);
        VersioningIterator.setMaxVersions(is, i);
        it.init(new SortedMapIterator(tm), is.getProperties(), null);
    VersioningIterator it = new VersioningIterator();
    IteratorSetting is = new IteratorSetting(1, VersioningIterator.class);
    VersioningIterator.setMaxVersions(is, 3);
    it.init(new SortedMapIterator(tm), is.getProperties(), null);","Remove the literal ""true"" boolean value."
7942da1d204d271bff01e9e93208cdd67d0eefa3,test/src/main/java/org/apache/accumulo/test/functional/PermissionsTest.java,"import org.apache.accumulo.core.security.tokens.AuthenticationToken;
  private static final AuthenticationToken TEST_PASS = new PasswordToken(""test_password"");
            test_user_conn.securityOperations().createUser(user, new PasswordToken(password));
            if (e.getErrorCode() != SecurityErrorCode.PERMISSION_DENIED || root_conn.securityOperations().authenticateUser(user, password.getBytes()))
          root_conn.securityOperations().createUser(user, new PasswordToken(password));
            if (e.getErrorCode() != SecurityErrorCode.PERMISSION_DENIED || !root_conn.securityOperations().authenticateUser(user, password.getBytes()))
          root_conn.securityOperations().createUser(user, new PasswordToken(password));
          test_user_conn.securityOperations().createUser(user, new PasswordToken(password));
          root_conn.securityOperations().createUser(user, new PasswordToken(password));
          root_conn.securityOperations().createUser(user, new PasswordToken(password));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/util/LoggingRunnable.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    public LoggingRunnable(Logger log, Runnable r) {
        try {
        } catch (Throwable t) {
            try {
                log.error(""Thread \"""" + Thread.currentThread().getName() + ""\"" died "" + t.getMessage(), t);
            } catch (Throwable t2) {
                // maybe the logging system is screwed up OR there is a bug in the exception, like t.getMessage() throws a NPE
                System.err.println(""ERROR "" + new Date() + "" Failed to log message about thread death "" + t2.getMessage());
                // try to print original exception
                System.err.println(""ERROR "" + new Date() + "" Exception that failed to log : "" + t.getMessage());
        Runnable r = new Runnable() {
            @Override
            public void run() {
                int x[] = new int[0];
                
                x[0]++;
            }
        };
        
        LoggingRunnable lr = new LoggingRunnable(null, r);
        lr.run();
        
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b65b0846599191eef545de77460f8a6303e62851,src/core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,"    public final void printHelp(int width) {
      Shell.printHelp(usage(), ""description: "" + this.description(), getOptionsWithHelp(), width);
    }
    
    printHelp(usage, description, opts, Integer.MAX_VALUE);
  }
  
  private static final void printHelp(String usage, String description, Options opts, int width) {
    new HelpFormatter().printHelp(pw, width, usage, description, opts, 2, 5, null, true);
  ",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
9d293dda5e4d6d105a7600c7b605813ef54744e9,src/server/src/main/java/org/apache/accumulo/server/gc/SimpleGarbageCollector.java,"import org.apache.accumulo.server.security.SecurityUtil;
    SecurityUtil.serverLogin();

",Move this variable to comply with Java Code Conventions.
8a33be695e0bcb769412db499df9cbec23004740,examples/simple/src/main/java/org/apache/accumulo/examples/simple/shard/Index.java,"import org.apache.accumulo.core.cli.BatchWriterOpts;
    BatchWriterOpts bwOpts = new BatchWriterOpts();
    opts.parseArgs(Index.class.getName(), args, bwOpts);
    BatchWriter bw = opts.getConnector().createBatchWriter(opts.tableName, bwOpts.getBatchWriterConfig());    ","Remove this unused method parameter ""opts""."
bd5f4f05975ec1cf0f3cf715d9d0094ababd8e73,test/src/main/java/org/apache/accumulo/test/randomwalk/security/Validate.java,"    Authenticate.authenticate(state.getUserName(), state.getToken(), state, props);
    Authenticate.authenticate(state.getUserName(), state.getToken(), state, props);","Immediately return this expression instead of assigning it to the temporary variable ""connector""."
b1379140bcea2c529ce98e6bfcb1d007d58c0adc,core/src/test/java/org/apache/accumulo/core/data/KeyTest.java,"    assertTrue(k1.equals(k2));
    assertTrue(k3.equals(k4));",Replace all tab characters in this file by sequences of white-spaces.
3b62690ceb7c98383e2231d82204aed90fb592ed,src/core/src/main/java/org/apache/accumulo/core/client/ClientSideIteratorScanner.java,        throw new IllegalArgumentException();,Complete the task associated to this TODO comment.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/GetMasterStats.java,package org.apache.accumulo.test;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
8945f1677d066d0a0d8871d1d5e44433c4bb11e5,server/src/test/java/org/apache/accumulo/server/client/BulkImporterTest.java,"      return new TabletLocation(fakeMetaData.tailSet(new KeyExtent(tableId, row, null)).first(), ""localhost"", ""1"");",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ff1e582020a1437e9c520ef3a1af99477462d803,core/src/main/java/org/apache/accumulo/core/data/KeyValue.java,"import static org.apache.accumulo.core.util.ByteBufferUtil.toBytes;
",2 duplicated blocks of code must be removed.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/logger/IdentityReducer.java,"  public IdentityReducer() {
    super();
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/monitor/util/celltypes/CompactionsType.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/util/CheckForMetadataProblems.java,"import org.apache.accumulo.server.cli.ClientOpts;

import com.beust.jcommander.Parameter;
  public static void checkTable(String tablename, TreeSet<KeyExtent> tablets, Opts opts) {
      if (broke && opts.fix) {
        MetadataTable.updateTabletPrevEndRow(ke, opts.getAuthInfo());
  public static void checkMetadataTableEntries(Opts opts, FileSystem fs) throws Exception {
    if (opts.offline) {
      scanner = new OfflineMetadataScanner(ServerConfiguration.getSystemConfiguration(opts.getInstance()), fs);
      scanner =  opts.getConnector().createScanner(Constants.METADATA_TABLE_NAME, Constants.NO_AUTHS);
          checkTable(entry2.getKey(), entry2.getValue(), opts);
          if (opts.fix) {
            Writer t = MetadataTable.getMetadataTable(opts.getAuthInfo());
      checkTable(entry.getKey(), entry.getValue(), opts);
  static class Opts extends ClientOpts {
    @Parameter(names=""--fix"", description=""best-effort attempt to fix problems found"")
    boolean fix = false;
    @Parameter(names=""--offline"", description=""perform the check on the files directly"")
    boolean offline = false;
    Opts opts = new Opts();
    opts.parseArgs(CheckForMetadataProblems.class.getName(), args);
    checkMetadataTableEntries(opts, fs);
    opts.stopTracing();","Remove this call to ""exit"" or ensure it is really required."
36ddf332867a6b9bc50bf26961bc1857b3cc3379,src/trace/src/main/java/cloudtrace/instrument/thrift/TraceWrap.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */","Remove the literal ""true"" boolean value."
02a26268575ac93d74796ec8fd8798f85b92dac1,core/src/main/java/org/apache/accumulo/core/security/ColumnVisibility.java,"    return builder.toString().getBytes();
    this(expression.getBytes());","Remove this unused method parameter ""ex""."
35f8e2b1868cea9849efae7fae21e8ac789a0817,fate/src/main/java/org/apache/accumulo/fate/zookeeper/DistributedReadWriteLock.java,"import java.nio.charset.Charset;

  private static final Charset utf8 = Charset.forName(""UTF8"");
      byte typeBytes[] = type.name().getBytes(utf8);",Move this variable to comply with Java Code Conventions.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/file/blockfile/BlockFileReader.java,"  
  public ABlockReader getMetaBlock(String name) throws IOException;
  
  public ABlockReader getDataBlock(int blockIndex) throws IOException;
  
  public void close() throws IOException;
  
  public ABlockReader getMetaBlock(long offset, long compressedSize, long rawSize) throws IOException;
  
  public ABlockReader getDataBlock(long offset, long compressedSize, long rawSize) throws IOException;
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/BoundedRangeFileInputStream.java,"    final FSDataInputStream inLocal = in;
    synchronized (inLocal) {
    	inLocal.seek(pos);
            ret = inLocal.read(b, off, n);","Remove this unused private ""appendProp"" method."
aaae7f37c421eababf17a045448605e1bdfc8ace,core/src/main/java/org/apache/accumulo/core/client/mock/MockInstanceOperations.java,"import org.apache.accumulo.core.client.admin.ActiveCompaction;
  
  /*
   * (non-Javadoc)
   * 
   * @see org.apache.accumulo.core.client.admin.InstanceOperations#getActiveCompactions(java.lang.String)
   */
  @Override
  public List<ActiveCompaction> getActiveCompactions(String tserver) throws AccumuloException, AccumuloSecurityException {
    return new ArrayList<ActiveCompaction>();
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
82c5fbf6dcac0425649dc07f7493b9e21b252ec7,server/src/main/java/org/apache/accumulo/server/zookeeper/TransactionWatcher.java,"      String path = ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid;
      writer.putPersistentData(ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid + ""-running"", new byte[] {}, NodeExistsPolicy.OVERWRITE);
    
    public static void cleanup(String type, long tid) throws KeeperException, InterruptedException {
      Instance instance = HdfsZooInstance.getInstance();
      IZooReaderWriter writer = ZooReaderWriter.getInstance();
      writer.recursiveDelete(ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid, NodeMissingPolicy.SKIP);
      writer.recursiveDelete(ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid + ""-running"", NodeMissingPolicy.SKIP);
    }

    @Override
    public boolean transactionComplete(String type, long tid) throws Exception {
      String path = ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid + ""-running"";
      rdr.sync(path);
      return !rdr.exists(path);
    }",Replace all tab characters in this file by sequences of white-spaces.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/util/Daemon.java,"  
  public Daemon() {
    setDaemon(true);
  }
  
  public Daemon(Runnable target) {
    super(target);
    setDaemon(true);
  }
  
  public Daemon(String name) {
    super(name);
    setDaemon(true);
  }
  
  public Daemon(ThreadGroup group, Runnable target) {
    super(group, target);
    setDaemon(true);
  }
  
  public Daemon(ThreadGroup group, String name) {
    super(group, name);
    setDaemon(true);
  }
  
  public Daemon(Runnable target, String name) {
    super(target, name);
    setDaemon(true);
  }
  
  public Daemon(ThreadGroup group, Runnable target, String name) {
    super(group, target, name);
    setDaemon(true);
  }
  
  public Daemon(ThreadGroup group, Runnable target, String name, long stackSize) {
    super(group, target, name, stackSize);
    setDaemon(true);
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
223cedceeac4c97d10739a31be0b0b1bba97d7b6,proxy/src/test/java/org/apache/accumulo/proxy/TestProxyReadWrite.java,"    String writer = tpc.proxy().createWriter(userpass, testtable, null);
    String writer = tpc.proxy().createWriter(userpass, testtable, null);
    String writer = tpc.proxy().createWriter(userpass, testtable, null);",Remove this unused import 'java.util.Arrays'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/file/blockfile/cache/CacheEntry.java,"  private String fName;
  private Long hash;
  
  public CacheEntry(String name, Long time) {
    this.hash = time;
    this.fName = name;
  }
  
  @Override
  public boolean equals(Object other) {
    return
    ((CacheEntry) other).getName().equals(fName) && ((CacheEntry) other).getHashInfo().equals(hash) && ((CacheEntry) other).getName().equals(fName)
        && ((CacheEntry) other).getHashInfo().equals(hash);
  }
  
  @Override
  public int hashCode() {
    return fName.hashCode() + hash.hashCode();
  }
  
  public String getName() {
    return fName;
  }
  
  public Long getHashInfo() {
    return this.hash;
  }
  
  public long length() {
    return fName.length() + Long.SIZE;
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
5bd33fa1e9625e3c088ee39f626c256aca75b0da,server/src/main/java/org/apache/accumulo/server/test/functional/ConcurrencyTest.java,"import org.apache.accumulo.core.client.BatchWriterConfig;
    BatchWriter bw = getConnector().createBatchWriter(""cct"", new BatchWriterConfig());","Remove this unused method parameter ""e""."
69218e7e989b6f1d65afabce9c5b5ab0e3204141,server/src/main/java/org/apache/accumulo/server/util/Initialize.java,"  
    Path[] result = new Path[paths.length];
    // the actual disk locations of the root table and tablets
    // the actual disk locations of the metadata table and tablets
    final Path[] metadataTableDirs = paths(ServerConstants.getMetadataTableDirs());
    final Path[] tableMetadataTabletDirs = paths(ServerConstants.prefix(ServerConstants.getMetadataTableDirs(), MetadataTable.TABLE_TABLET_LOCATION));
    final Path[] defaultMetadataTabletDirs = paths(ServerConstants.prefix(ServerConstants.getMetadataTableDirs(), Constants.DEFAULT_TABLET_LOCATION));
    // create root table and tablet
    String initRootTabFile = rootTablet + ""/00000_00000."" + FileOperations.getNewFileExtension(AccumuloConfiguration.getDefaultConfiguration());
    Text tableExtent = new Text(KeyExtent.getMetadataEntry(new Text(MetadataTable.ID), MetadataTable.RESERVED_RANGE_START_KEY.getRow()));
    Key tablePrevRowKey = new Key(tableExtent, MetadataTable.PREV_ROW_COLUMN.getColumnFamily(), MetadataTable.PREV_ROW_COLUMN.getColumnQualifier(), 0);
    mfw.append(tablePrevRowKey, KeyExtent.encodePrevEndRow(null));
    Key defaultDirKey = new Key(defaultExtent, MetadataTable.DIRECTORY_COLUMN.getColumnFamily(), MetadataTable.DIRECTORY_COLUMN.getColumnQualifier(), 0);
    Key defaultPrevRowKey = new Key(defaultExtent, MetadataTable.PREV_ROW_COLUMN.getColumnFamily(), MetadataTable.PREV_ROW_COLUMN.getColumnQualifier(), 0);
    mfw.append(defaultPrevRowKey, KeyExtent.encodePrevEndRow(MetadataTable.RESERVED_RANGE_START_KEY.getRow()));
    TableManager.prepareNewTableState(uuid, RootTable.ID, RootTable.NAME, TableState.ONLINE, NodeExistsPolicy.FAIL);
      for (Entry<String,String> entry : initialMetadataConf.entrySet()) {
        if (!TablePropUtil.setTableProperty(RootTable.ID, entry.getKey(), entry.getValue()))
          throw new IOException(""Cannot create per-table property "" + entry.getKey());
      }","Reduce this switch case number of lines from 12 to at most 5, for example by extracting code into methods."
013d917c3de8f1e8d32397b738025fa5c975e8d8,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaIngester.java,"import java.util.EnumSet;
import org.apache.accumulo.core.client.IteratorSetting;
import org.apache.accumulo.core.client.IteratorSetting.Column;
import org.apache.accumulo.core.iterators.user.SummingCombiner;
import org.apache.accumulo.examples.wikisearch.iterator.GlobalIndexUidCombiner;
import org.apache.accumulo.examples.wikisearch.iterator.TextIndexCombiner;
      // Set a text index combiner on the given field names. No combiner is set if the option is not supplied
      tops.create(tableName);
        System.out.println(""Adding content combiner on the fields: "" + textIndexFamilies);
        IteratorSetting setting = new IteratorSetting(10, TextIndexCombiner.class);
        List<Column> columns = new ArrayList<Column>();
          columns.add(new Column(""fi\0"" + family));
        TextIndexCombiner.setColumns(setting, columns);
        tops.attachIterator(tableName, setting, EnumSet.allOf(IteratorScope.class));
      // Add the UID combiner
      IteratorSetting setting = new IteratorSetting(19, ""UIDAggregator"", GlobalIndexUidCombiner.class);
      GlobalIndexUidCombiner.setCombineAllColumns(setting, true);
      tops.attachIterator(indexTableName, setting, EnumSet.allOf(IteratorScope.class));
      // Add the UID combiner
      IteratorSetting setting = new IteratorSetting(19, ""UIDAggregator"", GlobalIndexUidCombiner.class);
      GlobalIndexUidCombiner.setCombineAllColumns(setting, true);
      tops.attachIterator(reverseIndexTableName, setting, EnumSet.allOf(IteratorScope.class));
      // Add the SummingCombiner with VARLEN encoding for the frequency column
      IteratorSetting setting = new IteratorSetting(10, SummingCombiner.class);
      SummingCombiner.setColumns(setting, Collections.singletonList(new Column(""f"")));
      SummingCombiner.setEncodingType(setting, SummingCombiner.Type.VARLEN);
      tops.attachIterator(metadataTableName, setting, EnumSet.allOf(IteratorScope.class));
    ",Either log or rethrow this exception.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/trace/NullScanner.java,"  
  @Override
  public void setScanIterators(int priority, String iteratorClass, String iteratorName) {}
  
  @Override
  public void addScanIterator(IteratorSetting cfg) {}
  
  @Override
  public void setScanIteratorOption(String iteratorName, String key, String value) {}
  
  @Override
  public void updateScanIteratorOption(String iteratorName, String key, String value) {}
  
  @Override
  public void setupRegex(String iteratorName, int iteratorPriority) throws IOException {}
  
  @Override
  public void setRowRegex(String regex) {}
  
  @Override
  public void setColumnFamilyRegex(String regex) {}
  
  @Override
  public void setColumnQualifierRegex(String regex) {}
  
  @Override
  public void setValueRegex(String regex) {}
  
  @Override
  public void fetchColumnFamily(Text col) {}
  
  @Override
  public void fetchColumn(Text colFam, Text colQual) {}
  
  @Override
  public void clearColumns() {}
  
  @Override
  public void clearScanIterators() {}
  
  @Override
  public void setTimeOut(int timeOut) {}
  
  @Override
  public int getTimeOut() {
    return 0;
  }
  
  @Override
  public void setRange(Range range) {}
  
  @Override
  public Range getRange() {
    return null;
  }
  
  @Override
  public void setBatchSize(int size) {
    
  }
  
  @Override
  public int getBatchSize() {
    return 0;
  }
  
  @Override
  public void enableIsolation() {
    
  }
  
  @Override
  public void disableIsolation() {
    
  }
  
  @Override
  public Iterator<Entry<Key,Value>> iterator() {
    return new NullKeyValueIterator();
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ccaad172643805d56f5dd46cbbc7dcd1a5519cbf,src/trace/src/main/java/org/apache/accumulo/cloudtrace/instrument/impl/RootMilliSpan.java,package org.apache.accumulo.cloudtrace.instrument.impl;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/MidPointPerfTest2.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
e511baa049c58509539ab7eb793c0da97c9d3ef6,proxy/src/test/java/org/apache/accumulo/proxy/TestProxyTableOperations.java,"    assertEquals(tpc.proxy().getMaxRow(userpass, testtable, null, null, true, null, true), ByteBuffer.wrap(""9"".getBytes()));
    assertEquals(tpc.proxy().getMaxRow(userpass, testtable, null, null, true, null, true), ByteBuffer.wrap(""5"".getBytes()));",Return empty string instead.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/constraints/Violations.java,"  
  private static class CVSKey {
    private String className;
    private short vcode;
    CVSKey(ConstraintViolationSummary cvs) {
      this.className = cvs.constrainClass;
      this.vcode = cvs.violationCode;
    @Override
    public int hashCode() {
      return className.hashCode() + vcode;
    @Override
    public boolean equals(Object o) {
      if (o instanceof CVSKey) return equals((CVSKey) o);
      return false;
    public boolean equals(CVSKey ocvsk) {
      return className.equals(ocvsk.className) && vcode == ocvsk.vcode;
  }
  
  private HashMap<CVSKey,ConstraintViolationSummary> cvsmap;
  
  public Violations() {
    cvsmap = new HashMap<CVSKey,ConstraintViolationSummary>();
  }
  
  public boolean isEmpty() {
    return cvsmap.isEmpty();
  }
  
  private void add(CVSKey cvsk, ConstraintViolationSummary cvs) {
    ConstraintViolationSummary existingCvs = cvsmap.get(cvsk);
    if (existingCvs == null) {
      cvsmap.put(cvsk, cvs);
    } else {
      existingCvs.numberOfViolatingMutations += cvs.numberOfViolatingMutations;
  }
  
  public void add(ConstraintViolationSummary cvs) {
    CVSKey cvsk = new CVSKey(cvs);
    add(cvsk, cvs);
  }
  
  public void add(Violations violations) {
    Set<Entry<CVSKey,ConstraintViolationSummary>> es = violations.cvsmap.entrySet();
    for (Entry<CVSKey,ConstraintViolationSummary> entry : es) {
      add(entry.getKey(), entry.getValue());
  }
  
  public void add(List<ConstraintViolationSummary> cvsList) {
    for (ConstraintViolationSummary constraintViolationSummary : cvsList) {
      add(constraintViolationSummary);
  }
  
  public List<ConstraintViolationSummary> asList() {
    return new ArrayList<ConstraintViolationSummary>(cvsmap.values());
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,proxy/src/test/java/org/apache/accumulo/proxy/TestProxyReadWrite.java,"import org.apache.accumulo.proxy.thrift.PrincipalToken;
  protected static PrincipalToken userpass;
    userpass = new PrincipalToken(""root"", ByteBuffer.wrap("""".getBytes()));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,contrib/accumulo_sample/query/src/main/java/iterator/UniqFieldNameValueIterator.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/conf/TableConfiguration.java,import org.apache.accumulo.fate.zookeeper.ZooCache;,"Remove this call to ""exit"" or ensure it is really required."
f423648a208cbcc2a3dd7c82ec427cc6375c1bf8,src/core/src/test/java/org/apache/accumulo/core/iterators/RowDeletingIteratorTest.java,"import junit.framework.TestCase;

  public static class TestIE implements IteratorEnvironment {
    public TestIE(IteratorScope scope, boolean fmc) {","Remove this unused method parameter ""hasStart""."
b9830e783ecead4a8a8719e65bfaaa2d5f696728,core/src/main/java/org/apache/accumulo/core/conf/PropertyType.java,"import org.apache.hadoop.fs.Path;

  ABSOLUTEPATH(""absolute path"", null,
      ""An absolute filesystem path. The filesystem depends on the property. This is the same as path, but enforces that its root is explicitly specified."") {
    public boolean isValidFormat(String value) {
      return new Path(value).isAbsolute();
    }
  },
","Add the ""@Override"" annotation above this method signature"
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/util/CountRowKeys.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
public class CountRowKeys extends Configured implements Tool {
    private static class MyMapper extends Mapper<Key,Value,Text,NullWritable> {
        Text k = new Text();
        
        public void map(Key key, Value value, Context context) throws IOException, InterruptedException {
            context.write(key.getRow(k), NullWritable.get());
        }
    }
    
    private static class MyReducer extends Reducer<Text,NullWritable,Text,Text> {
        public enum Count {
            uniqueRows
        }
        
        public void reduce(Text key, Iterable<NullWritable> values, Context context) throws IOException {
            context.getCounter(Count.uniqueRows).increment(1);
        }
    }
    
    public int run(String[] args) throws IOException, InterruptedException, ClassNotFoundException {
        if (args.length != 2) {
    
    public static void main(String[] args) throws Exception {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/tabletserver/metrics/TabletServerMBean.java,"package org.apache.accumulo.server.tabletserver.metrics;

public interface TabletServerMBean {
	
    public int getOnlineCount();
    public int getOpeningCount();
    public int getUnopenedCount();
    public int getMajorCompactions();
    public int getMajorCompactionsQueued();
    public int getMinorCompactions();
    public int getMinorCompactionsQueued();
    public long getEntries();
    public long getEntriesInMemory();
    public long getQueries();
    public long getIngest();
    public long getTotalMinorCompactions();
    public double getHoldTime();
    public String getName();
    public double getAverageFilesPerTablet();
}",Return empty string instead.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,server/src/main/java/org/apache/accumulo/server/util/FindOfflineTablets.java,"    MetaDataTableScanner scanner = new MetaDataTableScanner(instance, opts.getCredentials(), new Range());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,contrib/accumulo_sample/query/src/main/java/util/FieldIndexKeyParser.java,"package util;

import org.apache.accumulo.core.data.Key;

public class FieldIndexKeyParser extends KeyParser {

    public static final String DELIMITER = ""\0"";
    @Override
    public void parse(Key key)
    {
        super.parse (key);

        String[] colFamParts = this.keyFields.get(BaseKeyParser.COLUMN_FAMILY_FIELD).split(DELIMITER);
        this.keyFields.put(FIELDNAME_FIELD, colFamParts.length >= 2 ? colFamParts[1] : """");

        String[] colQualParts = this.keyFields.get(BaseKeyParser.COLUMN_QUALIFIER_FIELD).split(DELIMITER);
        this.keyFields.put(SELECTOR_FIELD, colQualParts.length >= 1 ? colQualParts[0] : """");
        this.keyFields.put(DATATYPE_FIELD, colQualParts.length >= 2 ? colQualParts[1] : """");
        this.keyFields.put(UID_FIELD, colQualParts.length >= 3 ? colQualParts[2] : """");
    }

    @Override
    public BaseKeyParser duplicate ()
    {
        return new FieldIndexKeyParser();
    }

    @Override
    public String getSelector()
    {
        return keyFields.get(SELECTOR_FIELD);
    }

    @Override
    public String getDataType()
    {
        return keyFields.get(DATATYPE_FIELD);
    }

    @Override
    public String getFieldName ()
    {
        return keyFields.get(FIELDNAME_FIELD);
    }

    @Override
    public String getUid()
    {
        return keyFields.get(UID_FIELD);
    }

    public String getDataTypeUid()
    {
        return getDataType()+DELIMITER+getUid();
    }

    // An alias for getSelector
    public String getFieldValue()
    {
        return getSelector();
    }
}",Return empty string instead.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/util/TablePropUtil.java,"package org.apache.accumulo.server.util;

import org.apache.accumulo.core.Constants;
import org.apache.accumulo.core.conf.Property;
import org.apache.accumulo.core.zookeeper.ZooUtil;
import org.apache.accumulo.core.zookeeper.ZooUtil.NodeExistsPolicy;
import org.apache.accumulo.core.zookeeper.ZooUtil.NodeMissingPolicy;
import org.apache.accumulo.server.client.HdfsZooInstance;
import org.apache.accumulo.server.zookeeper.ZooReaderWriter;
import org.apache.zookeeper.KeeperException;


public class TablePropUtil
{
	public static boolean setTableProperty(String tableId, String property, String value)
	throws KeeperException, InterruptedException
	{
		if(!isPropertyValid(property, value))
			return false;
		
		// create the zk node for per-table properties for this table if it doesn't already exist
		String zkTablePath = getTablePath(tableId);
		ZooReaderWriter.getInstance().putPersistentData(zkTablePath, new byte[0], NodeExistsPolicy.SKIP);

		// create the zk node for this property and set it's data to the specified value
		String zPath = zkTablePath+""/""+property;
		ZooReaderWriter.getInstance().putPersistentData(zPath, value.getBytes(), NodeExistsPolicy.OVERWRITE);
        
		return true;
	}

	public static boolean isPropertyValid(String property, String value) {
		Property p = Property.getPropertyByKey(property);
		if ((p != null && !p.getType().isValidFormat(value)) || !Property.isValidTablePropertyKey(property))
			return false;
		
		return true;
	}
	
	public static void removeTableProperty(String tableId, String property)
	throws InterruptedException, KeeperException
	{
		String zPath = getTablePath(tableId)+""/""+property;
		ZooReaderWriter.getInstance().recursiveDelete(zPath, NodeMissingPolicy.SKIP);
	}
	
	private static String getTablePath(String tablename)
	{
		return ZooUtil.getRoot(HdfsZooInstance.getInstance())+Constants.ZTABLES+""/""+tablename+Constants.ZTABLE_CONF;
	}
}",Return empty string instead.
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/util/DeleteZooInstance.java,"import org.apache.accumulo.fate.zookeeper.IZooReaderWriter;
import org.apache.accumulo.fate.zookeeper.ZooUtil.NodeMissingPolicy;","Remove this call to ""exit"" or ensure it is really required."
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/util/VerifyTabletAssignments.java,"import org.apache.accumulo.server.cli.ClientOpts;
import com.beust.jcommander.Parameter;

  static class Opts extends ClientOpts {
    @Parameter(names={""-v"", ""--verbose""}, description=""verbose mode (prints locations of tablets)"")
    boolean verbose = false;
  }
  
    Opts opts = new Opts();
    opts.parseArgs(VerifyTabletAssignments.class.getName(), args);

    Connector conn = opts.getConnector();
      checkTable(opts, table, null);
  private static void checkTable(final Opts opts, String tableName, HashSet<KeyExtent> check)
      System.out.println(""Checking table "" + tableName);
      System.out.println(""Checking table "" + tableName + "" again, failures "" + check.size());
    Connector conn = opts.getConnector();
    Instance inst = conn.getInstance();
    MetadataTable.getEntries(conn.getInstance(),
        new AuthInfo(opts.user, ByteBuffer.wrap(opts.getPassword()), inst.getInstanceID()), tableName, false, locations, tablets);
      else if (opts.verbose)
    final ServerConfiguration conf = new ServerConfiguration(inst);
            checkTabletServer(conf.getConfiguration(), opts.user, ByteBuffer.wrap(opts.getPassword()), entry, failures);
      checkTable(opts, tableName, failures);","Remove this call to ""exit"" or ensure it is really required."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/security/VisibilityEvaluator.java,"        if (root.children == null || root.children.size() < 2)
          throw new VisibilityParseException(""AND has less than 2 children"", expression, root.start);
          if (!evaluate(expression, child))
            return false;
        if (root.children == null || root.children.size() < 2)
          throw new VisibilityParseException(""OR has less than 2 children"", expression, root.start);
          if (evaluate(expression, child))
            return true;","Remove this call to ""exit"" or ensure it is really required."
5f83564549f7f9e94fb6619c983d8e3d12607e74,core/src/main/java/org/apache/accumulo/core/util/shell/commands/GetGroupsCommand.java,"  public int execute(final String fullCommand, final CommandLine cl, final Shell shellState) throws Exception {
    final String tableName = OptUtil.getTableOpt(cl, shellState);
    final Map<String,Set<Text>> groups = shellState.getConnector().tableOperations().getLocalityGroups(tableName);
    for (Entry<String,Set<Text>> entry : groups.entrySet()) {
    }
    final Options opts = new Options();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
9d13f546ebb1e716c1d25c35225190b1b2805975,src/core/src/main/java/org/apache/accumulo/core/iterators/filter/DeleteFilter.java,"/**
 * @deprecated since 1.4
 * @use org.apache.accumulo.core.iterators.Filter with negate flag set to <tt>true</tt>
 **/","Remove this unused private ""match"" method."
5e72fc1fc41b730445bcda7fe9f75a2aa5427cb0,src/core/src/main/java/org/apache/accumulo/core/client/ScannerBase.java,"   * @see {@link org.apache.accumulo.core.client.ScannerBase#addScanIterator(IteratorSetting)}
   * @see {@link org.apache.accumulo.core.client.ScannerBase#addScanIterator(IteratorSetting)}
   * @see {@link org.apache.accumulo.core.client.ScannerBase#addScanIterator(IteratorSetting)}
   * @see {@link org.apache.accumulo.core.client.ScannerBase#addScanIterator(IteratorSetting)}
   * @see {@link org.apache.accumulo.core.client.ScannerBase#addScanIterator(IteratorSetting)}
   * @see {@link org.apache.accumulo.core.client.ScannerBase#addScanIterator(IteratorSetting)}
   * @see {@link org.apache.accumulo.core.client.ScannerBase#addScanIterator(IteratorSetting)}","Remove this unused method parameter ""scopes""."
e0880e263e4bf8662ba3848405200473a25dfc9f,contrib/cloudtrace-0.2.0/src/main/java/cloudtrace/instrument/TraceProxy.java,"package cloudtrace.instrument;

import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;

public class TraceProxy {
	//private static final Logger log = Logger.getLogger(TraceProxy.class);

	static final Sampler ALWAYS = new Sampler() {
		@Override
		public boolean next() {
			return true;
		}
	};

	public static <T> T trace(T instance) {
        return trace(instance, ALWAYS);
    }

	@SuppressWarnings(""unchecked"")
	public static <T> T trace(final T instance, final Sampler sampler) {
		InvocationHandler handler = new InvocationHandler() {
			@Override
			public Object invoke(Object obj, Method method, Object[] args)
					throws Throwable {
				if (!sampler.next()) {
					return method.invoke(instance, args);
				}
				Span span = Trace.on(method.getName());
				try {
					return method.invoke(instance, args);
				} catch (Throwable ex) {
					ex.printStackTrace();
					throw ex;
				} finally {
					span.stop();
				}
			}
		};
		return (T) Proxy.newProxyInstance(instance.getClass().getClassLoader(),
				instance.getClass().getInterfaces(), handler);
	}

}",Return empty string instead.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,contrib/accumulo_sample/query/src/main/java/util/KeyParser.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
5e72fc1fc41b730445bcda7fe9f75a2aa5427cb0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/SetIterCommand.java,"import java.util.EnumSet;
    EnumSet<IteratorScope> scopes = EnumSet.noneOf(IteratorScope.class);
      scopes.add(IteratorScope.minc);
      scopes.add(IteratorScope.majc);
      scopes.add(IteratorScope.scan);
    if (scopes.isEmpty())
    
    IteratorSetting setting = new IteratorSetting(priority, name, classname, scopes, options);","Remove this unused method parameter ""scopes""."
9ac95f86986a01dfb55ecfdaa1ed3776d2150501,test/src/test/java/org/apache/accumulo/test/functional/SparseColumnFamilyIT.java,  @Test(timeout = 60 * 1000),Either log or rethrow this exception.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,server/src/main/java/org/apache/accumulo/server/security/handler/InsecureAuthenticator.java,"import org.apache.accumulo.core.security.thrift.Credentials;
  public void initializeSecurity(Credentials credentials, String principal, byte[] token) throws AccumuloSecurityException {
  public boolean authenticateUser(String principal, byte[] token) {
  public void createUser(String principal, byte[] token) throws AccumuloSecurityException {
  public void changePassword(String user, byte[] token) throws AccumuloSecurityException {
  public String getAuthorizorName() {
    return null;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/BoundedByteArrayOutputStream.java,"  private final byte[] buffer;
  private int limit;
  private int count;
  
  public BoundedByteArrayOutputStream(int capacity) {
    this(capacity, capacity);
  }
  
  public BoundedByteArrayOutputStream(int capacity, int limit) {
    if ((capacity < limit) || (capacity | limit) < 0) {
      throw new IllegalArgumentException(""Invalid capacity/limit"");
    this.buffer = new byte[capacity];
    this.limit = limit;
    this.count = 0;
  }
  
  @Override
  public void write(int b) throws IOException {
    if (count >= limit) {
      throw new EOFException(""Reaching the limit of the buffer."");
    buffer[count++] = (byte) b;
  }
  
  @Override
  public void write(byte b[], int off, int len) throws IOException {
    if ((off < 0) || (off > b.length) || (len < 0) || ((off + len) > b.length) || ((off + len) < 0)) {
      throw new IndexOutOfBoundsException();
    } else if (len == 0) {
      return;
    if (count + len > limit) {
      throw new EOFException(""Reach the limit of the buffer"");
    System.arraycopy(b, off, buffer, count, len);
    count += len;
  }
  
  public void reset(int newlim) {
    if (newlim > buffer.length) {
      throw new IndexOutOfBoundsException(""Limit exceeds buffer size"");
    this.limit = newlim;
    this.count = 0;
  }
  
  public void reset() {
    this.limit = buffer.length;
    this.count = 0;
  }
  
  public int getLimit() {
    return limit;
  }
  
  public byte[] getBuffer() {
    return buffer;
  }
  
  public int size() {
    return count;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bd77fefdb146ef0dc9bf64b51fb8e8f43c10ce0d,core/src/main/java/org/apache/accumulo/core/master/thrift/MasterMonitorInfo.java,"  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",300 duplicated blocks of code must be removed.
db4a291f944e8a6ad9d63dcbedfa9fe3108f0ead,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaInputFormat.java,"      String [] hosts = null;
      if(in.readBoolean())
      {
        int numHosts = in.readInt();
        hosts = new String[numHosts];
        for(int i = 0; i < numHosts; i++)
          hosts[i] = in.readUTF();
      }
      if(hosts == null)
      {
        out.writeBoolean(false);
      }
      else
      {
        out.writeBoolean(true);
        out.writeInt(hosts.length);
        for(String host:hosts)
      }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
421745a7d4c02ef1bf2a5e1e1c5125d2ce822f72,server/src/main/java/org/apache/accumulo/server/gc/SimpleGarbageCollector.java,"    gc.init(fs, instance, SecurityConstants.getSystemCredentials(), serverConf.getConfiguration().getBoolean(Property.GC_TRASH_IGNORE));",Either log or rethrow this exception.
84a508592afc8fde6e035f6fef7f5990752256f2,core/src/main/java/org/apache/accumulo/core/client/impl/ScannerIterator.java,"import org.apache.accumulo.core.security.tokens.InstanceTokenWrapper;
  private InstanceTokenWrapper credentials;
  ScannerIterator(Instance instance, InstanceTokenWrapper credentials, Text table, Authorizations authorizations, Range range, int size, int timeOut,","Immediately return this expression instead of assigning it to the temporary variable ""ret""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/test/java/org/apache/accumulo/core/data/KeyTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
2496efb93eacc4bd6695cdeaeb4d9acd2917bd91,core/src/main/java/org/apache/accumulo/core/util/shell/commands/TraceCommand.java,"        Trace.on(""shell:"" + shellState.getCredentials().getPrincipal());","Remove this call to ""exit"" or ensure it is really required."
604382ebc3be76dac9eb18bb5a8485bfd2aede07,core/src/main/java/org/apache/accumulo/core/util/Merge.java,"    byte[] password = ""secret"".getBytes();
    if (commandLine.hasOption(""u"")) {
    	table = commandLine.getOptionValue(""u"");
    }
    if (commandLine.hasOption(""p"")) {
        password = commandLine.getOptionValue(""p"").getBytes();
    }
    	end = new Text(commandLine.getOptionValue(""e""));","Remove this unused method parameter ""tservers""."
69218e7e989b6f1d65afabce9c5b5ab0e3204141,server/src/main/java/org/apache/accumulo/server/util/AddFilesWithMissingEntries.java,"    final Key rootTableEnd = new Key(RootTable.EXTENT.getEndRow());
    final Range range = new Range(rootTableEnd.followingKey(PartialKey.ROW), true, MetadataTable.RESERVED_RANGE_START_KEY, false);","Reduce this switch case number of lines from 12 to at most 5, for example by extracting code into methods."
6a5500a5b3f34b26386877e332973e7b926aa4ce,core/src/main/java/org/apache/accumulo/core/util/shell/commands/CreateUserCommand.java,"import org.apache.accumulo.core.security.Authorizations;
    shellState.getConnector().securityOperations().createUser(user, password.getBytes(), new Authorizations());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
20d587c571bc0bb7fc8251c9e6701fe843291837,server/src/main/java/org/apache/accumulo/server/master/state/ZooStore.java,      ZooReaderWriter.getInstance().sync(path);,Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
5c97efc2576278f4b8b6b004ded78c98251cda24,core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/IteratorConfig.java,"                org.apache.thrift.protocol.TList _list98 = iprot.readListBegin();
                struct.iterators = new ArrayList<TIteratorSetting>(_list98.size);
                for (int _i99 = 0; _i99 < _list98.size; ++_i99)
                  TIteratorSetting _elem100; // required
                  _elem100 = new TIteratorSetting();
                  _elem100.read(iprot);
                  struct.iterators.add(_elem100);
          for (TIteratorSetting _iter101 : struct.iterators)
            _iter101.write(oprot);
          for (TIteratorSetting _iter102 : struct.iterators)
            _iter102.write(oprot);
          org.apache.thrift.protocol.TList _list103 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.iterators = new ArrayList<TIteratorSetting>(_list103.size);
          for (int _i104 = 0; _i104 < _list103.size; ++_i104)
            TIteratorSetting _elem105; // required
            _elem105 = new TIteratorSetting();
            _elem105.read(iprot);
            struct.iterators.add(_elem105);",Return empty string instead.
ae6551d8f7566204bf43b444793831f44be48352,test/src/test/java/org/apache/accumulo/test/MetaSplitTest.java,"import org.apache.accumulo.minicluster.MiniAccumuloCluster;
import org.apache.accumulo.minicluster.MiniAccumuloConfig;
    
  private void addSplits(TableOperations opts, String... points) throws Exception {",Either log or rethrow this exception.
2496efb93eacc4bd6695cdeaeb4d9acd2917bd91,server/src/main/java/org/apache/accumulo/server/trace/TraceServer.java,import org.apache.accumulo.core.security.SecurityUtil;,"Remove this call to ""exit"" or ensure it is really required."
446a37a9795f2df7adc841154ca05add79cf286e,core/src/main/java/org/apache/accumulo/core/data/KeyExtent.java,"import org.apache.accumulo.core.metadata.MetadataTable;
import org.apache.accumulo.core.metadata.RootTable;
import org.apache.accumulo.core.metadata.schema.MetadataSchema;
import org.apache.accumulo.core.metadata.schema.MetadataSchema.TabletsSection;
  public static Text getMetadataEntry(Text tableId, Text endRow) {
    return MetadataSchema.TabletsSection.getRow(tableId, endRow);
    TabletsSection.TabletColumnFamily.PREV_ROW_COLUMN.put(m, encodePrevEndRow(ke.getPrevEndRow()));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
6501e03f49ce3a70ac2a0dd95312fcca1d55ad19,server/src/main/java/org/apache/accumulo/server/data/ServerMutation.java,"  protected void droppingOldTimestamp(long ts) {
    this.systemTime = ts;
  }

    if (getSerializedFormat() == SERIALIZED_FORMAT.VERSION2)","Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/examples/src/main/java/org/apache/accumulo/examples/constraints/MaxMutationSize.java,"package org.apache.accumulo.examples.constraints;

import java.util.Collections;
import java.util.List;

import org.apache.accumulo.core.constraints.Constraint;
import org.apache.accumulo.core.data.Mutation;


/**
 * Ensure that mutations are a reasonable size: we must be able to fit several in memory at a time. 
 *
 */
public class MaxMutationSize implements Constraint {
    static final long MAX_SIZE = Runtime.getRuntime().maxMemory() >> 8;
    static final List<Short> empty = Collections.emptyList();
    static final List<Short> violations = Collections.singletonList(new Short((short)0));
    
    @Override
    public String getViolationDescription(short violationCode) {
        return String.format(""mutation exceeded maximum size of %d"", MAX_SIZE);
    }

    @Override
    public List<Short> check(Environment env, Mutation mutation) {
        if (mutation.estimatedMemoryUsed() < MAX_SIZE)
            return empty;
        return violations;
    }
}",Return empty string instead.
538b02d233413d6b5afbdeadda37e72e6138a379,core/src/main/java/org/apache/accumulo/core/security/handler/Authenticator.java,"    private boolean masked;
    public AuthProperty(String name, String description, boolean mask) {
      this.masked = mask;
    
    public boolean getMask() {
      return this.masked;
    }","Rename ""principal"" which hides the field declared at line 173."
398bc97b1b550cc663f2760a7bebcc2e21c5af41,server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousVerify.java,"    @Override
    @Override
    @Parameter(names = ""--output"", description = ""location in HDFS to store the results; must not exist"", required = true)
    @Parameter(names = ""--maxMappers"", description = ""the maximum number of mappers to use"", required = true, validateWith = PositiveInteger.class)
    @Parameter(names = ""--reducers"", description = ""the number of reducers to use"", required = true, validateWith = PositiveInteger.class)
    @Parameter(names = ""--offline"", description = ""perform the verification directly on the files while the table is offline"")
    public Opts() {
      super(""ci"");
    }
    
    
    AccumuloInputFormat.setOfflineTableScan(job, opts.scanOffline);
    
      AccumuloInputFormat.setRanges(job, ranges);
      AccumuloInputFormat.setAutoAdjustRanges(job, false);
    ",Move this variable to comply with Java Code Conventions.
0811c7958ecc1a9a2c8f80702273856f1cd2eab8,src/server/src/main/java/org/apache/accumulo/server/trace/TraceFileSystem.java,"import org.apache.accumulo.cloudtrace.instrument.Span;
import org.apache.accumulo.cloudtrace.instrument.Trace;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/ProblemServlet.java,"    if (Monitor.getProblemSummary().isEmpty() && Monitor.getProblemException() == null)
      return;
        if (cause.getMessage() != null)
          cell.append(""<br />\n caused by : "" + cause.getMessage());
    if (Monitor.getProblemException() != null)
      return;
      if (obj == null)
        return ""-"";
      if (obj == null)
        return ""-"";
      if (obj == null)
        return ""-"";","Remove this call to ""exit"" or ensure it is really required."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloOutputFormat.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ed0f9eef789024e70538194f12f5e5126975ae97,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/shard/ContinuousQuery.java," * the shard table (created by {@link Index}) using the {@link IntersectingIterator}.
 * See docs/examples/README.shard for instructions.
    
      
    ",Replace this use of System.out or System.err by a logger.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/test/java/org/apache/accumulo/core/iterators/CombinerTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
9d13f546ebb1e716c1d25c35225190b1b2805975,src/server/src/main/java/org/apache/accumulo/server/upgrade/UpgradeMetadataTable.java,import org.apache.accumulo.core.iterators.user.VersioningIterator;,"Remove this unused private ""match"" method."
cf8b052d2bbe8cbad2430202250b89a13d3ef47f,src/server/src/main/java/org/apache/accumulo/server/monitor/Monitor.java,"  public static double getLookupRate() {
    return lookupRateTracker.calculateRate();
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
84a508592afc8fde6e035f6fef7f5990752256f2,examples/simple/src/test/java/org/apache/accumulo/examples/simple/dirlist/CountTest.java,"import java.util.concurrent.TimeUnit;
import org.apache.accumulo.core.client.BatchWriterConfig;
import org.apache.accumulo.core.security.tokens.UserPassToken;
      Connector conn = new MockInstance(""counttest"").getConnector(new UserPassToken(""root"", """"));
      BatchWriter bw = conn.createBatchWriter(""dirlisttable"", new BatchWriterConfig().setMaxMemory(1000000l).setMaxLatency(100l, TimeUnit.SECONDS).setMaxWriteThreads(1));
    Scanner scanner = new MockInstance(""counttest"").getConnector(new UserPassToken(""root"", """")).createScanner(""dirlisttable"", new Authorizations());","Immediately return this expression instead of assigning it to the temporary variable ""ret""."
7942da1d204d271bff01e9e93208cdd67d0eefa3,server/src/main/java/org/apache/accumulo/server/security/handler/ZKAuthorizor.java,"import org.apache.accumulo.core.security.thrift.TCredentials;
  public void initializeSecurity(TCredentials itw, String rootuser) throws AccumuloSecurityException {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
11dcaf7451a57b21c125610bc5c0138eb5db5da3,server/src/main/java/org/apache/accumulo/server/master/state/RootTabletStateStore.java,"    return new MetaDataTableScanner(instance, auths, Constants.METADATA_ROOT_TABLET_KEYSPACE, state);",Complete the task associated to this TODO comment.
55ddd27058e2475ba1bc870a66fb5d3777934eec,src/core/src/test/java/org/apache/accumulo/core/iterators/FilteringIteratorTest.java,"/**
 * @deprecated since 1.4
 */",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/QuestionCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
111e48dc70a43d44d6d01540cad5f973e2933882,src/core/src/main/java/org/apache/accumulo/core/client/impl/ScannerOptions.java,"        throw new IllegalArgumentException(""Iterator name is already in use "" + si.getName());
  @Override
  public synchronized void removeScanIterator(String iteratorName) {
    ArgumentChecker.notNull(iteratorName);
    // if no iterators are set, we don't have it, so it is already removed
    if (serverSideIteratorList.size() == 0)
      return;
    
    for (IterInfo ii : serverSideIteratorList) {
      if (ii.iterName.equals(iteratorName)) {
        serverSideIteratorList.remove(ii);
        break;
      }
    }
    
    serverSideIteratorOptions.remove(iteratorName);
  }
  ",Define and throw a dedicated exception instead of using a generic one.
69218e7e989b6f1d65afabce9c5b5ab0e3204141,server/src/main/java/org/apache/accumulo/server/master/tableOps/CompactRange.java,"      range = range.clip(new Range(RootTable.EXTENT.getMetadataEntry(), false, null, true));","Reduce this switch case number of lines from 12 to at most 5, for example by extracting code into methods."
87df5f68e2e29a6ff0445f08dca6be9dc65c6039,server/src/main/java/org/apache/accumulo/server/master/recovery/HadoopLogCloser.java,"package org.apache.accumulo.server.master.recovery;

import java.io.IOException;

import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.LocalFileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.hdfs.DistributedFileSystem;
import org.apache.log4j.Logger;

public class HadoopLogCloser implements LogCloser {
  
  private static Logger log = Logger.getLogger(HadoopLogCloser.class);

  @Override
  public long close(FileSystem fs, Path source) throws IOException {
    
    if (fs instanceof DistributedFileSystem) {
      DistributedFileSystem dfs = (DistributedFileSystem) fs;
      try {
        if (!dfs.recoverLease(source)) {
          log.info(""Waiting for file to be closed "" + source.toString());
          return 1000;
        }
        log.info(""Recovered lease on "" + source.toString());
        return 0;
      } catch (IOException ex) {
        log.warn(""Error recovery lease on "" + source.toString(), ex);
      }
    } else if (fs instanceof LocalFileSystem) {
      // ignore
    } else {
      throw new IllegalStateException(""Don't know how to recover a lease for "" + fs.getClass().getName());
    }
    fs.append(source).close();
    log.info(""Recovered lease on "" + source.toString() + "" using append"");
    return 0;
  }
  
}","Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
31990b212bcc68b9658ee33a54a9541e028a6209,core/src/main/java/org/apache/accumulo/core/client/admin/SecurityOperations.java,"   * @deprecated Use {@link #createUser(SecurityToken)} instead
  
   * @param token
   *          the security token with the information about the user to create
  @Deprecated
  
   * @since 1.5
   * @deprecated @since 1.5, use {@link #changeUserPassword(SecurityToken)}
  @Deprecated
   * @param newToken
   *          the security token with the information about the user to modify
  
  @Deprecated",Remove this empty statement.
5bd33fa1e9625e3c088ee39f626c256aca75b0da,examples/simple/src/main/java/org/apache/accumulo/examples/simple/dirlist/Ingest.java,"import org.apache.accumulo.core.client.BatchWriterConfig;
    BatchWriter dirBW = conn.createBatchWriter(nameTable, new BatchWriterConfig());
    BatchWriter indexBW = conn.createBatchWriter(indexTable, new BatchWriterConfig());
    BatchWriter dataBW = conn.createBatchWriter(dataTable, new BatchWriterConfig());","Remove this unused method parameter ""e""."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/test/WrongTabletTest.java,"package org.apache.accumulo.server.test;

import java.nio.ByteBuffer;

import org.apache.accumulo.core.data.KeyExtent;
import org.apache.accumulo.core.data.Mutation;
import org.apache.accumulo.core.security.thrift.AuthInfo;
import org.apache.accumulo.core.tabletserver.thrift.TabletClientService;
import org.apache.accumulo.core.util.ThriftUtil;
import org.apache.accumulo.server.client.HdfsZooInstance;
import org.apache.accumulo.server.conf.ServerConfiguration;
import org.apache.hadoop.io.Text;


public class WrongTabletTest {
	private static AuthInfo rootCredentials = new AuthInfo(""root"", ByteBuffer.wrap(""secret"".getBytes()), HdfsZooInstance.getInstance().getInstanceID());
	
	public static void main(String[] args) {
	    String location = args[0];
		try {
			TabletClientService.Iface client = ThriftUtil.getTServerClient(location,ServerConfiguration.getSystemConfiguration());
			
			Mutation mutation = new Mutation(new Text(""row_0003750001""));
			//mutation.set(new Text(""colf:colq""), new Value(""val"".getBytes()));
			mutation.putDelete(new Text(""colf""), new Text(""colq""));
			client.update(null, rootCredentials, new KeyExtent(new Text(""test_ingest""), null, new Text(""row_0003750000"")).toThrift(), mutation.toThrift());
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}
}",Return empty string instead.
a1c5667873834cdd74cb3eb5a19ec25486fba290,core/src/main/java/org/apache/accumulo/core/util/shell/commands/UserPermissionsCommand.java,"    shellState.getReader().print(""System permissions: "");
        shellState.getReader().print(delim + ""System."" + p.name());
    shellState.getReader().println();
            shellState.getReader().print(""\nTable permissions ("" + t + ""): "");
          shellState.getReader().print(delim + ""Table."" + p.name());
    shellState.getReader().println();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/file/FileOperations.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
05b3359b9c6643cbdb2284afead9a0dcac2a9300,test/src/main/java/org/apache/accumulo/test/performance/thrift/NullTserver.java,"        List<IterInfo> ssiList, Map<String,Map<String,String>> ssio, List<ByteBuffer> authorizations, boolean waitForWrites, boolean isolated, long readaheadThreshold) {",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/unit/DeleteTable.java,"  
  @Override
  public void visit(State state, Properties props) throws Exception {}",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
7268940897ff896616e8e5e49deb00e396ea73bf,server/src/test/java/org/apache/accumulo/server/tabletserver/InMemoryMapTest.java,  // @Test - hard to get this timing test to run well on apache build machines,"Define a constant instead of duplicating this literal ""sender"" 20 times."
98cd224fc0c5e1e0cd2cbf407599c2bd69228c9d,core/src/test/java/org/apache/accumulo/core/conf/PropertyTest.java,"import java.util.Iterator;
import java.util.Map.Entry;
import java.util.TreeMap;
import java.util.TreeSet;
    if (System.getProperty(""os.name"").toLowerCase().contains(""windows""))
      typeCheckValidFormat(PropertyType.ABSOLUTEPATH, ""d:\\foo12"", ""c:\\foo\\g"", ""c:\\foo\\c"", ""c:\\"");
  
  @Test
  public void testSensitiveKeys() {
    final TreeMap<String,String> extras = new TreeMap<String,String>();
    extras.put(""trace.token.property.blah"", ""something"");
    
    AccumuloConfiguration conf = new DefaultConfiguration() {
      @Override
      public Iterator<Entry<String,String>> iterator() {
        final Iterator<Entry<String,String>> parent = super.iterator();
        final Iterator<Entry<String,String>> mine = extras.entrySet().iterator();
        
        return new Iterator<Entry<String,String>>() {
          
          @Override
          public boolean hasNext() {
            return parent.hasNext() || mine.hasNext();
          }
          
          @Override
          public Entry<String,String> next() {
            return parent.hasNext() ? parent.next() : mine.next();
          }
          
          @Override
          public void remove() {
            throw new UnsupportedOperationException();
          }
        };
      }
    };
    TreeSet<String> expected = new TreeSet<String>();
    for (Entry<String,String> entry : conf) {
      String key = entry.getKey();
      if (key.equals(Property.INSTANCE_SECRET.getKey()) || key.toLowerCase().contains(""password"") || key.toLowerCase().contains(""secret"")
          || key.startsWith(Property.TRACE_TOKEN_PROPERTY_PREFIX.getKey()))
        expected.add(key);
    }
    TreeSet<String> actual = new TreeSet<String>();
    for (Entry<String,String> entry : conf) {
      String key = entry.getKey();
      if (Property.isSensitive(key))
        actual.add(key);
    }
    assertEquals(expected, actual);
  }","Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
8dccbe7e9960c204bf82326c9fe6e28dcb8d647e,core/src/main/java/org/apache/accumulo/core/master/thrift/TabletServerStatus.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",296 duplicated blocks of code must be removed.
aa7110234e15a017bb1dbc99b4351f0bf06cc73b,test/src/test/java/org/apache/accumulo/test/functional/BinaryIT.java,"

  @Test(timeout = 60 * 1000)

",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
3ae2b169d30ad1f39cc50540ddb0eb22321ada5d,core/src/main/java/org/apache/accumulo/core/client/impl/TabletLocator.java,"  public abstract TabletLocation locateTablet(Text row, boolean skipRow, boolean retry, TCredentials credentials) throws AccumuloException,
      AccumuloSecurityException, TableNotFoundException;
  public abstract void binMutations(List<Mutation> mutations, Map<String,TabletServerMutations> binnedMutations, List<Mutation> failures,
      TCredentials credentials) throws AccumuloException, AccumuloSecurityException, TableNotFoundException;
  public abstract List<Range> binRanges(List<Range> ranges, Map<String,Map<KeyExtent,List<Range>>> binnedRanges, TCredentials credentials)
      throws AccumuloException, AccumuloSecurityException, TableNotFoundException;
  public static synchronized TabletLocator getInstance(Instance instance, Text tableId) {
      MetadataLocationObtainer mlo = new MetadataLocationObtainer(instance);
          public TabletLocation _locateTablet(Text row, boolean skipRow, boolean retry, boolean lock, TCredentials credentials) throws AccumuloException, AccumuloSecurityException,
              return parent.locateTablet(row, skipRow, retry, credentials);
            return super._locateTablet(row, skipRow, retry, lock, credentials);
        TabletLocator rootTabletCache = getInstance(instance, new Text(Constants.METADATA_TABLE_ID));
  ",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
bcaefcd2ed4f8807ca6a042580ca17da69f4d60d,test/src/test/java/org/apache/accumulo/test/ShellServerIT.java,"    // wait for zookeeper updates to propagate
    UtilWaitThread.sleep(1000);",Remove this unused import 'org.apache.hadoop.fs.FileSystem'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/SystemPermissionsCommand.java,"package org.apache.accumulo.core.util.shell.commands;

import java.io.IOException;

import org.apache.accumulo.core.security.SystemPermission;
import org.apache.accumulo.core.util.shell.Shell;
import org.apache.accumulo.core.util.shell.Shell.Command;
import org.apache.commons.cli.CommandLine;


public class SystemPermissionsCommand extends Command {
	@Override
	public int execute(String fullCommand, CommandLine cl, Shell shellState) throws IOException {
		for (String p : SystemPermission.printableValues())
			shellState.getReader().printString(p + ""\n"");
		return 0;
	}

	@Override
	public String description() {
		return ""displays a list of valid system permissions"";
	}

	@Override
	public int numArgs() {
		return 0;
	}
}",Return empty string instead.
563ab0e74fdf337a12ccda65cd31f7248aafa39d,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaPartitionedMapper.java,"import org.apache.accumulo.core.client.AccumuloException;
import org.apache.accumulo.core.client.AccumuloSecurityException;
import org.apache.accumulo.core.client.MultiTableBatchWriter;
  MultiTableBatchWriter mtbw;
    try {
      mtbw = WikipediaConfiguration.getConnector(conf).createMultiTableBatchWriter(10000000, 1000, 10);
    } catch (AccumuloException e) {
      throw new RuntimeException(e);
    } catch (AccumuloSecurityException e) {
      throw new RuntimeException(e);
    }
    
            mtbw.getBatchWriter(indexTableNameFinal.toString()).addMutation(m);
            mtbw.getBatchWriter(reverseIndexTableNameFinal.toString()).addMutation(m);
              mtbw.getBatchWriter(metadataTableNameFinal.toString()).addMutation(m);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
63401308a8fc8ff7ad54afa3e8bb2d93e1971a74,core/src/main/java/org/apache/accumulo/core/file/rfile/RFile.java,"              if (cfSet.contains(entry.getKey())) {
              } else if (!inclusive) {
              }
          lgr.seek(range, EMPTY_CF_SET, false);
          addSource(lgr);","Use ""Integer.toString"" instead."
add180fb7f718b6bcbc256c7787225cde602d2c5,src/core/src/test/java/org/apache/accumulo/core/client/admin/TableOperationsHelperTest.java,      return true;,Either log or rethrow this exception.
3be979b3598d87b498a5b02d380e5249fd73e10f,server/src/main/java/org/apache/accumulo/server/logger/LogService.java,"import org.apache.accumulo.server.security.SecurityOperation;
import org.apache.accumulo.server.security.SecurityOperationImpl;
  private final SecurityOperation security;
    security = SecurityOperationImpl.getInstance();
      if (!security.hasSystemPermission(credentials, credentials.user, SystemPermission.SYSTEM)) {
    } catch (ThriftSecurityException e) {
      throw e;","Remove this unused method parameter ""ex""."
7956de7fec33bc25087e4589fde01d8705e6cfcc,src/core/src/main/java/org/apache/accumulo/core/iterators/ValueFormatException.java,"/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.iterators;

/**
 * Exception used for TypedValueCombiner and it's Encoders decode() function
 */
public class ValueFormatException extends IllegalArgumentException {
  
  /**
   * @param string
   */
  public ValueFormatException(String string) {
    super(string);
  }

  /**
   * @param nfe
   */
  public ValueFormatException(Exception nfe) {
    super(nfe);
  }

  private static final long serialVersionUID = 4170291568272971821L;
  
}",Move this variable to comply with Java Code Conventions.
99da5641c28784c7b717cce6749673863c2ec8cf,server/src/main/java/org/apache/accumulo/server/problems/ProblemReport.java,"    MetadataTableUtil.getMetadataTable(SystemCredentials.get()).update(m);
    MetadataTableUtil.getMetadataTable(SystemCredentials.get()).update(m);","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
42491533f6e743ed2b26519c556133f5e5f65132,core/src/main/java/org/apache/accumulo/core/util/shell/commands/InsertCommand.java,import org.apache.accumulo.core.client.security.SecurityErrorCode;,Do not forget to remove this deprecated code someday.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/parser/JexlOperatorConstants.java,package org.apache.accumulo.examples.wikisearch.parser;,"Rename ""table"" which hides the field declared at line 107."
bd53853cb8355cd8a81de9fe2cba214fc44fff34,server/src/main/java/org/apache/accumulo/server/master/tableOps/ImportTable.java,import org.apache.accumulo.core.util.FastFormat;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c41a19f0eb25f7354637fe1570657d4e1d1a0264,src/server/src/main/java/org/apache/accumulo/server/test/CreateRandomMapFile.java,"/**
 * @deprecated since 1.4
 * @see CreateRandomRFile
 */",6 duplicated blocks of code must be removed.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchDeleter.java,"  
  private Instance instance;
  private AuthInfo credentials;
  private String tableId;
  private long maxMemory;
  private long maxLatency;
  private int maxWriteThreads;
  
  public TabletServerBatchDeleter(Instance instance, AuthInfo credentials, String tableId, Authorizations authorizations, int numQueryThreads, long maxMemory,
      long maxLatency, int maxWriteThreads) throws TableNotFoundException {
    super(instance, credentials, tableId, authorizations, numQueryThreads);
    this.instance = instance;
    this.credentials = credentials;
    this.tableId = tableId;
    this.maxMemory = maxMemory;
    this.maxLatency = maxLatency;
    this.maxWriteThreads = maxWriteThreads;
  }
  
  @Override
  public synchronized void setValueRegex(String regex) {
    throw new UnsupportedOperationException(""Cannot filter on value with deleter; Write your own deleter"");
  }
  
  @Override
  public void delete() throws MutationsRejectedException, TableNotFoundException {
    super.addScanIterator(new IteratorSetting(Integer.MAX_VALUE, BatchDeleter.class.getName() + "".NOVALUE"", SortedKeyIterator.class));
    BatchWriter bw = null;
    try {
      bw = new BatchWriterImpl(instance, credentials, tableId, maxMemory, maxLatency, maxWriteThreads);
      Iterator<Entry<Key,Value>> iter = super.iterator();
      while (iter.hasNext()) {
        Entry<Key,Value> next = iter.next();
        Key k = next.getKey();
        Mutation m = new Mutation(k.getRow());
        m.putDelete(k.getColumnFamily(), k.getColumnQualifier(), new ColumnVisibility(k.getColumnVisibility()), k.getTimestamp());
        bw.addMutation(m);
      }
    } finally {
      if (bw != null) bw.close();
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a8eed5b2b329b35cae88136e1b4ea71cc875f737,server/src/main/java/org/apache/accumulo/server/test/randomwalk/security/ChangePass.java,"import org.apache.accumulo.core.security.SystemPermission;
import org.apache.accumulo.core.security.thrift.SecurityErrorCode;
    String sourceUser;
      conn = SecurityHelper.getSystemConnector(state);
      sourceUser = SecurityHelper.getSysUserName(state);
      sourceUser = SecurityHelper.getTabUserName(state);
      try {
        conn = state.getInstance().getConnector(sourceUser, (SecurityHelper.getTabUserPass(state)));
      } catch (AccumuloSecurityException ae) {
        if (ae.getErrorCode().equals(SecurityErrorCode.BAD_CREDENTIALS)) {
          if (SecurityHelper.getTabUserExists(state))
            throw new AccumuloException(""Got a security exception when the user should have existed"", ae);
          else
            return;
        }
        throw new AccumuloException(""Unexpected exception!"", ae);
      }
    boolean hasPerm = true;
    if (!source.equals(target))
      hasPerm = SecurityHelper.getSysPerm(state, sourceUser, SystemPermission.ALTER_USER);
    
    boolean targetExists = true;
    boolean targetSystem = true;
      targetSystem = false;
      if (!SecurityHelper.getTabUserExists(state))
        targetExists = false;
      target = SecurityHelper.getTabUserName(state);
      target = SecurityHelper.getSysUserName(state);
          if (!SecurityHelper.sysUserPassTransient(state))
    if (targetSystem) {
      SecurityHelper.setSysUserPass(state, newPass);
    } else
      SecurityHelper.setTabUserPass(state, newPass);",Either log or rethrow this exception.
933d760dddf8a6e135d0cf7b3a9ea9c95599e559,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/iterator/FieldIndexIterator.java,"import org.apache.commons.jexl2.Expression;
import org.apache.commons.jexl2.JexlContext;
import org.apache.commons.jexl2.JexlEngine;
import org.apache.commons.jexl2.MapContext;
import org.apache.commons.jexl2.parser.ParserTreeConstants;
import org.apache.hadoop.io.Text;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;
      if (log.isDebugEnabled()) {
        String myRow = """";
        if (hasTop()) {
          myRow = topKey.getRow().toString();
        } else if (currentRow != null) {
          myRow = currentRow.toString();
        }
        log.debug(""My row "" + myRow + "" is less than jump row: "" + jumpKey.getRow() + "" seeking"");
        
        Text cq = jumpKey.getColumnQualifier();
        int index = cq.find(NULL_BYTE);
        if (0 <= index) {
          cq.set(cq.getBytes(), index + 1, cq.getLength() - index - 1);
        } else {
          log.error(""Expected a NULL separator in the column qualifier"");
          this.topKey = null;
          this.topValue = null;
          return false;
        }

        Key startKey = new Key(topKey.getRow(), fName, new Text(fValue + NULL_BYTE + cq));",31 duplicated blocks of code must be removed.
35f8e2b1868cea9849efae7fae21e8ac789a0817,core/src/main/java/org/apache/accumulo/core/iterators/user/RegExFilter.java,"import java.nio.charset.Charset;

  private static final Charset utf8 = Charset.forName(""UTF8"");  
        String test = new String(""test"".getBytes(utf8), encoding);",Move this variable to comply with Java Code Conventions.
52911c52255a7643214587fe83eb40f1ea5802fd,src/core/src/test/java/org/apache/accumulo/core/client/mapreduce/AccumuloInputFormatTest.java,"   * Test adding iterator options where the keys and values contain both the FIELD_SEPARATOR character (':') and ITERATOR_SEPARATOR (',') characters. There
   * should be no exceptions thrown when trying to parse these types of option entries.
   * 
   * This test makes sure that the expected raw values, as appears in the Job, are equal to what's expected.
   */
  @Test
  public void testIteratorOptionEncoding() throws Throwable {
    String key = ""colon:delimited:key"";
    String value = ""comma,delimited,value"";
    IteratorSetting someSetting = new IteratorSetting(1, ""iterator"", ""Iterator.class"");
    someSetting.addOption(key, value);
    Job job = new Job();
    AccumuloInputFormat.addIterator(job, someSetting);
    
    final String rawConfigOpt = new AccumuloIteratorOption(""iterator"", key, value).toString();
    
    assertEquals(rawConfigOpt, job.getConfiguration().get(""AccumuloInputFormat.iterators.options""));
    
    List<AccumuloIteratorOption> opts = AccumuloInputFormat.getIteratorOptions(job);
    assertEquals(1, opts.size());
    assertEquals(opts.get(0).getKey(), key);
    assertEquals(opts.get(0).getValue(), value);
    
    someSetting.addOption(key + ""2"", value);
    someSetting.setPriority(2);
    someSetting.setName(""it2"");
    AccumuloInputFormat.addIterator(job, someSetting);
    opts = AccumuloInputFormat.getIteratorOptions(job);
    assertEquals(3, opts.size());
    for (AccumuloIteratorOption opt : opts) {
      assertEquals(opt.getKey().substring(0, key.length()), key);
      assertEquals(opt.getValue(), value);
    }
  }
  
  /**","Remove the literal ""true"" boolean value."
b1379140bcea2c529ce98e6bfcb1d007d58c0adc,core/src/test/java/org/apache/accumulo/core/client/ClientSideIteratorTest.java,"      assertTrue(entry.getKey().equals(results.get(i++), pk));",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/examples/src/test/java/org/apache/accumulo/examples/filedata/ChunkCombinerTest.java,"      if (iter.hasNext())
        entry = iter.next();
      else
        entry = null;
        if (range.afterEndKey((Key) entry.getKey()))
          entry = null;
      if (reseek)
        iter.seek(new Range(iter.getTopKey().followingKey(PartialKey.ROW_COLFAM_COLQUAL), true, null, true), cols, true);
      else
        iter.next();","Remove this call to ""exit"" or ensure it is really required."
9dc244484b4d35859d4d22b27580a47ae7da0e1a,core/src/main/java/org/apache/accumulo/core/client/impl/TabletLocatorImpl.java,"  public <T extends Mutation> void binMutations(List<T> mutations, Map<String,TabletServerMutations<T>> binnedMutations, List<T> failures,
      TCredentials credentials) throws AccumuloException, AccumuloSecurityException, TableNotFoundException {
    ArrayList<T> notInCache = new ArrayList<T>();
      for (T mutation : mutations) {
        for (T mutation : notInCache) {
  private <T extends Mutation> void addMutation(Map<String,TabletServerMutations<T>> binnedMutations, T mutation, TabletLocation tl) {
    TabletServerMutations<T> tsm = binnedMutations.get(tl.tablet_location);
      tsm = new TabletServerMutations<T>();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ed0f9eef789024e70538194f12f5e5126975ae97,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/client/RandomBatchWriter.java,"/**
 * Simple example for writing random data to Accumulo. See docs/examples/README.batch for instructions.
 * 
 * The rows of the entries will be randomly generated numbers between a specified min and max (prefixed by ""row_""). The column families will be ""foo"" and column
 * qualifiers will be ""1"". The values will be random byte arrays of a specified size.
 */
  /**
   * Creates a random byte array of specified size using the specified seed.
   * 
   * @param rowid
   *          the seed to use for the random number generator
   * @param dataSize
   *          the size of the array
   * @return a random byte array
   */
  /**
   * Creates a mutation on a specified row with column family ""foo"", column qualifier ""1"", specified visibility, and a random value of specified size.
   * 
   * @param rowid
   *          the row of the mutation
   * @param dataSize
   *          the size of the random value
   * @param visibility
   *          the visibility of the entry to insert
   * @return a mutation
   */
  /**
   * Writes a specified number of entries to Accumulo using a {@link BatchWriter}.
   * 
   * @throws AccumuloException
   * @throws AccumuloSecurityException
   * @throws TableNotFoundException
   */",Replace this use of System.out or System.err by a logger.
e0880e263e4bf8662ba3848405200473a25dfc9f,contrib/cloudtrace-0.2.0/src/main/java/cloudtrace/instrument/receivers/SpanReceiver.java,"package cloudtrace.instrument.receivers;

import java.util.Map;

/**
 * The collector within a process that is the destination of Spans when a trace is running.
 */
public interface SpanReceiver {
    void span(long traceId, long spanId, long parentId, long start, long stop, String description,
                     Map<String, String> data);
    void flush();
}",Return empty string instead.
02a26268575ac93d74796ec8fd8798f85b92dac1,core/src/main/java/org/apache/accumulo/core/util/shell/commands/AddSplitsCommand.java,          splits.add(decode ? new Text(Base64.decodeBase64(line.getBytes())) : new Text(line));,"Remove this unused method parameter ""ex""."
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,core/src/main/java/org/apache/accumulo/core/cli/ClientOpts.java,"import org.apache.accumulo.core.security.tokens.SecurityToken;
  public SecurityToken getAccumuloToken() {
  public void setAccumuloConfigs(Job job) throws AccumuloSecurityException {",Either log or rethrow this exception.
86066e645d2ebe86659fa699482ab1a523286bc5,src/core/src/test/java/org/apache/accumulo/core/util/MergeTest.java,"import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
",Replace all tab characters in this file by sequences of white-spaces.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/CheckPermission.java,"package org.apache.accumulo.test.randomwalk.concurrent;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
c8225f6b6816f8f11b83b012b546572d2f36dc17,src/server/src/main/java/org/apache/accumulo/server/tabletserver/log/RemoteLogger.java,"import org.apache.accumulo.core.tabletserver.thrift.LogCopyInfo;
  public synchronized LogCopyInfo startCopy(String name, String fullyQualifiedFileName, boolean sort) throws ThriftSecurityException, TException {",Either log or rethrow this exception.
12dfbe47461cb12289efef20b9e22b2fce8dbc67,test/src/test/java/org/apache/accumulo/test/ShellServerIT.java,"import org.apache.accumulo.core.client.TableNotFoundException;





















        try {
          c.tableOperations().delete(table);
        } catch (TableNotFoundException e) {
          // don't care
        }

  @Test(timeout = 30 * 1000)


















  public void testCompactions() throws IOException {
    exec(""deletetable -f c"");
  }

  @Test(timeout = 30 * 1000)
  public void clonetable() throws Exception {
    // clonetable
    exec(""createtable orig -evc"");
    exec(""config -t orig -s table.split.threshold=123M"", true);
    exec(""addsplits -t orig a b c"", true);
    exec(""insert a b c value"");
    exec(""scan"", true, ""value"", true);
    exec(""clonetable orig clone"");
    // verify constraint, config, and splits were cloned
    exec(""constraint --list -t clone"", true, ""VisibilityConstraint=2"", true);
    exec(""config -t clone -np"", true, ""123M"", true);
    exec(""getsplits -t clone"", true, ""a\nb\nc\n"");







































",Either log or rethrow this exception.
0be23a82c282a6d3166729adf116877afab624d2,src/core/src/test/java/org/apache/accumulo/core/client/mapreduce/AccumuloInputFormatTest.java,"    AccumuloInputFormat.setMaxVersions(job.getConfiguration(), 1);
    int version = AccumuloInputFormat.getMaxVersions(job.getConfiguration());
    AccumuloInputFormat.setMaxVersions(job.getConfiguration(), 0);
    assertEquals(-1, AccumuloInputFormat.getMaxVersions(job.getConfiguration()));
    AccumuloInputFormat.addIterator(job.getConfiguration(), new IteratorSetting(1, ""WholeRow"", WholeRowIterator.class));
    AccumuloInputFormat.addIterator(job.getConfiguration(), new IteratorSetting(2, ""Versions"", ""org.apache.accumulo.core.iterators.VersioningIterator""));
    AccumuloInputFormat.addIterator(job.getConfiguration(), iter);
    List<AccumuloIterator> list = AccumuloInputFormat.getIterators(job.getConfiguration());
    List<AccumuloIteratorOption> iteratorOptions = AccumuloInputFormat.getIteratorOptions(job.getConfiguration());
    AccumuloInputFormat.addIterator(job.getConfiguration(), someSetting);
    List<AccumuloIteratorOption> opts = AccumuloInputFormat.getIteratorOptions(job.getConfiguration());
    AccumuloInputFormat.addIterator(job.getConfiguration(), someSetting);
    opts = AccumuloInputFormat.getIteratorOptions(job.getConfiguration());
    AccumuloInputFormat.setInputInfo(job.getConfiguration(), ""root"", """".getBytes(), ""testtable"", new Authorizations());
    AccumuloInputFormat.setMockInstance(job.getConfiguration(), ""testmapinstance"");
    AccumuloInputFormat.setInputInfo(job.getConfiguration(), ""root"", """".getBytes(), ""testtable2"", new Authorizations());
    AccumuloInputFormat.setMockInstance(job.getConfiguration(), ""testmapinstance"");",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/BasicServlet.java,"    if (req.getCookies() != null)
      for (Cookie c : req.getCookies())
        if (c.getName().equals(name))
          return c;
    synchronized (BasicServlet.class) {
    if ((refresh > 0) && (req.getRequestURI().startsWith(""/docs"") == false))
      sb.append(""<meta http-equiv='refresh' content='"" + refresh + ""' />\n"");
    sb.append(""<div id='subheader'>Instance&nbsp;Name:&nbsp;"").append(cachedInstanceName).append(""&nbsp;&nbsp;&nbsp;Version:&nbsp;"").append(Constants.VERSION)
        .append(""\n"");
    if (numLogs > 0)
      sb.append(""<span class='error'><a href='/log'>Recent&nbsp;Logs&nbsp;<span class='smalltext'>("" + numLogs + "")</a></span></span><br />\n"");
    if (numProblems > 0)
      sb.append(""<span class='error'><a href='/problems'>Table&nbsp;Problems&nbsp;<span class='smalltext'>("" + numProblems + "")</a></span></span><br />\n"");
    if (req.getQueryString() != null)
      redir += ""?"" + req.getQueryString();","Remove this call to ""exit"" or ensure it is really required."
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/client/admin/InstanceOperations.java," * 
  
   * 
  
   * 
  
  
  
   * 
  
  
   * 
  
  
   * 
  
  
   * 
  
   * 
  ",Replace all tab characters in this file by sequences of white-spaces.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/client/mock/MockBatchWriter.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    
    public void addMutations(Iterable<Mutation> iterable) throws MutationsRejectedException {
    
    public void flush() throws MutationsRejectedException {}
    
    public void close() throws MutationsRejectedException {}
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
322e0359ac5d35d3774c47507aed07760397513a,src/server/src/main/java/org/apache/accumulo/server/zookeeper/ZooReaderWriter.java,   * @return an instance that retries when Zookeeper connection errors occur.,1 duplicated blocks of code must be removed.
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/constraints/AlphaNumKeyConstraint.java,package org.apache.accumulo.examples.simple.constraints;,2 duplicated blocks of code must be removed.
0bff2afcab366c1e2acbbd9df1cf685e614ffad1,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/bulk/Verify.java,"import java.util.Iterator;
import org.apache.accumulo.core.client.RowIterator;
    
    scanner.clearColumns();
    scanner.fetchColumnFamily(BulkPlusOne.MARKER_CF);
    RowIterator rowIter = new RowIterator(scanner);
    
    while (rowIter.hasNext()) {
      Iterator<Entry<Key,Value>> row = rowIter.next();
      long prev = 0;
      Text rowText = null;
      while (row.hasNext()) {
        Entry<Key,Value> entry = row.next();
        
        if (rowText == null)
          rowText = entry.getKey().getRow();

        long curr = Long.valueOf(entry.getKey().getColumnQualifier().toString());

        if (curr - 1 != prev)
          throw new Exception(""Bad marker count "" + entry.getKey() + "" "" + entry.getValue() + "" "" + prev);
        
        if (!entry.getValue().toString().equals(""1""))
          throw new Exception(""Bad marker value "" + entry.getKey() + "" "" + entry.getValue());
        
        prev = curr;
      }
      
      if (BulkPlusOne.counter.get() != prev) {
        throw new Exception(""Row "" + rowText + "" does not have all markers "" + BulkPlusOne.counter.get() + "" "" + prev);
      }
    }
",Either log or rethrow this exception.
f68f62742d659bc53988167fbd3077a9711fc9bd,src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingArrayCombiner.java,"    VARLEN, FIXEDLEN, STRING
        case VARLEN:
        case FIXEDLEN:
    io.setName(""summingarraycombiner"");
    io.setDescription(""SummingArrayCombiner can interpret Values as arrays of Longs using a variety of encodings (arrays of variable length longs or fixed length longs, or comma-separated strings) before combining"");
    io.addNamedOption(TYPE, ""<VARLEN|FIXEDLEN|STRING|fullClassName>"");","Remove the literal ""true"" boolean value."
9985a2b5ca30199c31396ab6d6cb7cf57b96a8a5,proxy/src/main/java/org/apache/accumulo/proxy/thrift/PTablePermission.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.accumulo.proxy.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

@SuppressWarnings(""all"") public enum PTablePermission implements org.apache.thrift.TEnum {
  READ(2),
  WRITE(3),
  BULK_IMPORT(4),
  ALTER_TABLE(5),
  GRANT(6),
  DROP_TABLE(7);

  private final int value;

  private PTablePermission(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static PTablePermission findByValue(int value) { 
    switch (value) {
      case 2:
        return READ;
      case 3:
        return WRITE;
      case 4:
        return BULK_IMPORT;
      case 5:
        return ALTER_TABLE;
      case 6:
        return GRANT;
      case 7:
        return DROP_TABLE;
      default:
        return null;
    }
  }
}",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,server/src/main/java/org/apache/accumulo/server/security/handler/ZKAuthorizor.java,"import org.apache.accumulo.core.security.thrift.Credentials;
  public void initializeSecurity(Credentials itw, String rootuser) throws AccumuloSecurityException {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/file/rfile/MultiLevelIndex.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/client/BatchScanner.java,"package org.apache.accumulo.core.client;

import java.util.Collection;

import org.apache.accumulo.core.data.Range;


/**
 * Implementations of BatchScanner support efficient lookups 
 * of many ranges in accumulo.
 * 
 * Use this when looking up lots of ranges and you expect
 * each range to contain a small amount of data.  Also only use
 * this when you do not care about the returned data being
 * in sorted order.
 * 
 * If you want to lookup a few ranges and expect those
 * ranges to contain a lot of data, then use the Scanner
 * instead. Also, the Scanner will return data in sorted
 * order, this will not.
 */

public interface BatchScanner extends ScannerBase {
	
	/**
	 * Allows scanning over multiple ranges efficiently.
	 * 
	 * @param ranges specifies the non-overlapping ranges to query
	 */
	void setRanges(Collection<Range> ranges);
	
	/**
	 * Cleans up and finalizes the scanner
	 */
	void close();
}",Return empty string instead.
22f65c223b3f946022bc9a7ac28b236b6aea66db,examples/instamo/src/test/java/org/apache/accumulo/instamo/ExampleAccumuloUnitTest.java,"import org.apache.accumulo.core.client.security.tokens.PasswordToken;
    AccumuloApp.run(accumulo.getInstanceName(), accumulo.getZooKeepers(), new PasswordToken(""superSecret""), new String[0]);","Remove this unused method parameter ""args""."
87df5f68e2e29a6ff0445f08dca6be9dc65c6039,core/src/main/java/org/apache/accumulo/core/conf/Property.java,"  MASTER_WALOG_CLOSER_IMPLEMETATION(""master.walog.closer.implementation"", ""org.apache.accumulo.server.master.recovery.HadoopLogCloser"",","Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
7942da1d204d271bff01e9e93208cdd67d0eefa3,core/src/main/java/org/apache/accumulo/core/client/impl/Writer.java,"import org.apache.accumulo.core.security.thrift.TCredentials;
  private TCredentials credentials;
  public Writer(Instance instance, TCredentials credentials, Text table) {
  public Writer(Instance instance, TCredentials credentials, String table) {
  private static void updateServer(Mutation m, KeyExtent extent, String server, TCredentials ai, AccumuloConfiguration configuration) throws TException,",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
6a5500a5b3f34b26386877e332973e7b926aa4ce,core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloOutputFormat.java,"import org.apache.accumulo.core.security.CredentialHelper;
import org.apache.accumulo.core.security.thrift.tokens.PasswordToken;
import org.apache.accumulo.core.security.thrift.tokens.SecurityToken;
   * @throws AccumuloSecurityException 
  public static void setConnectorInfo(Job job, String principal, SecurityToken token) throws AccumuloSecurityException {
   * @see #setConnectorInfo(Job, String, SecurityToken)
   * Gets the serialized token class name from the configuration.
   * 
   * @param context
   *          the Hadoop context for the configured job
   * @return the user name
   * @since 1.5.0
   * @see #setConnectorInfo(Job, String, SecurityToken)
   * @see #setConnectorInfo(Job, Path)
   */
  protected static String getTokenClass(JobContext context) {
    return OutputConfigurator.getTokenClass(CLASS, context.getConfiguration());
  }
  
  /**
        this.conn = getInstance(context).getConnector(getPrincipal(context), CredentialHelper.extractToken(getTokenClass(context), getToken(context)));
      Connector c = getInstance(job).getConnector(getPrincipal(job), CredentialHelper.extractToken(getTokenClass(job), getToken(job)));
      if (!c.securityOperations().authenticateUser(getPrincipal(job), CredentialHelper.extractToken(getTokenClass(job), getToken(job))))
    try {
      OutputConfigurator.setConnectorInfo(CLASS, conf, user, new PasswordToken().setPassword(passwd));
    } catch (AccumuloSecurityException e) {
      throw new RuntimeException(e);
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
75fc470e543790906017f772c56ee4f8cf241e29,server/src/main/java/org/apache/accumulo/server/master/CoordinateRecoveryTask.java,"import org.apache.accumulo.core.conf.AccumuloConfiguration;
    final AccumuloConfiguration config;
    RecoveryJob(LogFile entry, JobComplete callback, AccumuloConfiguration conf) throws Exception {
      config = conf;
        RemoteLogger logger = new RemoteLogger(logFile.server, config);
        copySize = logger.startCopy(logFile.file, base);
      if (elapsedMillis() > config.getTimeInMillis(Property.MASTER_RECOVERY_MAXTIME)) {
      if (fs.exists(new Path(logFile.failedFileName()))) {
        ContentSummary contentSummary = fs.getContentSummary(new Path(logFile.recoveryFileName()));
        // map files are bigger than sequence files
        return (long) (contentSummary.getSpaceConsumed() * .8);
        return new RecoveryStatus(logFile.server, logFile.file, 0., 0., (int) (System.currentTimeMillis() - copyStartTime), (copiedSoFar() / (double) copySize));
  AccumuloConfiguration config;
  public CoordinateRecoveryTask(FileSystem fs, AccumuloConfiguration conf) {
    this.config = conf;
              processing.put(metadataEntry, job = new RecoveryJob(logFile, notify, config));
    long maxAgeInMillis = config.getTimeInMillis(Property.MASTER_RECOVERY_MAXAGE);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/test/java/org/apache/accumulo/server/tabletserver/log/MultiReaderTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
6f18b26ba335eeb4b62bc6b680eccb7bc318eb05,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/TeraSortIngest.java,"    AccumuloOutputFormat.setZooKeeperInstance(job.getConfiguration(), args[6], args[7]);
    AccumuloOutputFormat.setOutputInfo(job.getConfiguration(), args[8], args[9].getBytes(), true, null);
    AccumuloOutputFormat.setMaxMutationBufferSize(job.getConfiguration(), 10L * 1000 * 1000);",1 duplicated blocks of code must be removed.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/StringMax.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    long max = Long.MIN_VALUE;
    
    public Value aggregate() {
        return new Value(Long.toString(max).getBytes());
    }
    
    public void collect(Value value) {
        long l = Long.parseLong(new String(value.get()));
        if (l > max) {
            max = l;
        }
    }
    
    public void reset() {
        max = Long.MIN_VALUE;
    }
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
4aeaeb2a127cb7c382171011fd4dc4158298f69a,core/src/test/java/org/apache/accumulo/core/iterators/user/CombinerTest.java,"  public void sumAllColumns() throws IOException {
    TreeMap<Key,Value> tm = new TreeMap<Key,Value>();
    tm.put(new Key(""r"", ""count"", ""a"", 1), new Value(""1"".getBytes()));
    tm.put(new Key(""r"", ""count"", ""a"", 2), new Value(""1"".getBytes()));
    tm.put(new Key(""r"", ""count"", ""b"", 3), new Value(""1"".getBytes()));
    tm.put(new Key(""r"", ""count"", ""b"", 4), new Value(""1"".getBytes()));
    tm.put(new Key(""r"", ""count"", ""b"", 5), new Value(""1"".getBytes()));
    tm.put(new Key(""r"", ""count"", ""c"", 6), new Value(""1"".getBytes()));
    SortedMapIterator smi = new SortedMapIterator(tm);
    Combiner iter = new SummingCombiner();
    IteratorSetting s = new IteratorSetting(10, ""s"", SummingCombiner.class);
    SummingCombiner.setColumns(s, Collections.singletonList(new IteratorSetting.Column(""count"")));
    SummingCombiner.setEncodingType(s, LongCombiner.StringEncoder.class);
    iter.init(smi, s.getOptions(), new DefaultIteratorEnvironment());
    Combiner iter2 = new SummingCombiner();
    IteratorSetting s2 = new IteratorSetting(10, ""s2"", SummingCombiner.class);
    SummingCombiner.setColumns(s2, Collections.singletonList(new IteratorSetting.Column(""count"",""a"")));
    SummingCombiner.setEncodingType(s2, LongCombiner.StringEncoder.class);
    iter2.init(iter, s.getOptions(), new DefaultIteratorEnvironment());
    iter2.seek(new Range(), EMPTY_COL_FAMS, false);
    
    assertTrue(iter2.hasTop());
    assertEquals(""2"", iter2.getTopValue().toString());
    iter2.next();
    assertTrue(iter2.hasTop());
    assertEquals(""3"", iter2.getTopValue().toString());
    iter2.next();
    assertTrue(iter2.hasTop());
    assertEquals(""1"", iter2.getTopValue().toString());
    iter2.next();
    assertFalse(iter2.hasTop());
  }
  

  
  @Test","Define a constant instead of duplicating this literal ""count"" 8 times."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/Setup.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
35f8e2b1868cea9849efae7fae21e8ac789a0817,core/src/main/java/org/apache/accumulo/core/util/shell/commands/AuthenticateCommand.java,"import java.nio.charset.Charset;

  private static final Charset utf8 = Charset.forName(""UTF8"");

    final byte[] password = p.getBytes(utf8);",Move this variable to comply with Java Code Conventions.
99da5641c28784c7b717cce6749673863c2ec8cf,core/src/main/java/org/apache/accumulo/core/metadata/schema/MetadataSchema.java,"       * This needs to sort after all other column families for that tablet, because the {@link #PREV_ROW_COLUMN} sits in this and that needs to sort last
       * because the SimpleGarbageCollector relies on this.","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
bfc44fd328c471d06b480835ba826b706dcf6816,test/src/main/java/org/apache/accumulo/test/functional/DeleteEverythingTest.java,"import org.apache.accumulo.core.security.Authorizations;
    Scanner scanner = getConnector().createScanner(""de"", Authorizations.EMPTY);","Remove this unused method parameter ""range""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/iterators/filter/ColumnAgeOffFilter.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
7942da1d204d271bff01e9e93208cdd67d0eefa3,core/src/test/java/org/apache/accumulo/core/client/impl/TabletLocatorImplTest.java,"import org.apache.accumulo.core.security.thrift.TCredentials;
import org.apache.accumulo.core.security.tokens.AuthenticationToken;
    public Connector getConnector(TCredentials auth) throws AccumuloException, AccumuloSecurityException {
    public Connector getConnector(String principal, AuthenticationToken token) throws AccumuloException, AccumuloSecurityException {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/iterators/ColumnFamilyCounter.java,"package org.apache.accumulo.core.iterators;

import java.io.IOException;
import java.util.Collection;
import java.util.Map;

import org.apache.accumulo.core.data.ByteSequence;
import org.apache.accumulo.core.data.Key;
import org.apache.accumulo.core.data.Range;
import org.apache.accumulo.core.data.Value;


public class ColumnFamilyCounter implements SortedKeyValueIterator<Key, Value> {

	private SortedKeyValueIterator<Key, Value> source;
	private Key key;
	private Value value;

	@Override
	public void init(SortedKeyValueIterator<Key, Value> source, Map<String, String> options, IteratorEnvironment env) throws IOException {
		this.source = source;
	}

	@Override
	public boolean hasTop() {
		return key != null;
	}

	@Override
	public void next() throws IOException {
		if(source.hasTop()){
			ByteSequence currentRow = source.getTopKey().getRowData();
			ByteSequence currentColf = source.getTopKey().getColumnFamilyData();
			long ts = source.getTopKey().getTimestamp(); 
			
			source.next();
			
			int count = 1;
			
			while(source.hasTop() && source.getTopKey().getRowData().equals(currentRow) && source.getTopKey().getColumnFamilyData().equals(currentColf)){
				count++;
				source.next();
			}
			
			this.key = new Key(currentRow.toArray(), currentColf.toArray(), new byte[0], new byte[0], ts);
			this.value = new Value(Integer.toString(count).getBytes());
			
		}else{
			this.key = null;
			this.value = null;
		}
	}

	@Override
	public void seek(Range range, Collection<ByteSequence> columnFamilies, boolean inclusive) throws IOException {
		source.seek(range, columnFamilies, inclusive);
		next();
	}

	@Override
	public Key getTopKey() {
		return key;
	}

	@Override
	public Value getTopValue() {
		return value;
	}

	@Override
	public SortedKeyValueIterator<Key, Value> deepCopy(IteratorEnvironment env) {
		// TODO Auto-generated method stub
		return null;
	}

}",Return empty string instead.
5c97efc2576278f4b8b6b004ded78c98251cda24,core/src/main/java/org/apache/accumulo/core/iterators/user/TimestampFilter.java,"    if (super.validateOptions(options) == false)
      return false;
        throw new IllegalArgumentException(START + "" or "" + END + "" must be specified"");
      throw new IllegalArgumentException(""invalid options"", e);",Return empty string instead.
18a01d681c85a2a7a473543a7564ce01f742e937,src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java,"/*
 * A TypedValueCombiner that translates each Value to a Long before reducing, then encodes the reduced Long back to a Value.
 * 
 * Subclasses must implement a typedReduce method:
 *   public Long typedReduce(Key key, Iterator<Long> iter);
 * 
 * This typedReduce method will be passed the most recent Key and an iterator over the Values (translated to Longs) for all non-deleted versions of that Key.
 * 
 * A required option for this Combiner is ""type"" which indicates which type of Encoder to use to encode and decode Longs into Values.  Supported types are
 * VARNUM, LONG, and STRING which indicate the VarNumEncoder, LongEncoder, and StringEncoder respectively.
 */
  /*
   * An Encoder that uses a variable-length encoding for Longs. It uses WritableUtils.writeVLong and WritableUtils.readVLong for encoding and decoding.
   */
  /*
   * An Encoder that uses an 8-byte encoding for Longs.
   */
  /*
   * An Encoder that uses a String representation of Longs. It uses Long.toString and Long.parseLong for encoding and decoding.
   */",This block of commented-out lines of code should be removed.
6e526d702caaae157c44254b041497d18af761d0,core/src/main/java/org/apache/accumulo/core/security/handler/Authenticator.java,"import java.util.List;
import java.util.Set;
  
  public List<Set<AuthProperty>> getProperties();
  
  public class AuthProperty {
    private String key, description;
    
    public AuthProperty(String name, String description) {
      this.key = name;
      this.description = description;
    }

    public String toString() {
      return this.key + "" - "" + description;
    }
    
    public String getKey() {
      return this.key;
    }
    
    public String getDescription() {
      return this.description;
    }
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/RenameTable.java,"package org.apache.accumulo.test.randomwalk.concurrent;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
af59f0ad10af71de2f7de9880a1dbe1595956cc5,core/src/main/java/org/apache/accumulo/core/security/tokens/AuthenticationToken.java,package org.apache.accumulo.core.security.tokens;,1 duplicated blocks of code must be removed.
2ca89a813feca545f6dfa1aad54abde8a0e579dc,core/src/main/java/org/apache/accumulo/core/client/impl/thrift/TableOperationExceptionType.java," * Autogenerated by Thrift Compiler (0.8.0)
 *  @generated",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
9d13f546ebb1e716c1d25c35225190b1b2805975,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/InputFormatBase.java,"import org.apache.accumulo.core.iterators.user.VersioningIterator;
   * @see org.apache.accumulo.core.iterators.user.RegExFilter#setRegexs(IteratorSetting, String, String, String, String, boolean)","Remove this unused private ""match"" method."
527a100ef5de9c51fb17b0b340f036ee4cd98590,src/core/src/main/java/org/apache/accumulo/core/security/thrift/AuthInfo.java,"@SuppressWarnings(""all"") public class AuthInfo implements org.apache.thrift.TBase<AuthInfo, AuthInfo._Fields>, java.io.Serializable, Cloneable {",13 duplicated blocks of code must be removed.
6a5500a5b3f34b26386877e332973e7b926aa4ce,core/src/main/java/org/apache/accumulo/core/client/mapreduce/lib/util/ConfiguratorBase.java,"
import org.apache.accumulo.core.client.AccumuloSecurityException;
import org.apache.accumulo.core.security.CredentialHelper;
import org.apache.accumulo.core.security.thrift.tokens.SecurityToken;
    IS_CONFIGURED, PRINCIPAL, TOKEN, CREDENTIALS_IN_CACHE_FILE, TOKEN_CLASS
   * @param principal
   * @param token
   * @throws AccumuloSecurityException 
  public static void setConnectorInfo(Class<?> implementingClass, Configuration conf, String principal, SecurityToken token) throws AccumuloSecurityException {
    ArgumentChecker.notNull(principal, token);
    conf.set(enumToConfKey(implementingClass, ConnectorInfo.PRINCIPAL), principal);
    conf.set(enumToConfKey(implementingClass, ConnectorInfo.TOKEN_CLASS), token.getClass().getCanonicalName());
    conf.set(enumToConfKey(implementingClass, ConnectorInfo.TOKEN), CredentialHelper.tokenAsBase64(token));
   * @see #setConnectorInfo(Class, Configuration, String, SecurityToken)

  /**
   * Gets the serialized token class from the configuration.
   * 
   * @param implementingClass
   *          the class whose name will be used as a prefix for the property configuration key
   * @param conf
   *          the Hadoop configuration object to configure
   * @return the principal
   * @since 1.5.0
   * @see #setConnectorInfo(Class, Configuration, String, SecurityToken)
   * @see #setConnectorInfo(Class, Configuration, Path)
   */
  public static String getTokenClass(Class<?> implementingClass, Configuration conf) {
    return conf.get(enumToConfKey(implementingClass, ConnectorInfo.TOKEN_CLASS));
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/examples/src/main/java/org/apache/accumulo/examples/client/ReadWriteExample.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
069fb1afd18a86631a82ce89dca9c5ca06a9646e,server/src/main/java/org/apache/accumulo/server/client/BulkImporter.java,"import org.apache.accumulo.server.fs.VolumeManager;
import org.apache.accumulo.server.fs.VolumeManagerImpl;
    VolumeManagerImpl.get(acuConf);
    final VolumeManager fs = VolumeManagerImpl.get(acuConf);

      Set<Path> failedFailures = processFailures(completeFailures);
  private Set<Path> processFailures(Map<Path,List<KeyExtent>> completeFailures) {
  private Map<Path,List<AssignmentInfo>> estimateSizes(final AccumuloConfiguration acuConf, final Configuration conf, final VolumeManager vm,
        FileSystem fs = vm.getFileSystemByPath(path);
            FileSystem fs = vm.getFileSystemByPath(entry.getKey());
      VolumeManager fs, String tableId, Map<Path,List<TabletLocation>> assignments, Collection<Path> paths, int numThreads, int numMapThreads) {
            tabletFiles.put(pathSize.path.toString(), mfi);
  public static List<TabletLocation> findOverlappingTablets(AccumuloConfiguration acuConf, VolumeManager fs, TabletLocator locator, Path file,
  public static List<TabletLocation> findOverlappingTablets(AccumuloConfiguration acuConf, VolumeManager fs, TabletLocator locator, Path file,
      KeyExtent failed,
  public static List<TabletLocation> findOverlappingTablets(AccumuloConfiguration acuConf, VolumeManager vm, TabletLocator locator, Path file, Text startRow,
    FileSystem fs = vm.getFileSystemByPath(file);","Introduce a new variable instead of reusing the parameter ""importDir""."
7812b78e878300e65f38f24fd74c87ce4d18ada7,server/src/main/java/org/apache/accumulo/server/master/state/TabletStateChangeIterator.java,"        result.add(new TServerInstance(AddressUtil.parseAddress(hostport), instance));","Immediately return this expression instead of assigning it to the temporary variable ""client""."
ee3a264e704c17de90c186065f50a0775ce4ad10,src/server/src/main/java/org/apache/accumulo/server/util/DumpZookeeper.java,"import org.apache.accumulo.server.zookeeper.IZooReaderWriter;
  static IZooReaderWriter zk = null;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/util/TableDiskUsage.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
02a26268575ac93d74796ec8fd8798f85b92dac1,core/src/main/java/org/apache/accumulo/core/file/rfile/RFile.java,"          w.append(new Key(row, cf, cq), new Value((c++ + """").getBytes()));","Remove this unused method parameter ""ex""."
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,test/src/main/java/org/apache/accumulo/test/continuous/ContinuousWalk.java,"import org.apache.accumulo.trace.instrument.Span;
import org.apache.accumulo.trace.instrument.Trace;",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
3959f6bbbb4e7836101ee70a850fa7aa58b8303a,test/src/test/java/org/apache/accumulo/test/TableOperationsIT.java,"import java.util.Arrays;
import java.util.TreeSet;
import org.apache.accumulo.core.client.admin.TableOperations;
import com.google.common.collect.Sets;

  
  @Test(timeout = 30 * 1000)
  public void createMergeClonedTable() throws Exception {
    String originalTable = makeTableName();
    TableOperations tops = connector.tableOperations();
    
    tops.create(originalTable);
    tops.addSplits(originalTable, Sets.newTreeSet(Arrays.asList(new Text(""a""), new Text(""b""), new Text(""c""), new Text(""d""))));
    
    String clonedTable = makeTableName();
    
    tops.clone(originalTable, clonedTable, true, null, null);
    tops.merge(clonedTable, null, new Text(""b""));
  }",Define and throw a dedicated exception instead of using a generic one.
cb6bcc517b27df03106d7e5eca344ed45699e31f,src/core/src/main/java/org/apache/accumulo/core/security/thrift/ThriftSecurityException.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
5c97efc2576278f4b8b6b004ded78c98251cda24,server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousVerify.java,"    @Override
    @Override
    @Parameter(names = ""--output"", description = ""location in HDFS to store the results; must not exist"", required = true)
    @Parameter(names = ""--maxMappers"", description = ""the maximum number of mappers to use"", required = true, validateWith = PositiveInteger.class)
    @Parameter(names = ""--reducers"", description = ""the number of reducers to use"", required = true, validateWith = PositiveInteger.class)
    @Parameter(names = ""--offline"", description = ""perform the verification directly on the files while the table is offline"")
    public Opts() {
      super(""ci"");
    }
    
    
    AccumuloInputFormat.setOfflineTableScan(job, opts.scanOffline);
    
      AccumuloInputFormat.setRanges(job, ranges);
      AccumuloInputFormat.setAutoAdjustRanges(job, false);
    ",Return empty string instead.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/security/Authenticate.java,"package org.apache.accumulo.test.randomwalk.security;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
9b71198338e75be5a7ed58a3f39c3e2a8d2cb1dc,core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteManyCommand.java,"import org.apache.accumulo.core.util.interpret.ScanInterpreter;
  public int execute(String fullCommand, CommandLine cl, Shell shellState) throws Exception {
    ScanInterpreter interpeter = getInterpreter(cl, tableName, shellState);

    scanner.setRange(getRange(cl, interpeter));
    fetchColumns(cl, scanner, interpeter);",Return empty string instead.
93773813e5839ac9ffb4f5a2b2b70bcedb106286,server/src/main/java/org/apache/accumulo/server/master/tableOps/DeleteTable.java,"    Scanner scanner = master.getConnector().createScanner(MetadataTable.NAME, Authorizations.EMPTY);
      BatchScanner bs = conn.createBatchScanner(MetadataTable.NAME, Authorizations.EMPTY, 8);
        bs.setRanges(Collections.singleton(MetadataTable.NON_ROOT_KEYSPACE));
        bs.fetchColumnFamily(MetadataTable.DATAFILE_COLUMN_FAMILY);
      log.error(""Failed to scan "" + MetadataTable.NAME + "" looking for references to deleted table "" + tableId, e);","Use ""Long.toString"" instead."
f89c45bf477393978fd175c6c4ed6db04fffa790,fate/src/test/java/org/apache/accumulo/fate/zookeeper/TransactionWatcherTest.java,import org.junit.Assert;,6 duplicated blocks of code must be removed.
eb95e3dec6aeb35b9b4dc6c71d5c7589a5bc1ea3,core/src/main/java/org/apache/accumulo/core/client/admin/ActiveScan.java,"import org.apache.accumulo.core.security.Authorizations;
  private Authorizations authorizations;
    this.authorizations = new Authorizations(activeScan.authorizations);
  /**
   * @return the authorizations being used for this scan
   */
    
  public Authorizations getAuthorizations() {
    return authorizations;
  }",Replace all tab characters in this file by sequences of white-spaces.
9cc068dd87d479bbc6f1445e9003b02682144751,core/src/test/java/org/apache/accumulo/core/client/lexicoder/DoubleLexicoderTest.java,"/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.client.lexicoder;

/**
 * 
 */
public class DoubleLexicoderTest extends LexicoderTest {
  public void testSortOrder() {
    assertSortOrder(new DoubleLexicoder(), Double.MIN_VALUE, Double.MAX_VALUE, Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, 0.0, 0.01, 0.001, 1.0, -1.0,
        -1.1, -1.01, Math.nextUp(Double.NEGATIVE_INFINITY), Math.nextAfter(0.0, Double.NEGATIVE_INFINITY),
        Math.nextAfter(Double.MAX_VALUE, Double.NEGATIVE_INFINITY), Math.pow(10.0, 30.0) * -1.0, Math.pow(10.0, 30.0), Math.pow(10.0, -30.0) * -1.0,
        Math.pow(10.0, -30.0));
    
  }
}",Rename this generic name to match the regular expression '^[A-Z]$'.
bfc44fd328c471d06b480835ba826b706dcf6816,test/src/main/java/org/apache/accumulo/test/functional/FunctionalTest.java,"import org.apache.accumulo.core.security.Authorizations;
    Scanner scanner = getConnector().createScanner(Constants.METADATA_TABLE_NAME, Authorizations.EMPTY);","Remove this unused method parameter ""range""."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/iterators/TypedValueCombiner.java,"package org.apache.accumulo.core.iterators;

import java.util.Iterator;
import java.util.NoSuchElementException;

import org.apache.accumulo.core.data.Key;
import org.apache.accumulo.core.data.Value;


/*
 * Subclasses should implement a switch on the ""type"" variable 
 * in their reduce method.
 */
public abstract class TypedValueCombiner<V> extends Combiner {
	protected Encoder<V> encoder;

	private static class VIterator<V> implements Iterator<V> {
		private Iterator<Value> source;
		private Encoder<V> encoder;

		VIterator(Iterator<Value> iter, Encoder<V> encoder) {
			this.source = iter;
			this.encoder = encoder;
		}

		@Override
		public boolean hasNext() {
			return source.hasNext();
		}

		@Override
		public V next() {
			if (!source.hasNext()) throw new NoSuchElementException();
			return encoder.decode(source.next().get());
		}

		@Override
		public void remove() {
			source.remove();
		}
	}

	public static interface Encoder<V> {
		public byte[] encode(V v);
		public V decode(byte[] b);
	}

	@Override
	public Value reduce(Key key, Iterator<Value> iter) {
		return new Value(encoder.encode(typedReduce(key, new VIterator<V>(iter,encoder))));
	}

	public abstract V typedReduce(Key key, Iterator<V> iter);
}",Return empty string instead.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/OfflineCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
5c97efc2576278f4b8b6b004ded78c98251cda24,core/src/test/java/org/apache/accumulo/core/file/rfile/RFileTest.java,"import java.util.Collections;
  @Test
  public void testReseekUnconsumed() throws Exception {
    TestRFile trf = new TestRFile();
    
    trf.openWriter();
    
    for (int i = 0; i < 2500; i++) {
      trf.writer.append(nk(nf(""r_"", i), ""cf1"", ""cq1"", ""L1"", 42), nv(""foo"" + i));
    }
    
    trf.closeWriter();
    trf.openReader();
    
    Set<ByteSequence> cfs = Collections.emptySet();

    Random rand = new Random();

    for (int count = 0; count < 100; count++) {
      
      int start = rand.nextInt(2300);
      Range range = new Range(nk(nf(""r_"", start), ""cf1"", ""cq1"", ""L1"", 42), nk(nf(""r_"", start + 100), ""cf1"", ""cq1"", ""L1"", 42));

      trf.reader.seek(range, cfs, false);
      
      int numToScan = rand.nextInt(100);
      
      for (int j = 0; j < numToScan; j++) {
        assertTrue(trf.reader.hasTop());
        assertEquals(nk(nf(""r_"", start + j), ""cf1"", ""cq1"", ""L1"", 42), trf.reader.getTopKey());
        trf.reader.next();
      }
      
      assertTrue(trf.reader.hasTop());
      assertEquals(nk(nf(""r_"", start + numToScan), ""cf1"", ""cq1"", ""L1"", 42), trf.reader.getTopKey());

      // seek a little forward from the last range and read a few keys within the unconsumed portion of the last range

      int start2 = start + numToScan + rand.nextInt(3);
      int end2 = start2 + rand.nextInt(3);

      range = new Range(nk(nf(""r_"", start2), ""cf1"", ""cq1"", ""L1"", 42), nk(nf(""r_"", end2), ""cf1"", ""cq1"", ""L1"", 42));
      trf.reader.seek(range, cfs, false);
      
      for (int j = start2; j <= end2; j++) {
        assertTrue(trf.reader.hasTop());
        assertEquals(nk(nf(""r_"", j), ""cf1"", ""cq1"", ""L1"", 42), trf.reader.getTopKey());
        trf.reader.next();
      }
      
      assertFalse(trf.reader.hasTop());

    }
    
    trf.closeReader();
  }

",Return empty string instead.
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/client/BatchWriterConfig.java,"  
  
  
  
  
   * 
   * 
  
   * 
   * 
   * 
    
  
   * 
   * 
   * 
    
  
   * 
   * 
    
  
  
  
  
  
    
  
  
    ",Replace all tab characters in this file by sequences of white-spaces.
176df80fd404e7ba68bceedbb1ab2b3a53862857,core/src/main/java/org/apache/accumulo/core/data/thrift/UpdateErrors.java,"                  TConstraintViolationSummary _elem56; // required
            TConstraintViolationSummary _elem73; // required","Remove this unused method parameter ""table""."
9466ca515ea3a216c9ddfb4fc16adb272c6ead48,core/src/test/java/org/apache/accumulo/core/client/mapreduce/AccumuloInputFormatTest.java,"    List<InputSplit> splits = input.getSplits(job);
    assertEquals(splits.size(), 1);
    RangeInputSplit ris = (RangeInputSplit) splits.get(0);",2 duplicated blocks of code must be removed.
9d13f546ebb1e716c1d25c35225190b1b2805975,src/core/src/test/java/org/apache/accumulo/core/iterators/VersioningIteratorTest.java,import org.apache.accumulo.core.iterators.user.VersioningIterator;,"Remove this unused private ""match"" method."
2e3598547a4cfa181a58b3f8cfbf215d1e4f5651,src/server/src/main/java/org/apache/accumulo/server/master/Master.java,"						Iterator<Entry<Key, Value>> row = ri.next();
						Entry<Key, Value> entry = null;
						while (row.hasNext()) {
							entry = row.next();
						Text tabletEndRow = new KeyExtent(entry.getKey().getRow(), (Text)null).getEndRow();",Either log or rethrow this exception.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/test/java/org/apache/accumulo/core/iterators/ColumnFilterTest.java,"package org.apache.accumulo.core.iterators;

import java.util.HashSet;

import junit.framework.TestCase;

import org.apache.accumulo.core.data.Column;
import org.apache.accumulo.core.data.Key;
import org.apache.accumulo.core.data.Value;
import org.apache.accumulo.core.iterators.system.ColumnQualifierFilter;
import org.apache.hadoop.io.Text;


public class ColumnFilterTest extends TestCase{

	Key nk(String row, String cf, String cq){
		return new Key(new Text(row), new Text(cf), new Text(cq));
	}

	Column nc(String cf){
		return new Column(cf.getBytes(), null, null);
	}

	Column nc(String cf, String cq){
		return new Column(cf.getBytes(), cq.getBytes(), null);
	}

	public void test1(){
		HashSet<Column> columns = new HashSet<Column>();

		columns.add(nc(""cf1""));

		ColumnQualifierFilter cf = new ColumnQualifierFilter(null,columns);

		assertTrue(cf.accept(nk(""r1"",""cf1"",""cq1""), new Value(new byte[0])));
		assertTrue(cf.accept(nk(""r1"",""cf2"",""cq1""), new Value(new byte[0])));

	}

	public void test2(){
		HashSet<Column> columns = new HashSet<Column>();

		columns.add(nc(""cf1""));
		columns.add(nc(""cf2"", ""cq1""));

		ColumnQualifierFilter cf = new ColumnQualifierFilter(null,columns);

		assertTrue(cf.accept(nk(""r1"",""cf1"",""cq1""), new Value(new byte[0])));
		assertTrue(cf.accept(nk(""r1"",""cf2"",""cq1""), new Value(new byte[0])));
		assertFalse(cf.accept(nk(""r1"",""cf2"",""cq2""), new Value(new byte[0])));
	}


	public void test3(){
		HashSet<Column> columns = new HashSet<Column>();


		columns.add(nc(""cf2"", ""cq1""));

		ColumnQualifierFilter cf = new ColumnQualifierFilter(null,columns);

		assertFalse(cf.accept(nk(""r1"",""cf1"",""cq1""), new Value(new byte[0])));
		assertTrue(cf.accept(nk(""r1"",""cf2"",""cq1""), new Value(new byte[0])));
		assertFalse(cf.accept(nk(""r1"",""cf2"",""cq2""), new Value(new byte[0])));
	}
}",Return empty string instead.
61037d2cd0c36bed56add225b68d6b2946f8e0e8,proxy/src/test/java/org/apache/accumulo/proxy/SimpleTest.java,"    client.removeConstraint(creds, TABLE_TEST, 2);
    client.removeConstraint(creds, TABLE_TEST, 2);",Add a default case to this switch.
7a1075a47299afd6d27225b17814c11eb62432d2,test/src/test/java/org/apache/accumulo/test/functional/ServerSideErrorIT.java,  @Test(timeout=60*1000),Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
6501e03f49ce3a70ac2a0dd95312fcca1d55ad19,core/src/main/java/org/apache/accumulo/core/data/Mutation.java,"    useOldDeserialize = false;
    byte first = in.readByte();
    if ((first & 0x80) != 0x80) {
      oldReadFields(first, in);
      useOldDeserialize = true;
      return;
    }

  protected void droppingOldTimestamp(long ts) {}

  private void oldReadFields(byte first, DataInput in) throws IOException {

    byte[] localData = new byte[len];
    in.readFully(localData);
    int localEntries = in.readInt();
    List<byte[]> localValues;
      localValues = null;
      localValues = new ArrayList<byte[]>();
        localValues.add(val);
    
    // convert data to new format
    SimpleReader din = new SimpleReader(localData);
    buffer = new ByteBuffer();
    for (int i = 0; i < localEntries; i++) {
      byte[] cf = oldReadBytes(din);
      byte[] cq = oldReadBytes(din);
      byte[] cv = oldReadBytes(din);
      boolean hasts = din.readBoolean();
      long ts = din.readLong();
      boolean deleted = din.readBoolean();
      
      byte[] val;
      int valLen = din.readInt();
      
      if (valLen < 0) {
        val = localValues.get((-1 * valLen) - 1);
      } else if (valLen == 0) {
        val = EMPTY_BYTES;
      } else {
        val = new byte[valLen];
        din.readBytes(val);
      }
      
      put(cf, cq, cv, hasts, ts, deleted, val);
      if (!hasts)
        droppingOldTimestamp(ts);
    }
    serialize();

  }

  protected SERIALIZED_FORMAT getSerializedFormat() {","Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation."
db39c354eb0a393d504c3454b65bf6f2969d54bf,minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloCluster.java," * 
    
      
    
    
      
        
        
  
  
  
  
  
  
  
  
    
    
    
    
    
    
    
    
    
  
    
  
   * 
  
    
    
    
    
    
    
    
    
    
  
   * 
    
    
    
      initialized = true;
    
  
  
  public Map<ServerType,Collection<ProcessReference>> getProcesses() {
    Map<ServerType,Collection<ProcessReference>> result = new HashMap<ServerType,Collection<ProcessReference>>();
        for (Process tserver : tabletServerProcesses) {
  
  
  
    
  
  
   * ",Remove this hard-coded password.
5242f3ec228783d7da9a489f226c5665d83adf18,core/src/main/java/org/apache/accumulo/core/util/shell/commands/ScanCommand.java,"  private Option profileOpt;
    addScanIterators(shellState, cl, scanner, tableName);
  protected void addScanIterators(final Shell shellState, CommandLine cl, final Scanner scanner, final String tableName) {
    
    List<IteratorSetting> tableScanIterators;
    if (cl.hasOption(profileOpt.getOpt())) {
      String profile = cl.getOptionValue(profileOpt.getOpt());
      tableScanIterators = shellState.iteratorProfiles.get(profile);
      
      if (tableScanIterators == null) {
        throw new IllegalArgumentException(""Profile "" + profile + "" does not exist"");
      }
    } else {
      tableScanIterators = shellState.scanIteratorOptions.get(shellState.getTableName());
      if (tableScanIterators == null) {
        Shell.log.debug(""Found no scan iterators to set"");
        return;
      }

    profileOpt = new Option(""pn"", ""profile"", true, ""iterator profile name"");
    profileOpt.setArgName(""profile"");

    o.addOption(profileOpt);",Move this constructor to comply with Java Code Conventions.
e7c81846fea311b9754746dddd75e343966408bf,core/src/main/java/org/apache/accumulo/core/util/format/DefaultFormatter.java,"import java.text.DateFormat;
import java.text.FieldPosition;
import java.text.ParsePosition;
import java.util.Date;
  private static final ThreadLocal<DateFormat> formatter = new ThreadLocal<DateFormat>() {
    @Override
    protected DateFormat initialValue() {
      return new DefaultDateFormat();
    }
    
    class DefaultDateFormat extends DateFormat {
      private static final long serialVersionUID = 1L;

      @Override
      public StringBuffer format(Date date, StringBuffer toAppendTo, FieldPosition fieldPosition) {
        toAppendTo.append(Long.toString(date.getTime()));
        return toAppendTo;
      }

      @Override
      public Date parse(String source, ParsePosition pos) {
        return new Date(Long.parseLong(source));
      }
      
    }
  };
    DateFormat timestampFormat = null;
    
    if(doTimestamps) {
      timestampFormat = formatter.get();
    }
    
    return next(timestampFormat);
  }
  
  protected String next(DateFormat timestampFormat) {
    return formatEntry(si.next(), timestampFormat);
    DateFormat timestampFormat = null;
    
    if(showTimestamps) {
      timestampFormat = formatter.get();
    }
    
    return formatEntry(entry, timestampFormat);
  }
  
  /* so a new date object doesn't get created for every record in the scan result */
  private static ThreadLocal<Date> tmpDate = new ThreadLocal<Date>() {
    protected Date initialValue() { 
      return new Date();
    }
  };
  
  public static String formatEntry(Entry<Key,Value> entry, DateFormat timestampFormat) {
    if (timestampFormat != null) {
      tmpDate.get().setTime(entry.getKey().getTimestamp());
      sb.append("" "").append(timestampFormat.format(tmpDate.get()));
    }",Move this variable to comply with Java Code Conventions.
162e17aa5e9d1f86066301921ad01e45fa0c8ad4,src/examples/wikisearch/query/src/test/java/org/apache/accumulo/examples/wikisearch/logic/TestQueryLogic.java,"import org.apache.accumulo.examples.wikisearch.ingest.WikipediaInputFormat;
import org.apache.accumulo.examples.wikisearch.ingest.WikipediaInputFormat.WikipediaInputSplit;
    conf.set(WikipediaConfiguration.NUM_GROUPS, ""1"");
    WikipediaInputSplit split = new WikipediaInputSplit(new FileSplit(tmpFile, 0, fs.pathToFile(tmpFile).length(), null),0);","Immediately return this expression instead of assigning it to the temporary variable ""result""."
38932fefb38e1ef2df70fc23a5ed88ff6930afdf,src/core/src/main/java/org/apache/accumulo/core/iterators/RowDeletingIterator.java," * @deprecated since 1.4, replaced by {@link org.apache.accumulo.core.iterators.user.RowDeletingIterator}",Either log or rethrow this exception.
bd77fefdb146ef0dc9bf64b51fb8e8f43c10ce0d,core/src/main/java/org/apache/accumulo/core/master/thrift/TableInfo.java,"  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",300 duplicated blocks of code must be removed.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/iterators/conf/ColumnToClassMapping.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/iterators/system/MultiIterator.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
5c97efc2576278f4b8b6b004ded78c98251cda24,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReaderIterator.java,"  
  
    
    
        
    @Override
    
    
    
    
  
      
        
        
          
          ",Return empty string instead.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/constraints/SystemConstraint.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
2ad672a5172124625d719c38c163ab68846c75a6,core/src/main/java/org/apache/accumulo/core/client/mapreduce/InputFormatBase.java,"import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;
import org.apache.accumulo.core.client.security.tokens.PasswordToken;",Move this constructor to comply with Java Code Conventions.
3dbd87897442d632a09660f5bb5667c28e4bf9c4,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReaderIterator.java,"    } catch (NoSuchScanIDException e) {
    } catch (TException e) {
      timeoutTracker.errorOccured(e);",Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'.
9d8cc45de8cdf36ec27f800329ae88a4c9168d48,src/core/src/main/java/org/apache/accumulo/core/iterators/user/ColumnAgeOffFilter.java,"    ColumnAgeOffFilter copy = (ColumnAgeOffFilter) super.deepCopy(env);
    copy.currentTime = currentTime;
    copy.ttls = ttls;
    return copy;
  ",Define and throw a dedicated exception instead of using a generic one.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/monitor/servlets/trace/Basic.java,"    byte[] passwd = conf.get(Property.TRACE_PASSWORD).getBytes();
      if (!conn.tableOperations().exists(table)) {","Remove this unused private ""appendProp"" method."
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/RegexExample.java,package org.apache.accumulo.examples.simple.mapreduce;,"Rename ""table"" which hides the field declared at line 107."
38932fefb38e1ef2df70fc23a5ed88ff6930afdf,src/server/src/main/java/org/apache/accumulo/server/zookeeper/ZooReaderWriter.java,   * @return an instance that retries when Zookeeper connection errors occur.,Either log or rethrow this exception.
e511baa049c58509539ab7eb793c0da97c9d3ef6,server/src/main/java/org/apache/accumulo/server/trace/TraceServer.java,    SimpleTimer.getInstance().schedule(new Runnable() {,Return empty string instead.
9e2ebc51b9cf1b2e58dac56ce49caf916a1cfeec,src/core/src/main/java/org/apache/accumulo/core/iterators/Filter.java,"/**
 * A SortedKeyValueIterator that filters entries from its source iterator.
 * 
 * Subclasses must implement an accept method: public boolean accept(Key k, Value v);
 * 
 * Key/Value pairs for which the accept method returns true are said to match the filter. By default, this class iterates over entries that match its filter.
 * This iterator takes an optional ""negate"" boolean parameter that defaults to false. If negate is set to true, this class instead omits entries that match its
 * filter, thus iterating over entries that do not match its filter.
 */
  /**
   * Iterates over the source until an acceptable key/value pair is found.
   */
  /**
   * @return <tt>true</tt> if the key/value pair is accepted by the filter.
   */",1 duplicated blocks of code must be removed.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/client/TableDeletedException.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 * 
    
    private static final long serialVersionUID = 1L;
    private String tableId;
    
    public TableDeletedException(String tableId) {
        this.tableId = tableId;
    }
    
    public String getTableId() {
        return tableId;
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/trace/ListType.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    int getMinutes(HttpServletRequest req) {
        
            if (obj == null) return ""-"";
            RemoteSpan span = (RemoteSpan) obj;
            return String.format(""<a href='/trace/show?id=%s'>%s</a>"", Long.toHexString(span.traceId), TraceFormatter.formatDate(new Date(span.start)));
    
    public void pageBody(HttpServletRequest req, HttpServletResponse resp, StringBuilder sb) throws Exception {
        Range range = new Range(new Text(""start:"" + Long.toHexString(startTime)), new Text(""start:"" + Long.toHexString(endTime)));
        for (Entry<Key,Value> entry : scanner) {
                trace.addRow(span, new Long(span.stop - span.start), span.svc + "":"" + span.sender);
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
6a5500a5b3f34b26386877e332973e7b926aa4ce,test/src/main/java/org/apache/accumulo/test/functional/ZombieTServer.java,"import org.apache.accumulo.core.security.thrift.Credential;
    synchronized public void fastHalt(TInfo tinfo, Credential credentials, String lock) {
    public TabletServerStatus getTabletServerStatus(TInfo tinfo, Credential credentials) throws ThriftSecurityException, TException {
    synchronized public void halt(TInfo tinfo, Credential credentials, String lock) throws ThriftSecurityException, TException {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bd5f4f05975ec1cf0f3cf715d9d0094ababd8e73,server/src/main/java/org/apache/accumulo/server/util/VerifyTabletAssignments.java,"import org.apache.accumulo.core.security.CredentialHelper;
    MetadataTable.getEntries(conn.getInstance(), CredentialHelper.create(opts.principal, opts.getToken(), opts.instance), tableName, false,
            checkTabletServer(conf.getConfiguration(), CredentialHelper.create(opts.principal, opts.getToken(), opts.instance), entry, failures);","Immediately return this expression instead of assigning it to the temporary variable ""connector""."
360e7f0ebd61e6a8ec5df27e8b02cd58a5ca8d30,src/core/src/test/java/org/apache/accumulo/core/client/admin/TableOperationsHelperTest.java,"    t.setProperty(""table"", ""table.iterator.minc.thirdName.opt.key"", ""value"");
    try {
      t.attachIterator(""table"", setting);
      Assert.fail();
    } catch (IllegalArgumentException e) {}
    t.removeProperty(""table"", ""table.iterator.minc.thirdName.opt.key"");",Either log or rethrow this exception.
0f10f6dff8339712b85c9e3fe813b80d3499fe51,server/src/main/java/org/apache/accumulo/server/gc/SimpleGarbageCollector.java,"import java.io.FileNotFoundException;
      if (tabletDirs.length == 0) {
        Path p = new Path(ServerConstants.getTablesDir() + ""/"" + delTableId);
        try {
          trash.moveToTrash(p);
        } catch (FileNotFoundException ex) {
          log.debug(""Ignoring error moving a directory "" + p + "" to the trash"", ex);
          fs.delete(p, false);
        }
      }
            boolean moved = false;
            if (trash != null)
              try {
                moved = trash.moveToTrash(p);
              } catch (FileNotFoundException ex) {
                log.debug(""Ignoring exception moving "" + p + "" to trash"");
              }
            if (moved || fs.delete(p, true)) {",Either log or rethrow this exception.
527a100ef5de9c51fb17b0b340f036ee4cd98590,src/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActiveScan.java,"@SuppressWarnings(""all"") public class ActiveScan implements org.apache.thrift.TBase<ActiveScan, ActiveScan._Fields>, java.io.Serializable, Cloneable {",13 duplicated blocks of code must be removed.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/shard/DeleteSomeDocs.java,"      if (key instanceof String && ((String) key).startsWith(""pattern""))
        patterns.add(props.getProperty((String) key));","Remove this call to ""exit"" or ensure it is really required."
38932fefb38e1ef2df70fc23a5ed88ff6930afdf,src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java,"   * A convenience method to set the ""all columns"" option on a Combiner. 
   * @param combineAllColumns
   *          if true, the columns option is ignored and the Combiner will be applied to all columns",Either log or rethrow this exception.
a8eed5b2b329b35cae88136e1b4ea71cc875f737,server/src/main/java/org/apache/accumulo/server/master/tableOps/CreateTable.java,"import org.apache.accumulo.server.security.SecurityOperationImpl;
    SecurityOperation security = SecurityOperationImpl.getInstance();
    SecurityOperationImpl.getInstance().deleteTable(SecurityConstants.getSystemCredentials(), tableInfo.tableId);",Either log or rethrow this exception.
446a37a9795f2df7adc841154ca05add79cf286e,server/src/test/java/org/apache/accumulo/server/master/state/RootTabletStateStoreTest.java,import org.apache.accumulo.core.metadata.RootTable;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f804c5ed0ca537a87e4c7917757620ac84bebbea,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaMapper.java,  static Set<String> getTokens(Article article) throws IOException {,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
aaae7f37c421eababf17a045448605e1bdfc8ace,core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TIteratorSetting.java,"                org.apache.thrift.protocol.TMap _map80 = iprot.readMapBegin();
                struct.properties = new HashMap<String,String>(2*_map80.size);
                for (int _i81 = 0; _i81 < _map80.size; ++_i81)
                  String _key82; // required
                  String _val83; // required
                  _key82 = iprot.readString();
                  _val83 = iprot.readString();
                  struct.properties.put(_key82, _val83);
          for (Map.Entry<String, String> _iter84 : struct.properties.entrySet())
            oprot.writeString(_iter84.getKey());
            oprot.writeString(_iter84.getValue());
          for (Map.Entry<String, String> _iter85 : struct.properties.entrySet())
            oprot.writeString(_iter85.getKey());
            oprot.writeString(_iter85.getValue());
          org.apache.thrift.protocol.TMap _map86 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.properties = new HashMap<String,String>(2*_map86.size);
          for (int _i87 = 0; _i87 < _map86.size; ++_i87)
            String _key88; // required
            String _val89; // required
            _key88 = iprot.readString();
            _val89 = iprot.readString();
            struct.properties.put(_key88, _val89);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
4661491d0b1de8fe4d5ce1d3534de01546bfb3df,test/src/test/java/org/apache/accumulo/test/functional/ZookeeperRestartIT.java,public class ZookeeperRestartIT extends ConfigurableMacIT {,"Use ""Integer.toString"" instead."
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,core/src/main/java/org/apache/accumulo/core/security/tokens/SecuritySerDe.java,"package org.apache.accumulo.core.security.tokens;

import org.apache.accumulo.core.client.AccumuloSecurityException;

public interface SecuritySerDe<T extends SecurityToken> {
	public byte[] serialize(T token) throws AccumuloSecurityException;
	public T deserialize(byte[] serializedToken) throws AccumuloSecurityException;
}",Either log or rethrow this exception.
aa7110234e15a017bb1dbc99b4351f0bf06cc73b,server/src/test/java/org/apache/accumulo/server/tabletserver/log/MultiReaderTest.java,"import java.io.File;

  TemporaryFolder root = new TemporaryFolder(new File(System.getProperty(""user.dir"") + ""/target""));











",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f0c6d0501e6a085d317c8484f39c20dc6a064941,server/src/main/java/org/apache/accumulo/server/tabletserver/log/LogSorter.java,"        log.debug(""Log copy/sort of "" + name + "" complete"");
                attemptRecoveries(zoo, serverName, path, zoo.getChildren(path, this));
  private void attemptRecoveries(final ZooReaderWriter zoo, final String serverName, final String path, List<String> children) {
    
    if (threadPool.getQueue().size() > 1)
      return;

    log.debug(""Zookeeper references "" + children.size() + "" recoveries, attempting locks"");
            break;
          log.debug(""got lock for "" + child);
              try {
                attemptRecoveries(zoo, serverName, path, zoo.getChildren(path));
              } catch (KeeperException e) {
                log.error(""Unable to get recovery information"", e);
              } catch (InterruptedException e) {
                log.info(""Interrupted getting recovery information"", e);
              }
          log.debug(""failed to get the lock "" + child);",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchDeleter.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
38932fefb38e1ef2df70fc23a5ed88ff6930afdf,src/core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,"   * Return the formatter for the current table.
   * @return the formatter class for the current table
  /**
   * Return the formatter for the given table.
   * 
   * @param tableName
   *          the table name
   * @return the formatter class for the given table
   */",Either log or rethrow this exception.
ee3a264e704c17de90c186065f50a0775ce4ad10,src/server/src/main/java/org/apache/accumulo/server/zookeeper/ZooLock.java,"  final private IZooReaderWriter zooKeeper;
    IZooReaderWriter zk = ZooReaderWriter.getInstance();
    IZooReaderWriter zk = ZooReaderWriter.getInstance();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/test/randomwalk/security/CreateUser.java,"      conn.securityOperations().createUser(tableUserName, tabUserPass);
              state.getConnector().securityOperations().createUser(tableUserName, tabUserPass);","Remove this unused private ""appendProp"" method."
52a94df7eb38da90bf7dead918af760ba37a772d,server/src/main/java/org/apache/accumulo/server/tabletserver/SimpleLRUCacheTest.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.server.tabletserver;

import static org.junit.Assert.*;

import org.junit.Test;

public class SimpleLRUCacheTest {
  
  @Test
  public void test() {
    SimpleLRUCache<Integer> test = new SimpleLRUCache<Integer>(4);
    test.add(0);
    assertTrue(test.contains(0));
    test.add(1);
    assertTrue(test.contains(1));
    assertFalse(test.contains(2));
    test.add(2);
    test.add(3);
    test.add(4);
    assertFalse(test.contains(0));
  }
}","Make ""recent"" transient or serializable."
b8859513a7f9cec03d7af3f45c7516344798fe06,server/src/main/java/org/apache/accumulo/server/tabletserver/mastermessage/SplitReportMessage.java,import org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException;,1 duplicated blocks of code must be removed.
22cdcbc700e4c68b21738ab7087a35ef784b0fc1,server/src/main/java/org/apache/accumulo/server/trace/TraceServer.java,"import org.apache.accumulo.server.fs.VolumeManager;
import org.apache.accumulo.server.fs.VolumeManagerImpl;
    VolumeManager fs = VolumeManagerImpl.get();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/LogServlet.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
69218e7e989b6f1d65afabce9c5b5ab0e3204141,server/src/main/java/org/apache/accumulo/server/monitor/servlets/TablesServlet.java,"import org.apache.accumulo.core.util.MetadataTable;
import org.apache.accumulo.core.util.RootTable;
    if (RootTable.ID.equals(tableId)) {
      locs.add(instance.getRootTabletLocation());
    } else {
      String systemTableName = MetadataTable.ID.equals(tableId) ? RootTable.NAME : MetadataTable.NAME;
      MetaDataTableScanner scanner = new MetaDataTableScanner(instance, SecurityConstants.getSystemCredentials(), new Range(KeyExtent.getMetadataEntry(
          new Text(tableId), new Text()), KeyExtent.getMetadataEntry(new Text(tableId), null)), systemTableName);
      
      while (scanner.hasNext()) {
        TabletLocationState state = scanner.next();
        if (state.current != null) {
          try {
            locs.add(state.current.hostPort());
          } catch (Exception ex) {
            log.error(ex, ex);
          }
      scanner.close();
    ","Reduce this switch case number of lines from 12 to at most 5, for example by extracting code into methods."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/shard/Commit.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    @Override
    public void visit(State state, Properties props) throws Exception {
        state.getMultiTableBatchWriter().flush();
        log.debug(""Committed inserts "");
    }
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
446a37a9795f2df7adc841154ca05add79cf286e,server/src/main/java/org/apache/accumulo/server/security/SecurityOperation.java,"import org.apache.accumulo.core.metadata.MetadataTable;
import org.apache.accumulo.core.metadata.RootTable;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ed0f9eef789024e70538194f12f5e5126975ae97,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/shard/Reverse.java," * The program reads an accumulo table written by {@link Index} and writes out to another table. It writes out a mapping of documents to terms. The document to
 * term mapping is used by {@link ContinuousQuery}.
 * See docs/examples/README.shard for instructions.",Replace this use of System.out or System.err by a logger.
61a1073eb094fa94471376934bb933b5a707b70b,core/src/main/java/org/apache/accumulo/core/client/mapred/InputFormatBase.java,"    Connector conn = instance.getConnector(getPrincipal(job), CredentialHelper.extractToken(getTokenClass(job), getToken(job)));",2 duplicated blocks of code must be removed.
e148bc7615e5147f306ef70eeb4fe13631daa3c8,src/core/src/main/java/org/apache/accumulo/core/file/rfile/RFile.java,"              if (cfSet.contains(entry.getKey())) {
              } else if (!inclusive) {
              }
          lgr.seek(range, EMPTY_CF_SET, false);
          addSource(lgr);","Use ""Integer.toString"" instead."
5e14ecff940065c80ed5975124552c9014cc3442,src/server/src/main/java/org/apache/accumulo/server/util/Initialize.java,import org.apache.accumulo.core.iterators.user.VersioningIterator;,"Remove this unused private ""match"" method."
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/iterators/system/TimeSettingIterator.java,"  
  private SortedKeyValueIterator<Key,Value> source;
  private long time;
  private Range range;
  
  public TimeSettingIterator(SortedKeyValueIterator<Key,Value> source, long time) {
    this.source = source;
    this.time = time;
  }
  
  @Override
  public Key getTopKey() {
    Key key = new Key(source.getTopKey());
    key.setTimestamp(time);
    return key;
  }
  
  @Override
  public void setInterruptFlag(AtomicBoolean flag) {
    ((InterruptibleIterator) source).setInterruptFlag(flag);
  }
  
  @Override
  public SortedKeyValueIterator<Key,Value> deepCopy(IteratorEnvironment env) {
    return new TimeSettingIterator(source.deepCopy(env), time);
  }
  
  @Override
  public void init(SortedKeyValueIterator<Key,Value> source, Map<String,String> options, IteratorEnvironment env) throws IOException {
  }
  
  @Override
  public boolean hasTop() {
    return source.hasTop() && !range.afterEndKey(getTopKey());
  }
  
  @Override
  public void next() throws IOException {
    source.next();
  }
  
  @Override
  public void seek(Range range, Collection<ByteSequence> columnFamilies, boolean inclusive) throws IOException {
    Range seekRange = IteratorUtil.maximizeStartKeyTimeStamp(range);
    seekRange = IteratorUtil.minimizeEndKeyTimeStamp(seekRange);
    source.seek(seekRange, columnFamilies, inclusive);
    this.range = range;
    while (hasTop() && range.beforeStartKey(getTopKey())) {
      next();
  }
  
  @Override
  public Value getTopValue() {
    return source.getTopValue();
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
057b8d6cb0ccbf472067a755d76eba7ee2e3fd71,test/src/test/java/org/apache/accumulo/test/functional/SplitRecoveryIT.java,"public class SplitRecoveryIT extends SimpleMacIT {
    assertEquals(0, exec(SplitRecoveryTest.class).waitFor());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c532821ee0801d6fb02d67afe6c35c77bc3c35da,server/src/main/java/org/apache/accumulo/server/data/ServerColumnUpdate.java,"  public ServerColumnUpdate(byte[] cf, byte[] cq, byte[] cv, boolean hasts, long ts, boolean deleted, byte[] val, ServerMutation serverMutation) {
    super(cf, cq, cv, hasts, ts, deleted, val);","Constructor has 8 parameters, which is greater than 7 authorized."
56a2bcd6745cc4b3e90a896b03df7efcf9f06afa,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"        String oldThreadName = Thread.currentThread().getName();

          Thread.currentThread().setName(
              ""User: "" + scanSession.user + "" Start: "" + scanSession.startTime + "" Client: "" + scanSession.client + "" Tablet: "" + scanSession.extent);

          Thread.currentThread().setName(oldThreadName);
        String oldThreadName = Thread.currentThread().getName();
          Thread.currentThread().setName(""Client: "" + session.client + "" User: "" + session.user + "" Start: "" + session.startTime + "" Table: "");

          // check the time so that the read ahead thread is not monopolized
            Thread.currentThread().setName(
                ""Client: "" + session.client + "" User: "" + session.user + "" Start: "" + session.startTime + "" Tablet: "" + entry.getKey().toString());
          Thread.currentThread().setName(oldThreadName);","Define a constant instead of duplicating this literal "" Start: "" 3 times."
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/reader/LongLineRecordReader.java,package org.apache.accumulo.examples.wikisearch.reader;,2 duplicated blocks of code must be removed.
99da5641c28784c7b717cce6749673863c2ec8cf,core/src/main/java/org/apache/accumulo/core/client/mapreduce/lib/util/ConfiguratorBase.java,"import org.apache.accumulo.core.client.security.tokens.AuthenticationToken.AuthenticationTokenSerializer;
   * Configuration keys for {@link Instance#getConnector(String, AuthenticationToken)}.
    conf.set(enumToConfKey(implementingClass, ConnectorInfo.TOKEN), Base64.encodeBase64String(AuthenticationTokenSerializer.serialize(token)));
   * @param conf
   * @see #setConnectorInfo(Class, Configuration, String, AuthenticationToken)
   * @param conf
   * @see #setConnectorInfo(Class, Configuration, String, AuthenticationToken)","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
e70a40dbab016b22b69b148161b7ce1c6af878f1,core/src/test/java/org/apache/accumulo/core/client/admin/TableOperationsHelperTest.java,"    public void offline(String tableName, boolean wait) throws AccumuloSecurityException, AccumuloException, TableNotFoundException {
      
    }
    
    @Override
    public void online(String tableName, boolean wait) throws AccumuloSecurityException, AccumuloException, TableNotFoundException {}
    
    @Override","Cast one of the operands of this multiplication operation to a ""long""."
322e0359ac5d35d3774c47507aed07760397513a,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/StringSummation.java, * @see org.apache.accumulo.core.iterators.user.SummingCombiner with SummingCombiner.Type.STRING,1 duplicated blocks of code must be removed.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/trace/InstanceUserPassword.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/util/AddFilesWithMissingEntries.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
        final Range range = new Range(rootTableEnd.followingKey(PartialKey.ROW), true, Constants.METADATA_RESERVED_KEYSPACE_START_KEY, false);
        for (Entry<Key,Value> entry : scanner) {
            KeyExtent ke = new KeyExtent(key.getRow(), (Text) null);
    
    private static int addUnknownFiles(FileSystem fs, String directory, Set<String> knownFiles, KeyExtent ke, MultiTableBatchWriter writer) throws Exception {
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
5597259bbfa3da9833cf047b480efbba6f46ed02,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/NumArraySummation.java,"/**
 * @deprecated since 1.4
 * @use org.apache.accumulo.core.iterators.user.SummingArrayCombiner with SummingArrayCombiner.Type.VARNUM
 */",1 duplicated blocks of code must be removed.
766cb2ca5c0e8eb723a163cf425257bd7bc7289f,src/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/TabletClientService.java,"        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bit_vector = new BitSet(1);",Either log or rethrow this exception.
35f8e2b1868cea9849efae7fae21e8ac789a0817,core/src/main/java/org/apache/accumulo/core/security/Authorizations.java,"
  private static final Charset utf8 = Charset.forName(""UTF8"");
          byte[] auth = Base64.decodeBase64(encAuth.getBytes(utf8));
    return serialize().getBytes(utf8);",Move this variable to comply with Java Code Conventions.
93773813e5839ac9ffb4f5a2b2b70bcedb106286,core/src/main/java/org/apache/accumulo/core/util/shell/commands/GetSplitsCommand.java,"import org.apache.accumulo.core.util.MetadataTable;
        final Scanner scanner = shellState.getConnector().createScanner(MetadataTable.NAME, Authorizations.EMPTY);
        MetadataTable.PREV_ROW_COLUMN.fetch(scanner);
          if (MetadataTable.PREV_ROW_COLUMN.hasColumns(next.getKey())) {","Use ""Long.toString"" instead."
f264f882d0d28f7d70d5f0c0deb162c7717025e7,src/core/src/test/java/org/apache/accumulo/core/iterators/CombinerTest.java,"    opts.put(Combiner.COLUMNS_OPTION, ""2"");
    opts.put(Combiner.COLUMNS_OPTION, ""cf001"");
    opts.put(Combiner.COLUMNS_OPTION, ""cf001"");
    opts.put(Combiner.COLUMNS_OPTION, ""cf001"");
    opts.put(Combiner.COLUMNS_OPTION, ""cf001"");
    opts.put(Combiner.COLUMNS_OPTION, ""cf001"");
    opts.put(Combiner.COLUMNS_OPTION, ""cf001"");
    opts.put(Combiner.COLUMNS_OPTION, ""cf001"");
    opts.put(Combiner.COLUMNS_OPTION, ""cf001"");","Remove the literal ""true"" boolean value."
22cdcbc700e4c68b21738ab7087a35ef784b0fc1,core/src/main/java/org/apache/accumulo/core/conf/Property.java,"  INSTANCE_VOLUMES(""instance.volumes"", """", PropertyType.STRING, ""A list of volumes to use.  By default, this will be the namenode in the hadoop configuration in the accumulo classpath.""),
  GENERAL_VOLUME_CHOOSER(""general.volume.chooser"", ""org.apache.accumulo.server.fs.RandomVolumeChooser"", PropertyType.CLASSNAME, ""The class that will be used to select which volume will be used to create new files.""),
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/metanalysis/PrintEvents.java,"import org.apache.accumulo.server.cli.ClientOpts;
import com.beust.jcommander.Parameter;

  static class Opts extends ClientOpts {
    @Parameter(names={""-t"", ""--tableId""}, description=""table id"", required=true)
    String tableId;
    @Parameter(names={""-e"", ""--endRow""}, description=""end row"")
    String endRow;
    @Parameter(names={""-t"", ""--time""}, description=""time, in milliseconds"", required=true)
    long time;
  }
  
    Opts opts = new Opts();
    opts.parseArgs(PrintEvents.class.getName(), args);
    Connector conn = opts.getConnector();
    printEvents(conn, opts.tableId, opts.endRow, opts.time);","Remove this call to ""exit"" or ensure it is really required."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/data/KeyValue.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
public class KeyValue implements Map.Entry<Key,Value> {
    
    public KeyValue(Key key, byte[] value) {
        this.key = key;
        this.value = value;
    }
    
    public KeyValue(Key key, ByteBuffer value) {
        this.key = key;
        this.value = toBytes(value);
    }
    
    
    
    
    public String toString() {
        return key + "" "" + new String(value);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ee3a264e704c17de90c186065f50a0775ce4ad10,src/server/src/main/java/org/apache/accumulo/server/trace/TraceServer.java,"import org.apache.accumulo.server.zookeeper.IZooReaderWriter;
    IZooReaderWriter zoo = ZooReaderWriter.getInstance();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bfc44fd328c471d06b480835ba826b706dcf6816,test/src/main/java/org/apache/accumulo/test/randomwalk/sequential/MapRedVerify.java,"import org.apache.accumulo.core.security.Authorizations;
    Scanner outputScanner = state.getConnector().createScanner(args[7], Authorizations.EMPTY);","Remove this unused method parameter ""range""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/test/java/org/apache/accumulo/core/data/ColumnTest.java,"        if (i == j || (i == 0 && j == 1) || (i == 1 && j == 0))
          assertTrue(col[i].equals(col[j]));
        else
          assertFalse(col[i].equals(col[j]));
        if (i == j || (i == 0 && j == 1) || (i == 1 && j == 0))
          assertTrue(col[i].compareTo(col[j]) == 0);
        else
          assertFalse(col[i].compareTo(col[j]) == 0);","Remove this call to ""exit"" or ensure it is really required."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/client/Scanner.java,"package org.apache.accumulo.core.client;

import org.apache.accumulo.core.data.Range;

/**
 * Walk a table over a given range.
 * 
 * provides scanner functionality
 * 
 * ""Clients can iterate over multiple column families, and there are several 
 * mechanisms for limiting the rows, columns, and timestamps traversed by a 
 * scan. For example, we could restrict [a] scan ... to only produce anchors 
 * whose columns match [a] regular expression ..., or to only produce 
 * anchors whose timestamps fall within ten days of the current time.""
 */
public interface Scanner extends ScannerBase {
		
	/**
	 * When failure occurs, the scanner automatically retries.  This
	 * setting determines how long a scanner will retry.  By default
	 * a scanner will retry forever. 
	 * 
	 * @param timeOut in seconds
	 */
	public void setTimeOut(int timeOut);
	/**
	 * @return the timeout configured for this scanner
	 */
	public int getTimeOut();
	
	/**
	 * @param range key range to begin and end scan
	 */
	public void setRange(Range range);
	/**
	 * @return the range configured for this scanner
	 */
	public Range getRange();
   	
	/**
	 * @param size the number of Keys/Value pairs to fetch per call to Accumulo
	 */
   	public void setBatchSize(int size);
	/**
	 * @return the batch size configured for this scanner
	 */
	public int getBatchSize();
	
	public void enableIsolation();
	void disableIsolation();
}",Return empty string instead.
79cc7104b28089ff0a9bfa171f82862892b9cd55,src/core/src/main/java/org/apache/accumulo/core/client/ZooKeeperInstance.java," * Because it is possible for multiple instances of accumulo to share a single set of zookeeper servers, all constructors require an accumulo instance name.
 * If you do not know the instance names then run accumulo org.apache.accumulo.server.util.ListInstances on an accumulo server.",2 duplicated blocks of code must be removed.
8b4f7b02fae7517e3482b0b5274456333b512e3d,core/src/main/java/org/apache/accumulo/core/util/Merge.java,    Constants.METADATA_PREV_ROW_COLUMN.fetch(scanner);,Replace all tab characters in this file by sequences of white-spaces.
7812b78e878300e65f38f24fd74c87ce4d18ada7,server/src/main/java/org/apache/accumulo/server/gc/GarbageCollectWriteAheadLogs.java,        InetSocketAddress address = AddressUtil.parseAddress(entry.getKey());,"Immediately return this expression instead of assigning it to the temporary variable ""client""."
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,examples/simple/src/main/java/org/apache/accumulo/examples/simple/filedata/FileDataQuery.java,"import org.apache.accumulo.core.security.tokens.SecurityToken;
  public FileDataQuery(String instanceName, String zooKeepers, SecurityToken token, String tableName, Authorizations auths) throws AccumuloException,",Either log or rethrow this exception.
4317e32452212553d26e9af7a31be22e161011a8,src/server/src/main/java/org/apache/accumulo/server/master/Master.java,"                  if (server.equals(migrations.get(tls.extent)))
                    migrations.remove(tls.extent);
                  // log.info(""Current servers "" + currentTServers.keySet());
                  if (dest != null) {
                    // if destination is still good, assign it
                    if (destinations.keySet().contains(dest)) {
                      assignments.add(new Assignment(tls.extent, dest));
                    } else {
                      // get rid of this migration
                      migrations.remove(tls.extent);
                      unassigned.put(tls.extent, server);
                    }
                  // log.info(""Current servers "" + currentTServers.keySet());
      migrations.keySet().retainAll(found);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/ZooKeeperInstance.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/test/randomwalk/Framework.java,"
import com.beust.jcommander.Parameter;

  static class Opts extends org.apache.accumulo.core.cli.Help {
    @Parameter(names=""--configDir"", required=true, description=""directory containing the test configuration"")
    String configDir;
    @Parameter(names=""--logDir"", required=true, description=""location of the local logging directory"")
    String localLogPath;
    @Parameter(names=""--logId"", required=true, description=""a unique log identifier (like a hostname, or pid)"")
    String logId;
    @Parameter(names=""--module"", required=true, description=""the name of the module to run"")
    String module;
  }
  
    Opts opts = new Opts();
    opts.parseArgs(Framework.class.getName(), args);

    FileInputStream fis = new FileInputStream(opts.configDir + ""/randomwalk.conf"");
    System.setProperty(""localLog"", opts.localLogPath + ""/"" + opts.logId);
    System.setProperty(""nfsLog"", props.getProperty(""NFS_LOGPATH"") + ""/"" + opts.logId);
    DOMConfigurator.configure(opts.configDir + ""logger.xml"");
    int retval = getInstance().run(opts.module, state, configDir);","Remove this unused private ""appendProp"" method."
39513c268d3b57be8460165e10f46c0b957d5b2e,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/InputFormatBase.java,"import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
  private static final String PASSWORD = PREFIX + "".password"";
    conf.set(PASSWORD, new String(Base64.encodeBase64(passwd)));
    ArrayList<String> rangeStrings = new ArrayList<String>(ranges.size());
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        r.write(new DataOutputStream(baos));
        rangeStrings.add(new String(Base64.encodeBase64(baos.toByteArray())));
    } catch (IOException ex) {
      throw new IllegalArgumentException(""Unable to encode ranges to Base64"", ex);
    conf.setStrings(RANGES, rangeStrings.toArray(new String[0]));
   * WARNING: The password is stored in the Configuration and shared with all MapReduce tasks; It is BASE64 encoded to provide a charset safe conversion to a
   * string, and is not intended to be secure.
   * 
  protected static byte[] getPassword(JobContext job) {
   * Gets the password from the configuration. WARNING: The password is stored in the Configuration and shared with all MapReduce tasks; It is BASE64 encoded to
   * provide a charset safe conversion to a string, and is not intended to be secure.
   * 
  protected static byte[] getPassword(Configuration conf) {
    return Base64.decodeBase64(conf.get(PASSWORD, """").getBytes());
  protected static TabletLocator getTabletLocator(JobContext job) throws TableNotFoundException {
  protected static TabletLocator getTabletLocator(Configuration conf) throws TableNotFoundException {
    for (String rangeString : conf.getStringCollection(RANGES)) {
      ByteArrayInputStream bais = new ByteArrayInputStream(Base64.decodeBase64(rangeString.getBytes()));
      Range range = new Range();
      range.readFields(new DataInputStream(bais));
      ranges.add(range);
      AccumuloException, AccumuloSecurityException {",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
390ca3f2ebe75585ed8c97512e9985711f5d641d,test/src/test/java/org/apache/accumulo/test/functional/BloomFilterIT.java,"  @Test(timeout=500*1000)
    write(c, ""bt1"", 1, 0, 1000000000, 100);
    write(c, ""bt2"", 2, 0, 1000000000, 100);
    write(c, ""bt3"", 3, 0, 1000000000, 100);
    long t1 = query(c, ""bt1"", 1, 0, 1000000000, 100000, 100);
    long t2 = query(c, ""bt2"", 2, 0, 1000000000, 100000, 100);
    long t3 = query(c, ""bt3"", 3, 0, 1000000000, 100000, 100);
    long tb1 = query(c, ""bt1"", 1, 0, 1000000000, 100000, 100);
    long tb2 = query(c, ""bt2"", 2, 0, 1000000000, 100000, 100);
    long tb3 = query(c, ""bt3"", 3, 0, 1000000000, 100000, 100);","Use ""Integer.toString"" instead."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/file/keyfunctor/ColumnQualifierFunctor.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
24cf3d7644ff44f67fe48e5a3993e5aed73d93e8,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/filedata/ChunkInputFormat.java,"/**
 * An InputFormat that turns the file data ingested with FileDataIngest into an InputStream. Mappers used with this InputFormat must close the InputStream.
 */",Either log or rethrow this exception.
9b0751a7e22c8ba88ae5f78589541b041055b09b,src/core/src/main/java/org/apache/accumulo/core/iterators/RowDeletingIterator.java," * @deprecated since 1.4, replaced by {@link org.apache.accumulo.core.iterators.user.RowDeletingIterator}",Do not forget to remove this deprecated code someday.
ae6551d8f7566204bf43b444793831f44be48352,proxy/src/main/java/org/apache/accumulo/proxy/Proxy.java,"import org.apache.accumulo.minicluster.MiniAccumuloCluster;
  private static final Logger log = Logger.getLogger(Proxy.class);
    
    ",Either log or rethrow this exception.
55ddd27058e2475ba1bc870a66fb5d3777934eec,src/core/src/test/java/org/apache/accumulo/core/iterators/IntersectingIteratorTest.java,"import org.apache.accumulo.core.client.IteratorSetting;
    IteratorSetting is = new IteratorSetting(1, IntersectingIterator.class);
    IntersectingIterator.setColumnFamilies(is, columnFamilies);
    iter.init(source, is.getProperties(), env);
    IteratorSetting is = new IteratorSetting(1, IntersectingIterator.class);
    IntersectingIterator.setColumnFamilies(is, columnFamilies);
    iter.init(source, is.getProperties(), env);
    IteratorSetting is = new IteratorSetting(1, IntersectingIterator.class);
    IntersectingIterator.setColumnFamilies(is, columnFamilies);
    iter.init(mi, is.getProperties(), env);
    IteratorSetting is = new IteratorSetting(1, IntersectingIterator.class);
    IntersectingIterator.setColumnFamilies(is, columnFamilies, notFlags);
    iter.init(source, is.getProperties(), env);",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
a8eed5b2b329b35cae88136e1b4ea71cc875f737,server/src/main/java/org/apache/accumulo/server/test/randomwalk/security/AlterSystemPerm.java,"    String targetUser = SecurityHelper.getSysUserName(state);
    boolean hasPerm = SecurityHelper.getSysPerm(state, SecurityHelper.getSysUserName(state), sysPerm);
      SecurityHelper.setSysPerm(state, SecurityHelper.getSysUserName(state), sysPerm, false);
      SecurityHelper.setSysPerm(state, SecurityHelper.getSysUserName(state), sysPerm, true);",Either log or rethrow this exception.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/test/java/org/apache/accumulo/core/iterators/user/IntersectingIteratorTest2.java,"  
  @Test
  public void test() throws Exception {
    Value empty = new Value(new byte[] {});
    MockInstance inst = new MockInstance(""mockabye"");
    Connector connector = inst.getConnector(""user"", ""pass"");
    connector.tableOperations().create(""index"");
    BatchWriter bw = connector.createBatchWriter(""index"", 1000, 1000, 1);
    Mutation m = new Mutation(""000012"");
    m.put(""rvy"", ""5000000000000000"", empty);
    m.put(""15qh"", ""5000000000000000"", empty);
    bw.addMutation(m);
    bw.close();
    BatchScanner bs = connector.createBatchScanner(""index"", Constants.NO_AUTHS, 10);
    IteratorSetting ii = new IteratorSetting(20, IntersectingIterator.class);
    IntersectingIterator.setColumnFamilies(ii, new Text[] {new Text(""rvy""), new Text(""15qh"")});
    bs.addScanIterator(ii);
    bs.setRanges(Collections.singleton(new Range()));
    Iterator<Entry<Key,Value>> iterator = bs.iterator();
    Assert.assertTrue(iterator.hasNext());
    Entry<Key,Value> next = iterator.next();
    Key key = next.getKey();
    Assert.assertEquals(key.getColumnQualifier(), new Text(""5000000000000000""));
    Assert.assertFalse(iterator.hasNext());
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
83ec5ed392729a90ab458173dc14f98140654da5,src/core/src/main/java/org/apache/accumulo/core/iterators/ValueFormatException.java,"/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.iterators;

/**
 * Exception used for TypedValueCombiner and it's Encoders decode() function
 */
public class ValueFormatException extends IllegalArgumentException {
  
  /**
   * @param string
   */
  public ValueFormatException(String string) {
    super(string);
  }

  /**
   * @param nfe
   */
  public ValueFormatException(Exception nfe) {
    super(nfe);
  }

  private static final long serialVersionUID = 4170291568272971821L;
  
}",Move this variable to comply with Java Code Conventions.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/multitable/DropTable.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    @Override
    public void visit(State state, Properties props) throws Exception {
        
        @SuppressWarnings(""unchecked"")
        ArrayList<String> tables = (ArrayList<String>) state.get(""tableList"");
        
        // don't drop a table if we only have one table or less
        if (tables.size() <= 1) {
            return;
        }
        
        Random rand = new Random();
        String tableName = tables.remove(rand.nextInt(tables.size()));
        
        try {
            state.getConnector().tableOperations().delete(tableName);
            log.debug(""Dropped "" + tableName);
        } catch (TableNotFoundException e) {
            log.error(""Tried to drop table "" + tableName + "" but could not be found!"");
        }
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2db5ce6186e32c451328154b024951cc5090505f,server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"import org.apache.accumulo.server.tabletserver.log.DfsLogger;
    public boolean beginUpdatingLogsUsed(ArrayList<DfsLogger> copy, boolean mincFinish) {
      // make some closed references that represent the recovered logs
      currentLogs = new HashSet<DfsLogger>();
      for (LogEntry logEntry : logEntries) {
        for (String log : logEntry.logSet) {
          String[] parts = log.split(""/"", 2);
          currentLogs.add(new DfsLogger(tabletServer.getServerConfig(), logEntry.server, parts[1]));
        }
      }
      
    currentLogs = new HashSet<DfsLogger>();
          // always propagate deletes, unless last batch
          Compactor compactor = new Compactor(conf, fs, copy, null, compactTmpName, filesToCompact.size() == 0 ? propogateDeletes : true,
  private Set<DfsLogger> currentLogs = new HashSet<DfsLogger>();
  public Set<String> getCurrentLogs() {
    Set<String> result = new HashSet<String>();
    synchronized (currentLogs) {
      for (DfsLogger log : currentLogs) {
        result.add(log.toString());
      }
    }
    return result;
  }

      for (DfsLogger logger : otherLogs) {
      for (DfsLogger logger : currentLogs) {
  private Set<DfsLogger> otherLogs = Collections.emptySet();
  private boolean beginUpdatingLogsUsed(InMemoryMap memTable, Collection<DfsLogger> more, boolean mincFinish) {
        for (DfsLogger logger : more) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
6f18b26ba335eeb4b62bc6b680eccb7bc318eb05,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/WordCount.java,"    AccumuloOutputFormat.setOutputInfo(job.getConfiguration(), username, password.getBytes(), true, args[3]);
    AccumuloOutputFormat.setZooKeeperInstance(job.getConfiguration(), args[0], args[1]);",1 duplicated blocks of code must be removed.
99d8e8b55e5b594d6ba4f4cba804aa1e01066f6e,core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java,"      throw new TableNotFoundException(tableName, tableName, """");",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f2fd984992b79527ce5d2b5517251352457547e1,proxy/src/test/java/org/apache/accumulo/proxy/TestProxyTableOperations.java,  @Test,1 duplicated blocks of code must be removed.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/multitable/Write.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
98b2a0bc50c62700a38c88ce0354c31d2d642fbf,core/src/main/java/org/apache/accumulo/core/file/BloomFilterLayer.java,"      out.writeUTF(transformer.getClass().getName());
        @Override
     * Checks if this {@link RFile} contains keys from this range. The membership test is performed using a Bloom filter, so the result has always non-zero
     * probability of false positives.
    @Override","Use ""Integer.toString"" instead."
aaae7f37c421eababf17a045448605e1bdfc8ace,core/src/main/java/org/apache/accumulo/core/client/admin/InstanceOperationsImpl.java,"  
  /*
   * (non-Javadoc)
   * 
   * @see org.apache.accumulo.core.client.admin.InstanceOperations#getActiveCompactions(java.lang.String)
   */
  @Override
  public List<ActiveCompaction> getActiveCompactions(String tserver) throws AccumuloException, AccumuloSecurityException {
    List<org.apache.accumulo.core.tabletserver.thrift.ActiveCompaction> tas = ThriftUtil.execute(tserver, instance.getConfiguration(),
        new ClientExecReturn<List<org.apache.accumulo.core.tabletserver.thrift.ActiveCompaction>,TabletClientService.Client>() {
          @Override
          public List<org.apache.accumulo.core.tabletserver.thrift.ActiveCompaction> execute(TabletClientService.Client client) throws Exception {
            return client.getActiveCompactions(Tracer.traceInfo(), credentials);
          }
        });
    List<ActiveCompaction> as = new ArrayList<ActiveCompaction>();
    for (org.apache.accumulo.core.tabletserver.thrift.ActiveCompaction activeCompaction : tas) {
      as.add(new ActiveCompaction(instance, activeCompaction));
    }
    return as;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ccaad172643805d56f5dd46cbbc7dcd1a5519cbf,src/core/src/main/java/org/apache/accumulo/core/client/impl/ThriftScanner.java,"import org.apache.accumulo.cloudtrace.instrument.Span;
import org.apache.accumulo.cloudtrace.instrument.Trace;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bb3ba6fab4059b19c06a81eb75e5ccaa737c3548,core/src/main/java/org/apache/accumulo/core/client/security/tokens/PasswordToken.java,"    setPassword(CharBuffer.wrap(password));
  private void setPassword(CharBuffer charBuffer) {
    // encode() kicks back a C-string, which is not compatible with the old passwording system
    ByteBuffer bb = Constants.UTF8.encode(charBuffer);
    // create array using byter buffer length
    this.password = new byte[bb.remaining()];
    bb.get(this.password);
    if (!bb.isReadOnly()) {
      // clear byte buffer
      bb.rewind();
      while (bb.remaining() > 0) {
        bb.put((byte) 0);
      }
    }
  }

      setPassword(CharBuffer.wrap(properties.get(""password"")));
",Remove this hard-coded password.
a943f323b6ef9a614edee55c075eb63567b5c80a,server/src/main/java/org/apache/accumulo/server/monitor/Monitor.java,"import org.apache.accumulo.server.security.SystemCredentials;
            mmi = client.getMasterStats(Tracer.traceInfo(), SystemCredentials.get().getAsThrift());
            result = client.getStatus(Tracer.traceInfo(), SystemCredentials.get().getAsThrift());",Move this constructor to comply with Java Code Conventions.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/RenameTable.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
bfc44fd328c471d06b480835ba826b706dcf6816,test/src/main/java/org/apache/accumulo/test/functional/CreateAndUseTest.java,"import org.apache.accumulo.core.security.Authorizations;
    Scanner scanner1 = getConnector().createScanner(""t1"", Authorizations.EMPTY);
    Scanner scanner2 = getConnector().createScanner(""t2"", Authorizations.EMPTY);
    BatchScanner bs = getConnector().createBatchScanner(""t3"", Authorizations.EMPTY, 3);","Remove this unused method parameter ""range""."
2167c76e3ec2c8e7032de886613888c06b55a723,server/src/main/java/org/apache/accumulo/server/security/SecurityOperation.java,"import org.apache.accumulo.server.conf.ServerConfiguration;
    Authorizor toRet = Master.createInstanceFromPropertyName(ServerConfiguration.getSiteConfiguration(), Property.INSTANCE_SECURITY_AUTHORIZOR,
    Authenticator toRet = Master.createInstanceFromPropertyName(ServerConfiguration.getSiteConfiguration(), Property.INSTANCE_SECURITY_AUTHENTICATOR,
    PermissionHandler toRet = Master.createInstanceFromPropertyName(ServerConfiguration.getSiteConfiguration(), Property.INSTANCE_SECURITY_PERMISSION_HANDLER,
        PermissionHandler.class, ZKPermHandler.getInstance());",Extract the assignment out of this expression.
5c97efc2576278f4b8b6b004ded78c98251cda24,core/src/test/java/org/apache/accumulo/core/iterators/user/FilterTest.java,"    try {
      ((AgeOffFilter) a).validateOptions(EMPTY_OPTS);
      assertTrue(false);
    } catch (IllegalArgumentException e) {}
    try {
      a.validateOptions(EMPTY_OPTS);
      assertTrue(false);
    } catch (IllegalArgumentException e) {}",Return empty string instead.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/TeraSortIngest.java,"import org.apache.accumulo.core.cli.ClientOnRequiredTable;
import com.beust.jcommander.Parameter;

 *  
  static class Opts extends ClientOnRequiredTable {
    @Parameter(names=""--count"", description=""number of rows to ingest"", required=true)
    long numRows;
    @Parameter(names={""-nk"", ""--minKeySize""}, description=""miniumum key size"", required=true)
    int minKeyLength;
    @Parameter(names={""-xk"", ""--maxKeySize""}, description=""maximum key size"", required=true)
    int maxKeyLength;
    @Parameter(names={""-nv"", ""--minValueSize""}, description=""minimum key size"", required=true)
    int minValueLength;
    @Parameter(names={""-xv"", ""--maxValueSize""}, description=""maximum key size"", required=true)
    int maxValueLength;
    @Parameter(names=""--splits"", description=""number of splits to create in the table"")
    int splits = 0;
  }
  
    Opts opts = new Opts();
    opts.parseArgs(TeraSortIngest.class.getName(), args);
    opts.setAccumuloConfigs(job);
    conf.setLong(NUMROWS, opts.numRows);
    conf.setInt(""cloudgen.minkeylength"", opts.minKeyLength);
    conf.setInt(""cloudgen.maxkeylength"", opts.maxKeyLength);
    conf.setInt(""cloudgen.minvaluelength"", opts.minValueLength);
    conf.setInt(""cloudgen.maxvaluelength"", opts.maxValueLength);
    conf.set(""cloudgen.tablename"", opts.tableName);
      conf.setInt(NUMSPLITS, opts.splits);","Remove this unused private ""appendProp"" method."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,examples/simple/src/main/java/org/apache/accumulo/examples/simple/helloworld/InsertWithOutputFormat.java,"import org.apache.accumulo.core.cli.ClientOnRequiredTable;

    ClientOnRequiredTable opts = new ClientOnRequiredTable();
    opts.parseArgs(this.getClass().getName(), args);
    
    opts.setAccumuloConfigs(job);
    Text table = new Text(opts.tableName);
      rw.write(table, m); // repeat until done","Remove this unused private ""appendProp"" method."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/iterators/aggregation/StringSummation.java,    return new Value(Long.toString(sum).getBytes());,"Remove this unused private ""appendProp"" method."
4661491d0b1de8fe4d5ce1d3534de01546bfb3df,test/src/test/java/org/apache/accumulo/test/functional/WriteAheadLogIT.java,public class WriteAheadLogIT extends ConfigurableMacIT {,"Use ""Integer.toString"" instead."
656a3614e0981462a0ee2c54b4754466d67fb72f,server/src/main/java/org/apache/accumulo/server/tabletserver/compaction/DefaultCompactionStrategy.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
  
  @Override",2 duplicated blocks of code must be removed.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/RegexExample.java,"import org.apache.accumulo.core.cli.ClientOnRequiredTable;
import com.beust.jcommander.Parameter;

  static class Opts extends ClientOnRequiredTable {
    @Parameter(names=""--rowRegex"")
    String rowRegex;
    @Parameter(names=""--columnFamilyRegex"")
    String columnFamilyRegex;
    @Parameter(names=""--columnQualifierRegex"")
    String columnQualifierRegex;
    @Parameter(names=""--valueRegex"")
    String valueRegex;
    @Parameter(names=""--output"", required=true)
    String destination;
  }
  
    Opts opts = new Opts();
    opts.parseArgs(getClass().getName(), args);
    
    Job job = new Job(getConf(), getClass().getSimpleName());
    job.setJarByClass(getClass());
    opts.setAccumuloConfigs(job);
    RegExFilter.setRegexs(regex, opts.rowRegex, opts.columnFamilyRegex, opts.columnQualifierRegex, opts.valueRegex, false);
    TextOutputFormat.setOutputPath(job, new Path(opts.destination));
    System.out.println(""setRowRegex: "" + opts.rowRegex);
    System.out.println(""setColumnFamilyRegex: "" + opts.columnFamilyRegex);
    System.out.println(""setColumnQualifierRegex: "" + opts.columnQualifierRegex);
    System.out.println(""setValueRegex: "" + opts.valueRegex);","Remove this call to ""exit"" or ensure it is really required."
40dee983d4ed5647fd6158f402b24e28bdc6b6e1,core/src/main/java/org/apache/accumulo/core/client/security/tokens/AuthenticationToken.java,"import java.util.Collection;
  public class Properties implements Destroyable, Map<String,char[]> {
    
    private boolean destroyed = false;
    private HashMap<String,char[]> map = new HashMap<String,char[]>();
    
    private void checkDestroyed() {
      if (destroyed)
        throw new IllegalStateException();
    }
      checkDestroyed();
      return map.put(key, toPut);
      checkDestroyed();
    
    @Override
    public int size() {
      checkDestroyed();
      return map.size();
    }
    
    @Override
    public boolean isEmpty() {
      checkDestroyed();
      return map.isEmpty();
    }
    
    @Override
    public boolean containsKey(Object key) {
      checkDestroyed();
      return map.containsKey(key);
    }
    
    @Override
    public boolean containsValue(Object value) {
      checkDestroyed();
      return map.containsValue(value);
    }
    
    @Override
    public char[] get(Object key) {
      checkDestroyed();
      // TODO Auto-generated method stub
      return map.get(key);
    }
    
    @Override
    public char[] put(String key, char[] value) {
      checkDestroyed();
      return map.put(key, value);
    }
    
    @Override
    public char[] remove(Object key) {
      checkDestroyed();
      return map.remove(key);
    }
    
    @Override
    public void putAll(Map<? extends String,? extends char[]> m) {
      checkDestroyed();
      map.putAll(m);
    }
    
    @Override
    public void clear() {
      checkDestroyed();
      map.clear();
    }
    
    @Override
    public Set<String> keySet() {
      checkDestroyed();
      return map.keySet();
    }
    
    @Override
    public Collection<char[]> values() {
      checkDestroyed();
      return map.values();
    }
    
    @Override
    public Set<java.util.Map.Entry<String,char[]>> entrySet() {
      checkDestroyed();
      return map.entrySet();
    }",Remove this hard-coded password.
0811c7958ecc1a9a2c8f80702273856f1cd2eab8,src/trace/src/main/java/org/apache/accumulo/cloudtrace/instrument/TraceProxy.java,package org.apache.accumulo.cloudtrace.instrument;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/iterators/SortedKeyIterator.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
8773302cfebff3d1c129b32e7f92dec4094496da,core/src/test/java/org/apache/accumulo/core/client/mapreduce/AccumuloOutputFormatTest.java,"    Connector c = mockInstance.getConnector(""root"", new PasswordToken(""""));","Rename ""connector"" which hides the field declared at line 67."
513e8e3fe43127ab1a75c8ccac64a907769e4a25,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/iterator/FieldIndexIterator.java,"import org.apache.commons.jexl2.Expression;
import org.apache.commons.jexl2.JexlContext;
import org.apache.commons.jexl2.JexlEngine;
import org.apache.commons.jexl2.MapContext;
import org.apache.commons.jexl2.parser.ParserTreeConstants;
import org.apache.hadoop.io.Text;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;
      if (log.isDebugEnabled()) {
        String myRow = """";
        if (hasTop()) {
          myRow = topKey.getRow().toString();
        } else if (currentRow != null) {
          myRow = currentRow.toString();
        }
        log.debug(""My row "" + myRow + "" is less than jump row: "" + jumpKey.getRow() + "" seeking"");
        
        Text cq = jumpKey.getColumnQualifier();
        int index = cq.find(NULL_BYTE);
        if (0 <= index) {
          cq.set(cq.getBytes(), index + 1, cq.getLength() - index - 1);
        } else {
          log.error(""Expected a NULL separator in the column qualifier"");
          this.topKey = null;
          this.topValue = null;
          return false;
        }

        Key startKey = new Key(topKey.getRow(), fName, new Text(fValue + NULL_BYTE + cq));",31 duplicated blocks of code must be removed.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/sequential/MapRedVerify.java,"package org.apache.accumulo.test.randomwalk.sequential;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/trace/src/main/java/cloudtrace/instrument/Trace.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 * A Trace allows a user to gather global, distributed, detailed performance information while requesting a service. The general usage for a user is to do
 * something like this:
 * Trace.on(""doSomething""); try { doSomething(); } finally { Trace.off(); }
 * 
 * This updates the environment for this thread, and data collection will occur whenever the thread encounters any Span notations in the code. The information
 * about the trace will also be carried over RPC calls as well. If the thread should hand off work to another thread, the environment can be carried with it, so
 * that the trace continues on the new thread.
    
    // Turn tracing off:
    
    
    
        if (isTracing()) return new TraceRunnable(Trace.currentTrace(), runnable);
    // Sample trace all calls to the given object
        return TraceProxy.trace(instance, dist);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
0811c7958ecc1a9a2c8f80702273856f1cd2eab8,src/trace/src/main/java/org/apache/accumulo/cloudtrace/instrument/Span.java,package org.apache.accumulo.cloudtrace.instrument;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b2704423be3181ab1681dd0bf6e3f093135bb18d,src/examples/wikisearch/ingest/src/test/java/org/apache/accumulo/examples/wikisearch/iterator/TextIndexTest.java,"  
  @Test
  public void testEmptyValue() throws InvalidProtocolBufferException {
    Builder builder = createBuilder();
    builder.addWordOffset(13);
    builder.addWordOffset(15);
    builder.addWordOffset(19);
    builder.setNormalizedTermFrequency(0.12f);
    
    values.add(new Value("""".getBytes()));
    values.add(new Value(builder.build().toByteArray()));
    values.add(new Value("""".getBytes()));
    
    builder = createBuilder();
    builder.addWordOffset(1);
    builder.addWordOffset(5);
    builder.setNormalizedTermFrequency(0.1f);
    
    values.add(new Value(builder.build().toByteArray()));
    values.add(new Value("""".getBytes()));
    
    builder = createBuilder();
    builder.addWordOffset(3);
    builder.setNormalizedTermFrequency(0.05f);
    
    values.add(new Value(builder.build().toByteArray()));
    values.add(new Value("""".getBytes()));
    
    Value result = combiner.reduce(new Key(), values.iterator());
    
    TermWeight.Info info = TermWeight.Info.parseFrom(result.get());
    
    Assert.assertTrue(info.getNormalizedTermFrequency() == 0.27f);
    
    List<Integer> offsets = info.getWordOffsetList();
    Assert.assertTrue(offsets.size() == 6);
    Assert.assertTrue(offsets.get(0) == 1);
    Assert.assertTrue(offsets.get(1) == 3);
    Assert.assertTrue(offsets.get(2) == 5);
    Assert.assertTrue(offsets.get(3) == 13);
    Assert.assertTrue(offsets.get(4) == 15);
    Assert.assertTrue(offsets.get(5) == 19);
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
84a508592afc8fde6e035f6fef7f5990752256f2,core/src/test/java/org/apache/accumulo/core/client/impl/TabletLocatorImplTest.java,"import org.apache.accumulo.core.security.tokens.AccumuloToken;
import org.apache.accumulo.core.security.tokens.InstanceTokenWrapper;
    /**
     * @deprecated @since 1.5
     */
    public Connector getConnector(InstanceTokenWrapper itw) throws AccumuloException, AccumuloSecurityException {
      throw new UnsupportedOperationException();
    }
    
    /**
     * @deprecated @since 1.5
     */
    @Override
    /**
     * @deprecated @since 1.5
     */
    /**
     * @deprecated @since 1.5
     */
    
    public Connector getConnector(AccumuloToken<?,?> token) throws AccumuloException, AccumuloSecurityException {
      throw new UnsupportedOperationException();
    }","Immediately return this expression instead of assigning it to the temporary variable ""ret""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/test/java/org/apache/accumulo/core/data/MapFileTest.java,"          if (!moreKeys)
            break;","Remove this call to ""exit"" or ensure it is really required."
ff1e582020a1437e9c520ef3a1af99477462d803,core/src/main/java/org/apache/accumulo/core/util/shell/commands/DUCommand.java,"    return ""prints how much space is used by files referenced by a table.  When multiple tables are specified it prints how much space is used by files shared between tables, if any."";",2 duplicated blocks of code must be removed.
1d138a73ad757c12b3d30aa1a6029b63cc3eaa66,server/src/test/java/org/apache/accumulo/server/master/TestMergeState.java,import org.apache.accumulo.core.security.tokens.PasswordToken;,Replace all tab characters in this file by sequences of white-spaces.
6b2e7b0302dfecf15c0de2069f3bdfa2f53701cd,core/src/main/java/org/apache/accumulo/core/client/admin/InstanceOperationsImpl.java,"    Client client = null;
    try {
      client = ThriftUtil.getTServerClient(tserver, instance.getConfiguration());
      
      List<ActiveScan> as = new ArrayList<ActiveScan>();
      for (org.apache.accumulo.core.tabletserver.thrift.ActiveScan activeScan : client.getActiveScans(Tracer.traceInfo(), credentials)) {
        try {
          as.add(new ActiveScan(instance, activeScan));
        } catch (TableNotFoundException e) {
          throw new AccumuloException(e);
        }
      return as;
    } catch (TTransportException e) {
      throw new AccumuloException(e);
    } catch (ThriftSecurityException e) {
      throw new AccumuloSecurityException(e.user, e.code, e);
    } catch (TException e) {
      throw new AccumuloException(e);
    } finally {
      if (client != null)
        ThriftUtil.returnClient(client);
    Client client = null;
    try {
      client = ThriftUtil.getTServerClient(tserver, instance.getConfiguration());
      
      List<ActiveCompaction> as = new ArrayList<ActiveCompaction>();
      for (org.apache.accumulo.core.tabletserver.thrift.ActiveCompaction activeCompaction : client.getActiveCompactions(Tracer.traceInfo(), credentials)) {
        as.add(new ActiveCompaction(instance, activeCompaction));
      }
      return as;
    } catch (TTransportException e) {
      throw new AccumuloException(e);
    } catch (ThriftSecurityException e) {
      throw new AccumuloSecurityException(e.user, e.code, e);
    } catch (TException e) {
      throw new AccumuloException(e);
    } finally {
      if (client != null)
        ThriftUtil.returnClient(client);",2 duplicated blocks of code must be removed.
4854492077edafa8d99159fed5e731ea5f8632f9,core/src/test/java/org/apache/accumulo/core/iterators/user/TransformingIteratorTest.java,"import java.util.HashMap;
import org.junit.Assert;
  @Test
  public void testValidateOptions() {
    TransformingIterator ti = new ColFamReversingKeyTransformingIterator();
    IteratorSetting is = new IteratorSetting(100, ""cfrkt"", ColFamReversingKeyTransformingIterator.class);
    TransformingIterator.setAuthorizations(is, new Authorizations(""A"", ""B""));
    TransformingIterator.setMaxBufferSize(is, 10000000);
    Assert.assertTrue(ti.validateOptions(is.getOptions()));
    
    Map<String,String> opts = new HashMap<String,String>();
    
    opts.put(TransformingIterator.MAX_BUFFER_SIZE_OPT, ""10M"");
    Assert.assertTrue(ti.validateOptions(is.getOptions()));
    
    opts.clear();
    opts.put(TransformingIterator.MAX_BUFFER_SIZE_OPT, ""A,B"");
    try {
      ti.validateOptions(opts);
      Assert.assertFalse(true);
    } catch (IllegalArgumentException e) {}

  }
  ",Either log or rethrow this exception.
48e331cc2d55a37421b5dd7bbb45e91657ea811f,core/src/main/java/org/apache/accumulo/core/util/shell/commands/GetSplitsCommand.java,"        for (Text row : maxSplits > 0 ? shellState.getConnector().tableOperations().listSplits(tableName, maxSplits) : shellState.getConnector()
            .tableOperations().listSplits(tableName)) {",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
6a5500a5b3f34b26386877e332973e7b926aa4ce,core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormat.java,"import org.apache.accumulo.core.security.CredentialHelper;
import org.apache.accumulo.core.security.thrift.tokens.SecurityToken;
   * @param principal
   * @param token
   * @throws AccumuloSecurityException 
  public static void setConnectorInfo(JobConf job, String principal, SecurityToken token) throws AccumuloSecurityException {
    OutputConfigurator.setConnectorInfo(CLASS, job, principal, token);
   * Gets the principal from the configuration.
   * @see #setConnectorInfo(JobConf, String, SecurityToken)
  protected static String getPrincipal(JobConf job) {
   * Gets the serialized token class from the configuration.
   * 
   * @param job
   *          the Hadoop context for the configured job
   * @return the user name
   * @since 1.5.0
   * @see #setConnectorInfo(JobConf, String, SecurityToken)
   * @see #setConnectorInfo(JobConf, Path)
   */
  protected static String getTokenClass(JobConf job) {
    return OutputConfigurator.getTokenClass(CLASS, job);
  }
  
  /**
  protected static byte[] getToken(JobConf job) {
        this.conn = getInstance(job).getConnector(getPrincipal(job), CredentialHelper.extractToken(getTokenClass(job), getToken(job)));
      Connector c = getInstance(job).getConnector(getPrincipal(job), CredentialHelper.extractToken(getTokenClass(job), getToken(job)));
      if (!c.securityOperations().authenticateUser(getPrincipal(job), CredentialHelper.extractToken(getTokenClass(job), getToken(job))))",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
5c97efc2576278f4b8b6b004ded78c98251cda24,core/src/main/java/org/apache/accumulo/core/cli/ClientOnDefaultTable.java,"  @Parameter(names = ""--table"", description = ""table to use"")
  @Override
    AccumuloInputFormat.setConnectorInfo(job, getAccumuloToken());
    AccumuloInputFormat.setInputTableName(job, getTableName());
    AccumuloInputFormat.setScanAuthorizations(job, auths);
    AccumuloOutputFormat.setConnectorInfo(job, getAccumuloToken());
    AccumuloOutputFormat.setCreateTables(job, true);
    AccumuloOutputFormat.setDefaultTableName(job, getTableName());
  ",Return empty string instead.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/iterators/conf/ColumnSet.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
99da5641c28784c7b717cce6749673863c2ec8cf,test/src/main/java/org/apache/accumulo/test/randomwalk/security/DropTable.java,"import org.apache.accumulo.core.security.Credentials;
    boolean hasPermission = WalkingSecurity.get(state).canDeleteTable(new Credentials(principal, token).toThrift(state.getInstance()), tableName);","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/examples/src/main/java/org/apache/accumulo/examples/shard/ContinuousQuery.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
56cd6b7861a0dbfc21fa08f44d11210b45f0fd96,core/src/main/java/org/apache/accumulo/core/util/shell/commands/ClasspathCommand.java,"import java.io.IOException;

import jline.ConsoleReader;

import org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.Printer;
    final ConsoleReader reader = shellState.getReader();
    AccumuloVFSClassLoader.printClassPath(new Printer() {
      @Override
      public void print(String s) {
        try {
          reader.printString(s + ""\n"");
        } catch (IOException ex) {
          throw new RuntimeException(ex);
        }
      }
    });",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/logger/LogService.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
9dc244484b4d35859d4d22b27580a47ae7da0e1a,core/src/main/java/org/apache/accumulo/core/data/ArrayByteSequence.java,"import java.nio.ByteBuffer;
  public ArrayByteSequence(ByteBuffer buffer) {
    if (buffer.hasArray()) {
      this.data = buffer.array();
      this.offset = buffer.arrayOffset();
      this.length = buffer.limit();
    } else {
      this.data = new byte[buffer.remaining()];
      this.offset = 0;
      buffer.get(data);
    }
  }
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
99da5641c28784c7b717cce6749673863c2ec8cf,core/src/main/java/org/apache/accumulo/core/util/CreateToken.java,"import org.apache.accumulo.core.client.security.tokens.AuthenticationToken.AuthenticationTokenSerializer;
import org.apache.commons.codec.binary.Base64;
      String tokenBase64 = Base64.encodeBase64String(AuthenticationTokenSerializer.serialize(token));","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
660634b70528861276d918502f21f622dc90103d,core/src/main/java/org/apache/accumulo/core/iterators/TypedValueCombiner.java,"import org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader;
      Class<? extends Encoder<V>> clazz = (Class<? extends Encoder<V>>) AccumuloVFSClassLoader.loadClass(encoderClass, Encoder.class);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/test/QueryMetadataTable.java,"          if (!entry.getKey().getRow().equals(row))
            break;
      if (!entry.getKey().getRow().toString().startsWith(Constants.METADATA_TABLE_ID))
        rowSet.add(entry.getKey().getRow());","Remove this call to ""exit"" or ensure it is really required."
41601b2b3ab2d0502e8cae6892817e83956146e6,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaConfiguration.java,"  public final static String PARTITIONED_ARTICLES_DIRECTORY = ""wikipedia.partitioned.directory"";
  
  public final static String RUN_PARTITIONER = ""wikipedia.run.partitioner"";
  public final static String RUN_INGEST = ""wikipedia.run.ingest"";
  
  public static Path getPartitionedArticlesPath(Configuration conf) {
    return new Path(conf.get(PARTITIONED_ARTICLES_DIRECTORY));
  }
  
  public static boolean runPartitioner(Configuration conf) {
    return conf.getBoolean(RUN_PARTITIONER, false);
  }

  public static boolean runIngest(Configuration conf) {
    return conf.getBoolean(RUN_INGEST, true);
  }
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/client/impl/ServerClient.java,"        if (client != null)
          ServerClient.close(client);
        if (client != null)
          ServerClient.close(client);
      if (data != null && !new String(data).equals(""master""))
        servers.add(new ThriftTransportKey(new ServerServices(new String(data)).getAddressString(Service.TSERV_CLIENT), instance.getConfiguration().getPort(
            Property.TSERV_CLIENTPORT), instance.getConfiguration().getTimeInMillis(Property.GENERAL_RPC_TIMEOUT)));
      if (!opened)
        log.warn(""Failed to find an available server in the list of servers: "" + servers);","Remove this call to ""exit"" or ensure it is really required."
98cd224fc0c5e1e0cd2cbf407599c2bd69228c9d,server/src/main/java/org/apache/accumulo/server/client/ClientServiceHandler.java,"  private static Map<String,String> conf(TCredentials credentials, AccumuloConfiguration conf) throws TException {
      String key = entry.getKey();
      if (!Property.isSensitive(key))
        result.put(key, entry.getValue());
    ","Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
db4a291f944e8a6ad9d63dcbedfa9fe3108f0ead,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/Node.java,"  long progress = System.currentTimeMillis();
  
  synchronized public void makingProgress() {
    progress = System.currentTimeMillis();
  }
  
  synchronized public long lastProgress() {
    return progress;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31df502362714dc0e1b81b87ca12be8bb8629c4,src/server/src/main/java/org/apache/accumulo/server/security/ZKAuthenticator.java,"    if (userExists(user)) {
      byte[] authsBytes = zooCache.get(ZKUserPath + ""/"" + user + ZKUserAuths);
      if (authsBytes != null)
        return Tool.convertAuthorizations(authsBytes);
    }
      return Tool.convertTablePermissions(serializedPerms).contains(permission);
        byte[] permBytes = zooCache.get(ZKUserPath + ""/"" + user + ZKUserSysPerms);
        if (permBytes == null) {
          throw new AccumuloSecurityException(credentials.user, SecurityErrorCode.USER_DOESNT_EXIST); // user doesn't exist
        }

        Set<SystemPermission> perms = Tool.convertSystemPermissions(permBytes);
    } else
      throw new AccumuloSecurityException(credentials.user, SecurityErrorCode.USER_DOESNT_EXIST); // user doesn't exist
      byte[] sysPermBytes = zooCache.get(ZKUserPath + ""/"" + user + ZKUserSysPerms);
      if (sysPermBytes == null)
        throw new AccumuloSecurityException(credentials.user, SecurityErrorCode.USER_DOESNT_EXIST);

      Set<SystemPermission> sysPerms = Tool.convertSystemPermissions(sysPermBytes);
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/file/FileSKVWriter.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    boolean supportsLocalityGroups();
    
    void startNewLocalityGroup(String name, Set<ByteSequence> columnFamilies) throws IOException;
    
    void startDefaultLocalityGroup() throws IOException;
    
    void append(Key key, Value value) throws IOException;
    
    DataOutputStream createMetaStore(String name) throws IOException;
    
    void close() throws IOException;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2eac79e1347a6a18faffdcbcd453879ad78f1ca2,proxy/src/test/java/org/apache/accumulo/proxy/TestProxyInstanceOperations.java,import java.util.Collections;,Either log or rethrow this exception.
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,core/src/main/java/org/apache/accumulo/core/util/shell/commands/TraceCommand.java,import org.apache.accumulo.trace.instrument.Trace;,Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/functional/ServerSideErrorTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
e511baa049c58509539ab7eb793c0da97c9d3ef6,core/src/main/java/org/apache/accumulo/core/client/admin/SecurityOperationsImpl.java,  @Deprecated,Return empty string instead.
162e17aa5e9d1f86066301921ad01e45fa0c8ad4,src/examples/wikisearch/ingest/src/test/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaMapperTest.java,"    conf.set(WikipediaConfiguration.NUM_GROUPS, ""1"");","Immediately return this expression instead of assigning it to the temporary variable ""result""."
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/test/java/org/apache/accumulo/core/iterators/ColumnFilterTest.java,"  
  Key nk(String row, String cf, String cq) {
    return new Key(new Text(row), new Text(cf), new Text(cq));
  }
  
  Column nc(String cf) {
    return new Column(cf.getBytes(), null, null);
  }
  
  Column nc(String cf, String cq) {
    return new Column(cf.getBytes(), cq.getBytes(), null);
  }
  
  public void test1() {
    HashSet<Column> columns = new HashSet<Column>();
    columns.add(nc(""cf1""));
    ColumnQualifierFilter cf = new ColumnQualifierFilter(null, columns);
    assertTrue(cf.accept(nk(""r1"", ""cf1"", ""cq1""), new Value(new byte[0])));
    assertTrue(cf.accept(nk(""r1"", ""cf2"", ""cq1""), new Value(new byte[0])));
  }
  
  public void test2() {
    HashSet<Column> columns = new HashSet<Column>();
    columns.add(nc(""cf1""));
    columns.add(nc(""cf2"", ""cq1""));
    ColumnQualifierFilter cf = new ColumnQualifierFilter(null, columns);
    
    assertTrue(cf.accept(nk(""r1"", ""cf1"", ""cq1""), new Value(new byte[0])));
    assertTrue(cf.accept(nk(""r1"", ""cf2"", ""cq1""), new Value(new byte[0])));
    assertFalse(cf.accept(nk(""r1"", ""cf2"", ""cq2""), new Value(new byte[0])));
  }
  
  public void test3() {
    HashSet<Column> columns = new HashSet<Column>();
    
    columns.add(nc(""cf2"", ""cq1""));
    
    ColumnQualifierFilter cf = new ColumnQualifierFilter(null, columns);
    
    assertFalse(cf.accept(nk(""r1"", ""cf1"", ""cq1""), new Value(new byte[0])));
    assertTrue(cf.accept(nk(""r1"", ""cf2"", ""cq1""), new Value(new byte[0])));
    assertFalse(cf.accept(nk(""r1"", ""cf2"", ""cq2""), new Value(new byte[0])));
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/tabletserver/metrics/TabletServerMinCMetrics.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/data/ByteSequence.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServerConstants.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
a63607a89356ef85af81e377b289fafe413687c5,server/src/main/java/org/apache/accumulo/server/tabletserver/mastermessage/TabletStatusMessage.java,"import org.apache.accumulo.cloudtrace.instrument.Tracer;
    client.reportTabletStatus(Tracer.traceInfo(), auth, serverName, status, extent.toThrift());","Immediately return this expression instead of assigning it to the temporary variable ""client""."
ccaad172643805d56f5dd46cbbc7dcd1a5519cbf,src/trace/src/main/java/org/apache/accumulo/cloudtrace/instrument/TraceRunnable.java,package org.apache.accumulo.cloudtrace.instrument;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
24cf3d7644ff44f67fe48e5a3993e5aed73d93e8,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/filedata/ChunkInputStream.java,"  public ChunkInputStream(PeekingIterator<Entry<Key,Value>> in) throws IOException {
  public void setSource(PeekingIterator<Entry<Key,Value>> in) throws IOException {
      throw new IOException(""setting new source without closing old one"");
    if (buf.length == 0)
      gotEndMarker = true;
    if (currentChunk != 0) {
      source = null;
      throw new IOException(""starting chunk number isn't 0 for "" + currentKey.getRow());
    }
      throw new IllegalStateException(""don't get visibilities before chunks have been completely read"");",Either log or rethrow this exception.
d36fed370703d319d0a8dc041927bfe3f2e32ba7,src/core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,"  // single command to execute from the command line
  private String execCommand = null;
    Option execCommandOpt = new Option(""e"", ""execute-command"", true, ""executes a command, and then exits"");
    opts.addOption(execCommandOpt);

    } else if (cl.hasOption(execfileVerboseOption.getOpt())) {
    }
    if (cl.hasOption(execCommandOpt.getOpt())) {
      execCommand = cl.getOptionValue(execCommandOpt.getOpt());
    }
    } else if (execCommand != null) {
      for (String command : execCommand.split(""\n"")) {
        execCommand(command, true, isVerbose());
      }
      return exitCode;","Remove the literal ""true"" boolean value."
5ceae82e623f5802c6dfea55512c03267f35128f,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloInputFormat.java,    log.setLevel(getLogLevel(context.getConfiguration()));,"Remove this unused private ""debugQuery"" method."
6a5500a5b3f34b26386877e332973e7b926aa4ce,test/src/main/java/org/apache/accumulo/test/randomwalk/security/SetAuths.java,"import org.apache.accumulo.core.security.thrift.Credential;
    Credential auth;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/constraints/MaxMutationSize.java,package org.apache.accumulo.examples.simple.constraints;,"Rename ""table"" which hides the field declared at line 107."
d6c612d087e7f922c9935888cf443d4a9f1999c2,core/src/main/java/org/apache/accumulo/core/util/TTimeoutTransport.java,"import java.lang.reflect.Method;
  private static InputStream getInputStream(Socket socket, long timeout) {
    try {
      Method m = NetUtils.class.getMethod(""getInputStream"", Socket.class, Long.TYPE);
      return (InputStream)m.invoke(null, socket, timeout);
    } catch (Exception e) {
      throw new RuntimeException(e);
    }
  }
  
    InputStream input = new BufferedInputStream(getInputStream(socket, timeoutMillis), 1024 * 10);",Either log or rethrow this exception.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloOutputFormat.java,"    if (conf.getBoolean(OUTPUT_INFO_HAS_BEEN_SET, false))
      throw new IllegalStateException(""Output info can only be set once per job"");
    if (defaultTable != null)
      conf.set(DEFAULT_TABLE_NAME, defaultTable);
    if (conf.getBoolean(INSTANCE_HAS_BEEN_SET, false))
      throw new IllegalStateException(""Instance info can only be set once per job"");
    if (job.getConfiguration().get(LOGLEVEL) != null)
      return Level.toLevel(job.getConfiguration().getInt(LOGLEVEL, Level.INFO.toInt()));
      if (l != null)
        log.setLevel(getLogLevel(attempt));
      if (simulate)
        log.info(""Simulating output only. No writes to tables will occur"");
      if (table == null || table.toString().isEmpty())
        table = this.defaultTableName;
      if (!simulate && table == null)
        throw new IOException(""No table or default table specified. Try simulation mode next time"");
      if (simulate)
        return;
      if (!bws.containsKey(table))
        try {
          addTable(table);
        } catch (Exception e) {
          e.printStackTrace();
          throw new IOException(e);
        }
      if (bw != null)
        bws.put(tableName, bw);
        if ((b > 0x20) && (b < 0x7e))
          sb.append((char) b);
        else
          sb.append(String.format(""x%02x"", b));
      if (simulate)
        return;
    if (!conf.getBoolean(OUTPUT_INFO_HAS_BEEN_SET, false))
      throw new IOException(""Output info has not been set."");
    if (!conf.getBoolean(INSTANCE_HAS_BEEN_SET, false))
      throw new IOException(""Instance info has not been set."");
      if (!c.securityOperations().authenticateUser(getUsername(job), getPassword(job)))
        throw new IOException(""Unable to authenticate user"");","Remove this call to ""exit"" or ensure it is really required."
d25d1fe2436f530e6084da16c97626f64de8ce8c,core/src/main/java/org/apache/accumulo/core/util/TableDiskUsage.java,"import org.apache.accumulo.core.conf.Property;
      FileStatus[] files = fs.globStatus(new Path(acuConf.get(Property.INSTANCE_DFS_DIR) + ""/tables/"" + tableId + ""/*/*""));","Make the ""audit"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
a5765d111e67b5f1cd645909285f729b902c9b6a,server/src/main/java/org/apache/accumulo/server/Accumulo.java,"import org.apache.hadoop.hdfs.protocol.FSConstants;
  
        if (!dfs.setSafeMode(FSConstants.SafeModeAction.SAFEMODE_GET))",This block of commented-out lines of code should be removed.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/PrintInfo.java,"package org.apache.accumulo.core.file.rfile.bcfile;

import java.io.PrintStream;
import java.util.Map.Entry;
import java.util.Set;

import org.apache.accumulo.core.conf.AccumuloConfiguration;
import org.apache.accumulo.core.file.FileUtil;
import org.apache.accumulo.core.file.rfile.bcfile.BCFile.MetaIndexEntry;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FSDataInputStream;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;


public class PrintInfo {
	public static void printMetaBlockInfo(Configuration conf, FileSystem fs, Path path) throws Exception {
		FSDataInputStream fsin = fs.open(path);
		BCFile.Reader bcfr = new BCFile.Reader(fsin, fs.getFileStatus(path).getLen(), conf);
		
		Set<Entry<String, MetaIndexEntry>> es = bcfr.metaIndex.index.entrySet();
		
		for (Entry<String, MetaIndexEntry> entry : es) {
			PrintStream out = System.out;
			out.println(""Meta block     : ""+entry.getKey());
			out.println(""      Raw size             : ""+String.format(""%,d"",entry.getValue().getRegion().getRawSize())+"" bytes"");
			out.println(""      Compressed size      : ""+String.format(""%,d"",entry.getValue().getRegion().getCompressedSize())+"" bytes"");
			out.println(""      Compression type     : ""+entry.getValue().getCompressionAlgorithm().getName());
			out.println();
		}
	}
	
	public static void main(String[] args) throws Exception {
		Configuration conf = new Configuration();
		@SuppressWarnings(""deprecation"")
        FileSystem fs = FileUtil.getFileSystem(conf, AccumuloConfiguration.getSiteConfiguration());
		Path path = new Path(args[0]);
		printMetaBlockInfo(conf, fs, path);
	}
}",Return empty string instead.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/tabletserver/UniqueNameAllocator.java,"    if (instance == null)
      instance = new UniqueNameAllocator();","Remove this call to ""exit"" or ensure it is really required."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ClasspathCommand.java,"package org.apache.accumulo.core.util.shell.commands;

import org.apache.accumulo.core.util.shell.Shell;
import org.apache.accumulo.core.util.shell.Shell.Command;
import org.apache.accumulo.start.classloader.AccumuloClassLoader;
import org.apache.commons.cli.CommandLine;


public class ClasspathCommand extends Command {
	@Override
	public int execute(String fullCommand, CommandLine cl, Shell shellState) {
		AccumuloClassLoader.printClassPath();
		return 0;
	}

	@Override
	public String description() {
		return ""lists the current files on the classpath"";
	}

	@Override
	public int numArgs() {
		return 0;
	}
}",Return empty string instead.
ccaad172643805d56f5dd46cbbc7dcd1a5519cbf,src/server/src/main/java/org/apache/accumulo/server/master/Master.java,"import org.apache.accumulo.cloudtrace.instrument.thrift.TraceWrap;
import org.apache.accumulo.cloudtrace.thrift.TInfo;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
007a29e2e536d90787f1be6317069f315f9289cd,core/src/main/java/org/apache/accumulo/core/util/shell/commands/TraceCommand.java,"              shellState.printException(ex);
      shellState.printException(new IllegalArgumentException(""Expected 0 or 1 argument. There were "" + cl.getArgs().length + "".""));
      printHelp(shellState);",Either log or rethrow this exception.
84a508592afc8fde6e035f6fef7f5990752256f2,server/src/main/java/org/apache/accumulo/server/util/FindOfflineTablets.java,"import org.apache.accumulo.core.security.tokens.InstanceTokenWrapper;
    MetaDataTableScanner scanner = new MetaDataTableScanner(instance, new InstanceTokenWrapper(opts.getAccumuloToken(), instance.getInstanceID()), new Range());","Immediately return this expression instead of assigning it to the temporary variable ""ret""."
8a33be695e0bcb769412db499df9cbec23004740,examples/simple/src/main/java/org/apache/accumulo/examples/simple/shard/Query.java,"import java.util.concurrent.TimeUnit;
import org.apache.accumulo.core.cli.BatchScannerOpts;
    BatchScannerOpts bsOpts = new BatchScannerOpts();
    opts.parseArgs(Query.class.getName(), args, bsOpts);
    BatchScanner bs = conn.createBatchScanner(opts.tableName, opts.auths, bsOpts.scanThreads);
    bs.setTimeout(bsOpts.scanTimeout, TimeUnit.MILLISECONDS);","Remove this unused method parameter ""opts""."
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,test/src/main/java/org/apache/accumulo/test/randomwalk/security/DropUser.java,"    Connector conn = state.getInstance().getConnector(WalkingSecurity.get(state).getSysCredentials());
    boolean hasPermission = WalkingSecurity.get(state).canDropUser(WalkingSecurity.get(state).getSysCredentials(), tableUserName);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/RowHash.java,"import org.apache.accumulo.core.cli.ClientOnRequiredTable;
import com.beust.jcommander.Parameter;

  private static class Opts extends ClientOnRequiredTable {
    @Parameter(names=""--column"", required=true)
    String column = null;
  }
  
    Opts opts = new Opts();
    opts.parseArgs(RowHash.class.getName(), args);
    opts.setAccumuloConfigs(job);
    String col = opts.column;","Remove this call to ""exit"" or ensure it is really required."
3dee665c59730f298fa71cba720c5db2c285c4cf,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/constraints/AlphaNumKeyConstraint.java, * See docs/examples/README.constraint for instructions.,1 duplicated blocks of code must be removed.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/impl/TabletType.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/client/MutationsRejectedException.java,"import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.apache.accumulo.core.security.thrift.SecurityErrorCode;
  private Map<KeyExtent,Set<SecurityErrorCode>> af;
   * @param hashMap
  public MutationsRejectedException(List<ConstraintViolationSummary> cvsList, HashMap<KeyExtent,Set<SecurityErrorCode>> hashMap,
      Collection<String> serverSideErrors, int unknownErrors, Throwable cause) {
    super(""# constraint violations : "" + cvsList.size() + ""  security codes: "" + hashMap.values() + ""  # server errors "" + serverSideErrors.size()
    this.af = hashMap;
  public Map<KeyExtent,Set<SecurityErrorCode>> getAuthorizationFailures() {","Remove this unused private ""appendProp"" method."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/util/Daemon.java,"package org.apache.accumulo.core.util;

public class Daemon extends Thread {

    public Daemon() {
       setDaemon(true);
    }

    public Daemon(Runnable target) {
        super(target);
        setDaemon(true);
    }

    public Daemon(String name) {
        super(name);
        setDaemon(true);
    }

    public Daemon(ThreadGroup group, Runnable target) {
        super(group, target);
        setDaemon(true);
    }

    public Daemon(ThreadGroup group, String name) {
        super(group, name);
        setDaemon(true);
    }

    public Daemon(Runnable target, String name) {
        super(target, name);
        setDaemon(true);
    }

    public Daemon(ThreadGroup group, Runnable target, String name) {
        super(group, target, name);
        setDaemon(true);
    }

    public Daemon(ThreadGroup group, Runnable target, String name,
            long stackSize) {
        super(group, target, name, stackSize);
        setDaemon(true);
    }

}",Return empty string instead.
7812b78e878300e65f38f24fd74c87ce4d18ada7,core/src/main/java/org/apache/accumulo/core/client/impl/MasterClient.java,"      MasterClientService.Client client = ThriftUtil.getClientNoTimeout(new MasterClientService.Client.Factory(), master);
      log.debug(""Failed to connect to master="" + master + "", will retry... "", tte);","Immediately return this expression instead of assigning it to the temporary variable ""client""."
d051581e2416ebebeb480825b8fb3fbe005a8178,core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java,      all = true;,1 duplicated blocks of code must be removed.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/BulkImport.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
8ad5a888a20303fdb5adf3baf925412e4034b889,src/core/src/test/java/org/apache/accumulo/core/data/KeyTest.java,"import org.apache.hadoop.io.Text;

  
  public void testVisibilityFollowingKey() {
    Key k = new Key(""r"", ""f"", ""q"", ""v"");
    assertEquals(k.followingKey(PartialKey.ROW_COLFAM_COLQUAL_COLVIS).toString(), ""r f:q [v%00;] "" + Long.MAX_VALUE + "" false"");
  }",Either log or rethrow this exception.
351d7b48000999beb84eae26d20e0184d2fa5be4,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/SetIterCommand.java,"import org.apache.accumulo.core.iterators.user.ReqVisFilter;
    IteratorSetting setting = new IteratorSetting(priority, name, classname, options);
    shellState.getConnector().tableOperations().attachIterator(tableName, setting, scopes);",This block of commented-out lines of code should be removed.
8025e96e0b108063f3028eb06b78847de2fa95d4,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/util/BaseKeyParser.java,package org.apache.accumulo.examples.wikisearch.util;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
79cc7104b28089ff0a9bfa171f82862892b9cd55,src/examples/src/main/java/org/apache/accumulo/examples/constraints/AlphaNumKeyConstraint.java, * This class is an accumulo constraint that ensures all fields of a key are alpha numeric.,2 duplicated blocks of code must be removed.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/test/java/org/apache/accumulo/core/conf/PropertyTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/iterators/user/TimestampFilter.java,"  
  
  
  
  
    
    
    
    
  
  
  
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * ",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsHelper.java,"        if (property.getKey().equals(root) || property.getKey().startsWith(root + "".opt.""))
          this.removeProperty(tableName, property.getKey());
          if (!settings.containsKey(scope))
            settings.put(scope, new HashMap<String,String>());
          if (!settings.containsKey(scope))
            settings.put(scope, new HashMap<String,String>());
        if (parts[0].equals(""table"") && parts[1].equals(""iterator"") && lifecycles.contains(parts[2]))
          result.add(parts[3]);","Remove this call to ""exit"" or ensure it is really required."
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/FormatterCommand.java,"  private Option resetOption, formatterClassOption, listClassOption;
  
  @Override
  public String description() {
    return ""specifies a formatter to use for displaying database entries"";
  }
  
  @Override
  public int execute(String fullCommand, CommandLine cl, Shell shellState) throws Exception {
    if (cl.hasOption(resetOption.getOpt())) shellState.setFormatterClass(DefaultFormatter.class);
    else if (cl.hasOption(formatterClassOption.getOpt())) shellState.setFormatterClass(AccumuloClassLoader.loadClass(
        cl.getOptionValue(formatterClassOption.getOpt()), Formatter.class));
    else if (cl.hasOption(listClassOption.getOpt())) shellState.getReader().printString(shellState.getFormatterClass().getName() + ""\n"");
    return 0;
  }
  
  @Override
  public Options getOptions() {
    Options o = new Options();
    OptionGroup formatGroup = new OptionGroup();
    resetOption = new Option(""r"", ""reset"", false, ""reset to default formatter"");
    formatterClassOption = new Option(""f"", ""formatter"", true, ""fully qualified name of formatter class to use"");
    formatterClassOption.setArgName(""className"");
    listClassOption = new Option(""l"", ""list"", false, ""display the current formatter"");
    formatGroup.addOption(resetOption);
    formatGroup.addOption(formatterClassOption);
    formatGroup.addOption(listClassOption);
    formatGroup.setRequired(true);
    o.addOptionGroup(formatGroup);
    return o;
  }
  
  @Override
  public int numArgs() {
    return 0;
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bfc44fd328c471d06b480835ba826b706dcf6816,server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,          Authorizations.EMPTY);,"Remove this unused method parameter ""range""."
040f891216154de5f7c8a87e25cefc0f816aea9c,test/src/test/java/org/apache/accumulo/test/functional/MasterFailoverIT.java,  @Test(timeout = 60 * 1000),Either log or rethrow this exception.
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/zookeeper/ZooLock.java,"public class ZooLock extends org.apache.accumulo.fate.zookeeper.ZooLock {
    super(new ZooCache(), ZooReaderWriter.getInstance(), path);
    deleteLock(ZooReaderWriter.getInstance(), path);
    return deleteLock(ZooReaderWriter.getInstance(), path, lockData);","Remove this call to ""exit"" or ensure it is really required."
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/test/scalability/Run.java,"import org.apache.accumulo.core.cli.Help;
import com.beust.jcommander.Parameter;

  static class Opts extends Help {
    @Parameter(names=""--testId"", required=true)
    String testId;
    @Parameter(names=""--action"", required=true, description=""one of 'setup', 'teardown' or 'client'"")
    String action;
    @Parameter(names=""--count"", description=""number of tablet servers"", required=true)
    int numTabletServers; 
  }
  
    Opts opts = new Opts();
    opts.parseArgs(Run.class.getName(), args);
    fs.copyToLocalFile(new Path(String.format(""/accumulo-scale/conf/%s.conf"", opts.testId)), new Path(testPath));
    ScaleTest test = (ScaleTest) Class.forName(String.format(""accumulo.server.test.scalability.%s"", opts.testId)).newInstance();
    test.init(scaleProps, testProps, opts.numTabletServers);
    if (opts.action.equalsIgnoreCase(""setup"")) {
    } else if (opts.action.equalsIgnoreCase(""client"")) {
    } else if (opts.action.equalsIgnoreCase(""teardown"")) {","Remove this call to ""exit"" or ensure it is really required."
7942da1d204d271bff01e9e93208cdd67d0eefa3,test/src/main/java/org/apache/accumulo/test/randomwalk/security/SecurityFixture.java,"import org.apache.accumulo.core.security.tokens.AuthenticationToken;
    AuthenticationToken sysUserPass = new PasswordToken(""sysUser"");
    WalkingSecurity.get(state).changePassword(tableUserName, new PasswordToken(new byte[0]));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b8859513a7f9cec03d7af3f45c7516344798fe06,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"import org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode;
import org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException;",1 duplicated blocks of code must be removed.
18a01d681c85a2a7a473543a7564ce01f742e937,src/core/src/main/java/org/apache/accumulo/core/iterators/TypedValueCombiner.java," * A Combiner that decodes each Value to type V before reducing, then encodes the result of typedReduce back to Value.
 * 
 * Subclasses must implement a typedReduce method:
 *   public V typedReduce(Key key, Iterator<V> iter);
 * 
 * This typedReduce method will be passed the most recent Key and an iterator over the Values (translated to Vs) for all non-deleted versions of that Key.
 *
 * Subclasses may implement a switch on the ""type"" variable to choose an Encoder in their init method.
  /*
   * A Java Iterator that translates an Iterator<Value> to an Iterator<V> using the decode method of an Encoder.
   */
    /*
     * Constructs an Iterator<V> from an Iterator<Value>
     * 
     * @param iter The source iterator
     * 
     * @param encoder The Encoder whose decode method is used to translate from Value to V
     */
  /*
   * An interface for translating from byte[] to V and back.
   */
  /*
   * Reduces a list of V into a single V.
   * 
   * @param key The most recent version of the Key being reduced.
   * 
   * @param iter An iterator over the V for different versions of the key.
   * 
   * @return The combined V.
   */",This block of commented-out lines of code should be removed.
b425d20bd0080f697c18c7afaca39b94953f7736,server/src/main/java/org/apache/accumulo/server/master/tableOps/ExportTable.java,"  public long isReady(long tid, Master master) throws Exception {
    Connector conn = master.getConnector();
  public Repo<Master> call(long tid, Master master) throws Exception {
    Connector conn = master.getConnector();
      exportTable(master.getFileSystem(), conn, tableInfo.tableName, tableInfo.tableID, tableInfo.exportDir);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
8f87860d976f44c77969915a2aede1fa64922c9e,src/server/src/main/java/org/apache/accumulo/server/zookeeper/TransactionWatcher.java,"    boolean transactionComplete(String type, long tid) throws Exception;
      String path = ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid;
      writer.putPersistentData(ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid + ""-running"", new byte[] {}, NodeExistsPolicy.OVERWRITE);
    
    public static void cleanup(String type, long tid) throws KeeperException, InterruptedException {
      Instance instance = HdfsZooInstance.getInstance();
      IZooReaderWriter writer = ZooReaderWriter.getInstance();
      writer.recursiveDelete(ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid, NodeMissingPolicy.SKIP);
      writer.recursiveDelete(ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid + ""-running"", NodeMissingPolicy.SKIP);
    }

    @Override
    public boolean transactionComplete(String type, long tid) throws Exception {
      String path = ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid + ""-running"";
      rdr.sync(path);
      return !rdr.exists(path);
    }",Return empty string instead.
b2704423be3181ab1681dd0bf6e3f093135bb18d,src/server/src/main/java/org/apache/accumulo/server/test/functional/BulkSplitOptimizationTest.java,"import org.apache.accumulo.server.test.CreateMapFiles;
import org.apache.log4j.Logger;
    fs.delete(new Path(""/tmp/testmf""), true);
    fs.delete(new Path(""/tmp/testmf_failures""), true);
    fs.delete(new Path(""/tmp/testmf""), true);
    CreateMapFiles.main(new String[] {""tmp/testmf"", ""8"", ""0"", ""100000"", ""99""});
    bulkImport(fs, TABLE_NAME, ""/tmp/testmf"");
    checkMapFiles(TABLE_NAME, 1, 1, 100, 100);
    checkMapFiles(TABLE_NAME, 50, 100, 1, 4);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ca10f6d48d0e072ba202013e89c57905bb2573d8,start/src/main/java/org/apache/accumulo/start/classloader/vfs/AccumuloVFSClassLoader.java,    // TODO monitor time for lib/ext was 1 sec... should this be configurable? - ACCUMULO-1301,"Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
86c7a24494b2d41e9ac3277a09d1f7fe5d09fd19,server/src/main/java/org/apache/accumulo/server/security/handler/InsecurePermHandler.java,"
  @Override
  public void initTable(String table) throws AccumuloSecurityException {
  }","Reduce this switch case number of lines from 44 to at most 5, for example by extracting code into methods."
a8eed5b2b329b35cae88136e1b4ea71cc875f737,server/src/main/java/org/apache/accumulo/server/util/Initialize.java,"import org.apache.accumulo.server.security.SecurityOperationImpl;
    SecurityOperationImpl.getInstance(iid).initializeSecurity(SecurityConstants.getSystemCredentials(), ROOT_USER, rootpass);",Either log or rethrow this exception.
040f891216154de5f7c8a87e25cefc0f816aea9c,test/src/test/java/org/apache/accumulo/test/functional/LogicalTimeIT.java,  @Test(timeout = 4 * 60 * 1000),Either log or rethrow this exception.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,contrib/accumulo_sample/ingest/src/main/java/util/TextUtil.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
2ad672a5172124625d719c38c163ab68846c75a6,core/src/main/java/org/apache/accumulo/core/client/AccumuloSecurityException.java,"import org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode;
import org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException;",Move this constructor to comply with Java Code Conventions.
ed0f9eef789024e70538194f12f5e5126975ae97,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/filedata/ChunkCombiner.java," * This iterator dedupes chunks and sets their visibilities to the combined visibility of the refs columns. For example, it would combine
 * <pre>
 * </pre>
 * 
 * into the following
 * 
 * <pre>
 * </pre>
 * 
 * {@link VisibilityCombiner} is used to combie the visibilities.",Replace this use of System.out or System.err by a logger.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/trace/src/main/java/cloudtrace/instrument/Tracer.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    
        if (parent == null) return NULL_SPAN;
    
    
    
    
            receiver.span(span.traceId(), span.spanId(), span.parentId(), span.getStartTimeMillis(), span.getStopTimeMillis(), span.description(),
                    span.getData());
            
    
    
        } else currentTrace.set(null);
    
    
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/util/TextUtil.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
public final class TextUtil {
    public static byte[] getBytes(Text text) {
        byte[] bytes = text.getBytes();
        if (bytes.length != text.getLength()) {
            bytes = new byte[text.getLength()];
            System.arraycopy(text.getBytes(), 0, bytes, 0, bytes.length);
        }
        return bytes;
    }
    
    public static ByteBuffer getByteBuffer(Text text) {
        if (text == null) return null;
    public static Text truncate(Text text, int maxLen) {
        if (text.getLength() > maxLen) {
            Text newText = new Text();
            newText.append(text.getBytes(), 0, maxLen);
            String suffix = ""... TRUNCATED"";
            newText.append(suffix.getBytes(), 0, suffix.length());
            return newText;
        }
        
        return text;
    }
    
    public static Text truncate(Text row) {
        return truncate(row, Constants.MAX_DATA_TO_PRINT);
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/fate/Repo.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/test/java/org/apache/accumulo/core/iterators/FamilyIntersectingIteratorTest.java,"      if (entry.getKey().getColumnFamily().equals(docColf))
        trf.writer.append(entry.getKey(), entry.getValue());
      if (entry.getKey().getColumnFamily().equals(FamilyIntersectingIterator.DEFAULT_INDEX_COLF))
        trf.writer.append(entry.getKey(), entry.getValue());","Remove this call to ""exit"" or ensure it is really required."
cb6bcc517b27df03106d7e5eca344ed45699e31f,src/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ConstraintViolationException.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
941e3cb1acbdb3ad2047e512d5fe3c95e595496b,core/src/main/java/org/apache/accumulo/core/client/mapred/AbstractInputFormat.java,"        } else if (instance instanceof MockInstance) {
          scanner = instance.getConnector(principal, token).createScanner(split.getTableName(), authorizations);
        setupIterators(job, scanner, split.getTableName());
        Instance instance = getInstance(job);
        if (instance instanceof MockInstance)
          tableId = """";
        else
          tableId = Tables.getTableId(instance, tableName);",4 duplicated blocks of code must be removed.
a943f323b6ef9a614edee55c075eb63567b5c80a,core/src/main/java/org/apache/accumulo/core/client/impl/ConnectorImpl.java,"    // Skip fail fast for system services; string literal for class name, to avoid
    if (!""org.apache.accumulo.server.security.SystemCredentials$SystemToken"".equals(cred.getTokenClassName())) {",Move this constructor to comply with Java Code Conventions.
7a1075a47299afd6d27225b17814c11eb62432d2,test/src/test/java/org/apache/accumulo/test/functional/DeleteIT.java,"    TestIngest.ingest(c, opts, BWOPTS);
    TestIngest.ingest(c, opts, BWOPTS);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ee3a264e704c17de90c186065f50a0775ce4ad10,src/server/src/main/java/org/apache/accumulo/server/zookeeper/ZooReaderWriter.java,"import java.lang.reflect.InvocationHandler;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;
import org.apache.accumulo.core.util.UtilWaitThread;
import org.apache.log4j.Logger;
public class ZooReaderWriter extends ZooReader implements IZooReaderWriter {
  private static IZooReaderWriter retryingInstance = null;

  @Override
  @Override
  @Override
  @Override
  @Override
  @Override
  @Override
  @Override
  @Override
  @Override
  /**
   * get an instance that retries when zookeeper connection errors occur
   * 
   * @return
   */
  public static synchronized IZooReaderWriter getRetryingInstance() {
    
    if(retryingInstance == null){
      final IZooReaderWriter inst = getInstance();
      
      InvocationHandler ih = new InvocationHandler() {
        @Override
        public Object invoke(Object obj, Method method, Object[] args) throws Throwable {
          long retryTime = 250;
          while(true){
            try {
              return method.invoke(inst, args);
            } catch (InvocationTargetException e) {
              if(e.getCause() instanceof KeeperException.ConnectionLossException){
                Logger.getLogger(ZooReaderWriter.class).warn(""Error connecting to zookeeper, will retry in ""+retryTime, e.getCause());
                UtilWaitThread.sleep(retryTime);
                retryTime = Math.min(5000, retryTime + 250);
              }else{
                throw e.getCause();
              }
            }
          }
        }
      };
      
      retryingInstance = (IZooReaderWriter) Proxy.newProxyInstance(ZooReaderWriter.class.getClassLoader(),new Class[] {IZooReaderWriter.class}, ih);
    }
    
    return retryingInstance;
  }
  
  @Override
  @Override",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/StopTabletServer.java,"package org.apache.accumulo.test.randomwalk.concurrent;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
5bd33fa1e9625e3c088ee39f626c256aca75b0da,server/src/main/java/org/apache/accumulo/server/test/functional/SlowConstraint.java,"/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.server.test.functional;

import java.util.List;

import org.apache.accumulo.core.constraints.Constraint;
import org.apache.accumulo.core.data.Mutation;
import org.apache.accumulo.core.util.UtilWaitThread;

/**
 * 
 */
public class SlowConstraint implements Constraint {
  
  @Override
  public String getViolationDescription(short violationCode) {
    return null;
  }
  
  @Override
  public List<Short> check(Environment env, Mutation mutation) {
    UtilWaitThread.sleep(20000);
    return null;
  }
  
}","Remove this unused method parameter ""e""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/master/state/TabletStateStore.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
93773813e5839ac9ffb4f5a2b2b70bcedb106286,server/src/main/java/org/apache/accumulo/server/master/state/TServerInstance.java,"import org.apache.accumulo.core.util.MetadataTable;
    m.put(MetadataTable.CURRENT_LOCATION_COLUMN_FAMILY, asColumnQualifier(), asMutationValue());
    m.put(MetadataTable.FUTURE_LOCATION_COLUMN_FAMILY, asColumnQualifier(), asMutationValue());
    m.put(MetadataTable.LAST_LOCATION_COLUMN_FAMILY, asColumnQualifier(), asMutationValue());
    m.putDelete(MetadataTable.LAST_LOCATION_COLUMN_FAMILY, asColumnQualifier());","Use ""Long.toString"" instead."
8a33be695e0bcb769412db499df9cbec23004740,core/src/main/java/org/apache/accumulo/core/cli/Help.java,"  
  public void parseArgs(String programName, String[] args, Object ... others) {
    JCommander commander = new JCommander();
    commander.addObject(this);
    for (Object other : others)
      commander.addObject(other);","Remove this unused method parameter ""opts""."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/master/tableOps/BulkImport.java,"    Connector conn = master.getConnector();
  public Repo<Master> call(long tid, Master master) throws Exception {
    FileSystem fs = master.getFileSystem();
    Connector conn = master.getConnector();
        bifCopyQueue.addWork(orig.getName(), (failure + "","" + dest).getBytes());
              long timeInMillis = master.getConfiguration().getConfiguration().getTimeInMillis(Property.MASTER_BULK_TIMEOUT);
              Pair<String,Client> pair = ServerClient.getConnection(master.getInstance(), false, timeInMillis);","Remove this unused private ""appendProp"" method."
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/master/tableOps/TraceRepo.java,import org.apache.accumulo.fate.Repo;,"Remove this call to ""exit"" or ensure it is really required."
567e203705e0a9384d79fb5322fd8863889d34d4,src/core/src/main/java/org/apache/accumulo/core/iterators/FirstEntryInRowIterator.java,"  static final String NUM_SCANS_STRING_NAME = ""scansBeforeSeek"";","Replace ""Collections.EMPTY_SET"" by ""Collections.emptySet()""."
4567e03696904bf5905da7b02f5892a6d2c7b16c,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaInputFormat.java,"    for(int group = 0; group < numGroups; group++)
      for(InputSplit split:superSplits)
        FileSplit fileSplit = (FileSplit)split;",Move this variable to comply with Java Code Conventions.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/master/tableOps/CompactRange.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
8d3f0805bb16a4584a3706bbf8da0686fa662b78,core/src/main/java/org/apache/accumulo/core/util/shell/commands/ActiveCompactionIterator.java,"              ac.getTable(), ac.getExtent(), ac.getInputFiles().size(), output, iterList, iterOpts));
        ""REASON"", ""READ"", ""WROTE"", ""TABLE"", ""TABLET"", ""INPUT"", ""OUTPUT"", ""ITERATORS"", ""ITERATOR OPTIONS"");",15 duplicated blocks of code must be removed.
5bd33fa1e9625e3c088ee39f626c256aca75b0da,server/src/main/java/org/apache/accumulo/server/test/functional/VisibilityTest.java,"import java.util.Map.Entry;
import org.apache.accumulo.core.client.BatchWriterConfig;
    BatchWriter bw = getConnector().createBatchWriter(""vt"", new BatchWriterConfig());
    BatchWriter bw = getConnector().createBatchWriter(""vt"", new BatchWriterConfig());
    BatchWriter bw = getConnector().createBatchWriter(""vt2"", new BatchWriterConfig());","Remove this unused method parameter ""e""."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/bulk/Split.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
        Random rand = (Random) state.get(""rand"");
        state.getConnector().tableOperations().addSplits(Setup.getTableName(), splits);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
7942da1d204d271bff01e9e93208cdd67d0eefa3,test/src/main/java/org/apache/accumulo/test/functional/ZombieTServer.java,"import org.apache.accumulo.core.security.thrift.TCredentials;
    synchronized public void fastHalt(TInfo tinfo, TCredentials credentials, String lock) {
    public TabletServerStatus getTabletServerStatus(TInfo tinfo, TCredentials credentials) throws ThriftSecurityException, TException {
    synchronized public void halt(TInfo tinfo, TCredentials credentials, String lock) throws ThriftSecurityException, TException {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
cc474997914a3e606bb69d9d47f484b2f6d66b46,test/src/test/java/org/apache/accumulo/test/ShellServerTest.java,"    String export = folder.newFolder().toString();
    String import_ = folder.newFolder().toString();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
0811c7958ecc1a9a2c8f80702273856f1cd2eab8,src/trace/src/main/java/org/apache/accumulo/cloudtrace/thrift/SpanReceiver.java,package org.apache.accumulo.cloudtrace.thrift;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/test/WrongTabletTest.java,"import org.apache.accumulo.server.cli.ClientOpts;
import com.beust.jcommander.Parameter;

  
  static class Opts extends ClientOpts {
    @Parameter(names=""--location"", required=true)
    String location;
  }
    Opts opts = new Opts();
    opts.parseArgs(WrongTabletTest.class.getName(), args);
    
    ServerConfiguration conf = new ServerConfiguration(opts.getInstance());
      TabletClientService.Iface client = ThriftUtil.getTServerClient(opts.location, conf.getConfiguration());
      client.update(Tracer.traceInfo(), opts.getAuthInfo(), new KeyExtent(new Text(""!!""), null, new Text(""row_0003750000"")).toThrift(), mutation.toThrift());","Remove this unused private ""appendProp"" method."
2f0643a9fe6b26a8de363beb7781325c45c3b7b6,src/core/src/main/java/org/apache/accumulo/core/iterators/FamilyIntersectingIterator.java,"    colq.set(currentDocID.getBytes(), zeroIndex + 1, currentDocID.getLength() - zeroIndex - 1);",Either log or rethrow this exception.
2bd8f1b07c42fcbf8742ba08e83dddc264a4aa1b,examples/simple/src/main/java/org/apache/accumulo/examples/simple/shard/Query.java,"  public static List<String> query(BatchScanner bs, List<String> terms) {
    Text columns[] = new Text[terms.size()];
    for (String term : terms) {
    List<String> result = new ArrayList<String>();
      result.add(entry.getKey().getColumnQualifier().toString());
    return result;
  }
  
  /**
   * @param args
   */
  public static void main(String[] args) throws Exception {
    Opts opts = new Opts();
    BatchScannerOpts bsOpts = new BatchScannerOpts();
    opts.parseArgs(Query.class.getName(), args, bsOpts);
    Connector conn = opts.getConnector();
    BatchScanner bs = conn.createBatchScanner(opts.tableName, opts.auths, bsOpts.scanThreads);
    bs.setTimeout(bsOpts.scanTimeout, TimeUnit.MILLISECONDS);

    for (String entry : query(bs, opts.terms))
      System.out.println(""  "" + entry);",Either log or rethrow this exception.
be2fdba7d2851efd7ac2e41aa377b4d32f620ed6,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaPartitionedMapper.java,  // private static final Logger log = Logger.getLogger(WikipediaPartitionedMapper.class);,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
af59f0ad10af71de2f7de9880a1dbe1595956cc5,core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormat.java,"import org.apache.accumulo.core.security.thrift.SecurityErrorCode;
import org.apache.accumulo.core.security.tokens.AuthenticationToken;",1 duplicated blocks of code must be removed.
8b4f7b02fae7517e3482b0b5274456333b512e3d,server/src/main/java/org/apache/accumulo/server/util/CheckForMetadataProblems.java,    Constants.METADATA_PREV_ROW_COLUMN.fetch(scanner);,Replace all tab characters in this file by sequences of white-spaces.
2db5ce6186e32c451328154b024951cc5090505f,server/src/main/java/org/apache/accumulo/server/util/TServerUtils.java,"import org.apache.accumulo.core.util.SimpleThreadPool;
  public static ServerPort startHsHaServer(int port, TProcessor processor, final String serverName, String threadName, final int numThreads,
    final ThreadPoolExecutor pool = new SimpleThreadPool(numThreads, ""ClientPool"");
    // periodically adjust the number of threads we need by checking how busy our threads are
            int smaller = Math.max(numThreads, pool.getCorePoolSize() - 1);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
476816af813bc92a4acc8b5d3783d1a49708839a,src/server/src/main/java/org/apache/accumulo/server/iterators/MetadataBulkLoadFilter.java,"import org.apache.accumulo.server.zookeeper.TransactionWatcher.Arbitrator;
  Arbitrator arbitrator;
    arbitrator = getArbitrator();
  }
  
  protected Arbitrator getArbitrator() {
    return new ZooArbitrator();",Return empty string instead.
2bd8f1b07c42fcbf8742ba08e83dddc264a4aa1b,test/src/main/java/org/apache/accumulo/test/performance/metadata/MetadataBatchScanTest.java,    bs.close();,Either log or rethrow this exception.
5bd33fa1e9625e3c088ee39f626c256aca75b0da,server/src/main/java/org/apache/accumulo/server/test/functional/BatchScanSplitTest.java,"import java.util.Random;
import org.apache.accumulo.core.client.BatchWriterConfig;
    BatchWriter bw = getConnector().createBatchWriter(""bss"", new BatchWriterConfig());","Remove this unused method parameter ""e""."
e511baa049c58509539ab7eb793c0da97c9d3ef6,core/src/test/java/org/apache/accumulo/core/client/mock/MockTableOperationsTest.java,            catch (AccumuloException ex) {},Return empty string instead.
a978b0b094a96cca4ede9d0af2cb94dcb92185fe,core/src/main/java/org/apache/accumulo/core/security/crypto/CryptoModuleFactory.java,"    }
  
    
      log.warn(""Configured Accumulo crypto module \"""" + cryptoModuleClassname + ""\"" does not implement the CryptoModule interface. No encryption will be used."");
        log.debug(""Successfully instantiated crypto module "" + cryptoModuleClassname);
        strategy = instantiateSecreteKeyEncryptionStrategy(className);
  
    log.debug(""About to instantiate secret key encryption strategy "" + className);
        log.debug(""Successfully instantiated secret key encryption strategy "" + className);",Define and throw a dedicated exception instead of using a generic one.
af59f0ad10af71de2f7de9880a1dbe1595956cc5,test/src/main/java/org/apache/accumulo/test/randomwalk/security/Authenticate.java,import org.apache.accumulo.core.security.tokens.PasswordToken;,1 duplicated blocks of code must be removed.
604382ebc3be76dac9eb18bb5a8485bfd2aede07,server/src/main/java/org/apache/accumulo/server/monitor/servlets/DefaultServlet.java,"      try {
    	  if (data != null) {
    		  byte[] buffer = new byte[1024];
    		  int n;
    		  while ((n = data.read(buffer)) > 0)
    			  out.write(buffer, 0, n);
    	  } else {
    		  out.write((""could not get resource "" + path + """").getBytes());
    	  }
      } finally {
    	  data.close();
    	InputStream data = null;
          data = new FileInputStream(file.getAbsolutePath());
        } finally {
          if (data != null) {
            try {
              data.close();
            } catch (IOException ex) {
              log.error(ex, ex);
            }
          } ","Remove this unused method parameter ""tservers""."
20372f3ce316d79fd8f6c5a5a14fd5023fd8dcf4,server/src/main/java/org/apache/accumulo/server/util/Initialize.java,"  private static String cliInstanceName = null;
  private static String cliPassword = null;
      if (cliInstanceName == null) {
        instanceName = getConsoleReader().readLine(""Instance name : "");
      } else {
        instanceName = cliInstanceName;
      }
    if (cliPassword != null) {
      return cliPassword.getBytes();
    }
    for (int i = 0; i < args.length; i++) {
      if (args[i].equals(""--reset-security"")) {
          justSecurity = true;
        } else if (args[i].equals(""--clear-instance-name"")) {
          clearInstanceName = true;
        } else if (args[i].equals(""--instance-name"")) {
            cliInstanceName = args[i+1];
            i++;
        } else if (args[i].equals(""--password"")) {
            cliPassword = args[i+1];
            i++;
        } else {
          RuntimeException e = new RuntimeException();
          log.fatal(""Usage: [--reset-security] [--clear-instance-name] [--instance-name {name}] [--password {password}]"");
          log.fatal(""Bad argument "" + args[i], e);
          throw e;
        }","Move the ""--instance-name"" string literal on the left side of this string comparison."
b65b0846599191eef545de77460f8a6303e62851,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/HelpCommand.java,"  private Option noWrapOpt;
    int numColumns = shellState.getReader().getTermwidth();
    if (cl.hasOption(noWrapOpt.getOpt()))
      numColumns = Integer.MAX_VALUE;
    
      if (numColumns < 40)
        throw new IllegalArgumentException(""numColumns must be at least 40 (was "" + numColumns + "")"");
        if (!(c instanceof HiddenCommand)) {
          String n = c.getName();
          String s = c.description();
          if (s == null)
            s = """";
          int beginIndex = 0;
          int endIndex = s.length();
          while (beginIndex < endIndex && s.charAt(beginIndex) == ' ')
            beginIndex++;
          String dash = ""-"";
          while (endIndex > beginIndex && endIndex - beginIndex + i + 5 > numColumns) {
            endIndex = s.lastIndexOf("" "", numColumns + beginIndex - i - 5);
            if (endIndex == -1 || endIndex < beginIndex) {
              endIndex = numColumns + beginIndex - i - 5 - 1;
              output.add(String.format(""%-"" + i + ""s  %s  %s-"", n, dash, s.substring(beginIndex, endIndex)));
              dash = "" "";
              beginIndex = endIndex;
            } else {
              output.add(String.format(""%-"" + i + ""s  %s  %s"", n, dash, s.substring(beginIndex, endIndex)));
              dash = "" "";
              beginIndex = endIndex + 1;
            }
            n = """";
            endIndex = s.length();
            while (beginIndex < endIndex && s.charAt(beginIndex) == ' ')
              beginIndex++;
          }
          output.add(String.format(""%-"" + i + ""s  %s  %s"", n, dash, s.substring(beginIndex, endIndex)));
        }
        c.printHelp(numColumns);
    noWrapOpt = new Option(""nw"", ""no-wrap"", false, ""disables wrapping of output"");
    o.addOption(noWrapOpt);",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
faad092dc6dd4cee10b8ea1d8578f6a43a64b7fb,src/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReaderIterator.java,        return nextEntry.getKey() != null && nextEntry.getValue() != null;,Either log or rethrow this exception.
69218e7e989b6f1d65afabce9c5b5ab0e3204141,core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsImpl.java,"import org.apache.accumulo.core.util.RootTable;
    if (tableName.equals(MetadataTable.NAME) || tableName.equals(RootTable.NAME))
    if (RootTable.ID.equals(tableId))
      return Collections.emptyList();
    ","Reduce this switch case number of lines from 12 to at most 5, for example by extracting code into methods."
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/parser/EventFields.java,"package org.apache.accumulo.examples.wikisearch.parser;
import org.apache.accumulo.examples.wikisearch.parser.EventFields.FieldValue;","Rename ""table"" which hides the field declared at line 107."
f02d102a37314a5f687ce2108f71e6b93ea91cdd,src/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"        synchronized (Tablet.this) {
          if (reason == MajorCompactionReason.NORMAL && needsMajorCompaction(reason))
            initiateMajorCompaction(reason);
        }",Do not forget to remove this deprecated code someday.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/shard/Split.java,"package org.apache.accumulo.test.randomwalk.shard;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
351d7b48000999beb84eae26d20e0184d2fa5be4,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/WordCount.java,"    AccumuloOutputFormat.setOutputInfo(job.getConfiguration(), username, password.getBytes(), true, args[3]);
    AccumuloOutputFormat.setZooKeeperInstance(job.getConfiguration(), args[0], args[1]);",This block of commented-out lines of code should be removed.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/ListTables.java,package org.apache.accumulo.test;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
656a3614e0981462a0ee2c54b4754466d67fb72f,server/src/main/java/org/apache/accumulo/server/tabletserver/compaction/MajorCompactionRequest.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",2 duplicated blocks of code must be removed.
c670f27bb90f011a3d0609ebe7831d555e0ab76a,server/src/main/java/org/apache/accumulo/server/monitor/servlets/XMLServlet.java,"      sb.append(""<major>"").append(""<running>"").append(summary.majors.running).append(""</running>"").append(""<queued>"").append(summary.majors.queued)
      sb.append(""<minor>"").append(""<running>"").append(summary.minors.running).append(""</running>"").append(""<queued>"").append(summary.minors.queued)
      Compacting compacting = entry.getValue().majors;",Refactor the code to remove this label and the need for it.
a3c1bc9a5ec46a9e1372f396be23631db30b874c,server/src/main/java/org/apache/accumulo/server/test/randomwalk/security/SecurityFixture.java,"import java.util.Set;
    systemUserName = String.format(""system_%s"", hostname);
    tableUserName = String.format(""table_%s"", hostname);
    secTableName = String.format(""security_%s"", hostname);
    
    if (conn.tableOperations().exists(secTableName))
      conn.tableOperations().delete(secTableName);
    Set<String> users = conn.securityOperations().listUsers();
    if (users.contains(tableUserName))
      conn.securityOperations().dropUser(tableUserName);
    if (users.contains(systemUserName))
      conn.securityOperations().dropUser(systemUserName);
    WalkingSecurity.get(state).setTableName(secTableName);","Immediately return this expression instead of assigning it to the temporary variable ""res""."
190fc92eab965a787f19797fda3754bece6a1ae2,server/src/main/java/org/apache/accumulo/server/master/state/tables/TableManager.java,  public static class IllegalTableTransitionException extends Exception {,Rename this package name to match the regular expression '^[a-z]+(\.[a-z][a-z0-9]*)*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/conf/ConfigSanityCheck.java,"      if (prop == null && Property.isValidTablePropertyKey(key))
        continue; // unknown valid per-table property
      else if (prop == null)
        log.warn(PREFIX + ""unrecognized property key ("" + key + "")"");
      else if (prop.getType() == PropertyType.PREFIX)
        fatal(PREFIX + ""incomplete property key ("" + key + "")"");
      else if (!prop.getType().isValidFormat(value))
        fatal(PREFIX + ""improperly formatted value for key ("" + key + "", type="" + prop.getType() + "")"");
    if (!chk.check(acuconf.getTimeInMillis(prop)))
      fatal(PREFIX + chk.getDescription(prop));
      if (prop.getType() != type)
        fatal(""Unexpected property type ("" + prop.getType() + "" != "" + type + "")"");","Remove this call to ""exit"" or ensure it is really required."
1039b9ec83b9f3f99e6606d4f2b0849bdab9eb79,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"  private final SortedMap<KeyExtent,Tablet> onlineTablets = Collections.synchronizedSortedMap(new TreeMap<KeyExtent,Tablet>());
  private final SortedSet<KeyExtent> unopenedTablets = Collections.synchronizedSortedSet(new TreeSet<KeyExtent>());
  private final SortedSet<KeyExtent> openingTablets = Collections.synchronizedSortedSet(new TreeSet<KeyExtent>());
  private final Map<KeyExtent,Long> recentlyUnloadedCache = (Map<KeyExtent, Long>)Collections.synchronizedMap(new LRUMap(1000));",Move this variable to comply with Java Code Conventions.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/util/ByteBufferUtil.java,"    if (buffer == null)
      return null;
    if (bytesList == null)
      return null;
    if (bytesList == null)
      return null;
    if (bytes == null)
      return null;","Remove this call to ""exit"" or ensure it is really required."
af59f0ad10af71de2f7de9880a1dbe1595956cc5,core/src/main/java/org/apache/accumulo/core/client/MutationsRejectedException.java,import org.apache.accumulo.core.security.thrift.SecurityErrorCode;,1 duplicated blocks of code must be removed.
3dee665c59730f298fa71cba720c5db2c285c4cf,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/filedata/CharacterHistogram.java," * A MapReduce that computes a histogram of byte frequency for each file and stores the histogram alongside the file data. The {@link ChunkInputFormat} is used
 * to read the file data from Accumulo. See docs/examples/README.filedata for instructions.",1 duplicated blocks of code must be removed.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/util/format/ShardedTableDistributionFormatter.java,"  
  private Map<String,HashSet<String>> countsByDay = new HashMap<String,HashSet<String>>();
  
  @Override
  public String next() {
    Iterator<Entry<Key,Value>> si = super.getScannerIterator();
    checkState(si, true);
    while (si.hasNext())
      aggregateStats(si.next());
    return getStats();
  }
  
  private void aggregateStats(Entry<Key,Value> entry) {
    if (entry.getKey().getColumnFamily().toString().equals(""~tab"") && entry.getKey().getColumnQualifier().toString().equals(""loc"")) {
      // The row for the sharded table should look like: <tableId>;yyyyMMhh_N
      String row = entry.getKey().getRow().toString();
      // Parse the day out of the row
      int semicolon = row.indexOf("";"");
      String day = null;
      if (semicolon != -1) {
        semicolon++;
        day = row.substring(semicolon, semicolon + 8);
      } else day = ""NULL    "";
      String server = entry.getValue().toString();
      if (countsByDay.get(day) == null) countsByDay.put(day, new HashSet<String>());
      countsByDay.get(day).add(server);
  }
  
  private String getStats() {
    StringBuilder buf = new StringBuilder();
    buf.append(""DAY   \t\tSERVERS\n"");
    buf.append(""------\t\t-------\n"");
    for (String day : countsByDay.keySet())
      buf.append(day + ""\t\t"" + countsByDay.get(day).size() + ""\n"");
    return buf.toString();
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f934fe81eeb97d679335952a755994d803575446,src/core/src/main/java/org/apache/accumulo/core/iterators/system/SequenceFileIterator.java,"import org.apache.hadoop.io.SequenceFile;
import org.apache.hadoop.io.SequenceFile.Reader;
  public SequenceFileIterator(SequenceFile.Reader reader, boolean readValue) throws IOException {","Remove this unused method parameter ""acuconf""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/master/CoordinateRecoveryTask.java,"      if (parts.length != 2)
        throw new RuntimeException(""Bad log file name: "" + metadataEntry);
        if (sortJob != null)
          sortJob.killJob();
        if (createFailFlag)
          fs.create(new Path(failed)).close();
          if (fs.exists(unsorted))
            return fs.getFileStatus(unsorted).getLen();
      if (found)
        continue;","Remove this call to ""exit"" or ensure it is really required."
ff1e582020a1437e9c520ef3a1af99477462d803,core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteIterCommand.java,"    tableOpt = new Option(Shell.tableOption, ""table"", true, ""table to delete the iterator from"");
    mincScopeOpt = new Option(IteratorScope.minc.name(), ""minor-compaction"", false, ""remove from minor compaction scope"");
    majcScopeOpt = new Option(IteratorScope.majc.name(), ""major-compaction"", false, ""remove from major compaction scope"");
    scanScopeOpt = new Option(IteratorScope.scan.name(), ""scan-time"", false, ""remove from scan scope"");",2 duplicated blocks of code must be removed.
38932fefb38e1ef2df70fc23a5ed88ff6930afdf,src/core/src/main/java/org/apache/accumulo/core/iterators/WholeRowIterator.java," * @deprecated since 1.4, replaced by {@link org.apache.accumulo.core.iterators.user.WholeRowIterator}",Either log or rethrow this exception.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/util/time/ProvidesTime.java,"package org.apache.accumulo.server.util.time;

/**
 * An interface for anything that returns the time in the same format as System.currentTimeMillis(). 
 *
 */
public interface ProvidesTime {
    public long currentTime();
}",Return empty string instead.
c9eb6fcd2326235986bd862e36bde0cf9d17557d,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/BasicServlet.java,"    sb.append(""<link rel='shortcut icon' type='image/jpg' href='/web/favicon.png' />\n"");",Either log or rethrow this exception.
5ae9fda6e5f61e619c529ac7fac10442cf1c1578,src/server/src/main/java/org/apache/accumulo/server/master/Master.java,"import org.apache.accumulo.server.master.tableOps.TraceRepo;
      fate.seedTransaction(tid, new TraceRepo<Master>(new ShutdownTServer(doomed, force)), false);
          fate.seedTransaction(opid, new TraceRepo<Master>(new CreateTable(c.user, tableName, timeType, options)), autoCleanup);
          fate.seedTransaction(opid, new TraceRepo<Master>(new RenameTable(tableId, oldTableName, newTableName)), autoCleanup);
          fate.seedTransaction(opid, new TraceRepo<Master>(new CloneTable(c.user, srcTableId, tableName, propertiesToSet, propertiesToExclude)), autoCleanup);
          fate.seedTransaction(opid, new TraceRepo<Master>(new DeleteTable(tableId)), autoCleanup);
          fate.seedTransaction(opid, new TraceRepo<Master>(new ChangeTableState(tableId, TableOperation.ONLINE)), autoCleanup);
          fate.seedTransaction(opid, new TraceRepo<Master>(new ChangeTableState(tableId, TableOperation.OFFLINE)), autoCleanup);
          fate.seedTransaction(opid, new TraceRepo<Master>(new TableRangeOp(MergeInfo.Operation.MERGE, tableId, startRow, endRow)), autoCleanup);
          fate.seedTransaction(opid, new TraceRepo<Master>(new TableRangeOp(MergeInfo.Operation.DELETE, tableId, startRow, endRow)), autoCleanup);
          fate.seedTransaction(opid, new TraceRepo<Master>(new BulkImport(tableId, dir, failDir, setTime)), autoCleanup);
          fate.seedTransaction(opid, new TraceRepo<Master>(new CompactRange(tableId, startRow, endRow)), autoCleanup);",Rename this package name to match the regular expression '^[a-z]+(\.[a-z][a-z0-9]*)*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,contrib/accumulo_sample/query/src/main/java/iterator/DefaultIteratorEnvironment.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/trace/TraceServer.java,import org.apache.accumulo.fate.zookeeper.IZooReaderWriter;,"Remove this call to ""exit"" or ensure it is really required."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/functional/ConstraintTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
bd77fefdb146ef0dc9bf64b51fb8e8f43c10ce0d,core/src/main/java/org/apache/accumulo/core/master/thrift/TabletLoadState.java,"@SuppressWarnings(""all"") public enum TabletLoadState implements org.apache.thrift.TEnum {",300 duplicated blocks of code must be removed.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/image/Commit.java,"  
  @Override
  public void visit(State state, Properties props) throws Exception {
    state.getMultiTableBatchWriter().flush();
    log.debug(""Committed "" + state.getInteger(""numWrites"") + "" writes.  Total writes: "" + state.getInteger(""totalWrites""));
    state.set(""numWrites"", new Integer(0));
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/wikisearch/ingest/src/test/java/org/apache/accumulo/examples/wikisearch/ingest/StandaloneStatusReporter.java,package org.apache.accumulo.examples.wikisearch.ingest;,2 duplicated blocks of code must be removed.
65f0d20d7936df7427d8373efcfa69b02221c8b9,proxy/src/main/java/org/apache/accumulo/proxy/thrift/ActiveScan.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@SuppressWarnings(""all"") public class ActiveScan implements org.apache.thrift.TBase<ActiveScan, ActiveScan._Fields>, java.io.Serializable, Cloneable {
  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/functional/BatchScanSplitTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,server/src/main/java/org/apache/accumulo/server/security/AuditedSecurityOperation.java,"import org.apache.accumulo.core.security.tokens.SecurityToken;
  public boolean authenticateUser(InstanceTokenWrapper credentials, SecurityToken token) throws ThriftSecurityException {
  public void changePassword(InstanceTokenWrapper credentials, SecurityToken token) throws ThriftSecurityException {
  public void createUser(InstanceTokenWrapper credentials, SecurityToken token, Authorizations authorizations) throws ThriftSecurityException {
  public void initializeSecurity(InstanceTokenWrapper credentials, SecurityToken token) throws AccumuloSecurityException, ThriftSecurityException {",Either log or rethrow this exception.
7a1075a47299afd6d27225b17814c11eb62432d2,test/src/test/java/org/apache/accumulo/test/functional/BinaryIT.java,  @Test(timeout=30*1000),Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/TraceCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/test/java/org/apache/accumulo/core/iterators/VersioningIteratorTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ed0f9eef789024e70538194f12f5e5126975ae97,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/dirlist/FileCount.java,"/**
 * Computes recursive counts over file system information and stores them back into the same Accumulo table. See docs/examples/README.dirlist for instructions.
 */",Replace this use of System.out or System.err by a logger.
cd08a7a18249090e7e9d941f7b10b4b0a0eb6d71,src/core/src/main/java/org/apache/accumulo/core/iterators/user/RegExFilter.java,"import org.apache.accumulo.core.client.IteratorSetting;
  /**
   * Encode the terms to match against in the iterator
   * 
   * @param si
   *          ScanIterator config to be updated
   * @param rowTerm
   *          the pattern to match against the Key's row. Not used if null.
   * @param cfTerm
   *          the pattern to match against the Key's column family. Not used if null.
   * @param cqTerm
   *          the pattern to match against the Key's column qualifier. Not used if null.
   * @param valueTerm
   *          the pattern to match against the Key's value. Not used if null.
   * @param orFields
   *          if true, any of the non-null terms can match to return the entry
   */
  public static void setRegexs(IteratorSetting si, String rowTerm, String cfTerm, String cqTerm, String valueTerm, boolean orFields) {
    if (rowTerm != null)
      si.addOption(RegExFilter.ROW_REGEX, rowTerm);
    if (cfTerm != null)
      si.addOption(RegExFilter.COLF_REGEX, cfTerm);
    if (cqTerm != null)
      si.addOption(RegExFilter.COLQ_REGEX, cqTerm);
    if (valueTerm != null)
      si.addOption(RegExFilter.VALUE_REGEX, valueTerm);
    if (orFields) {
      si.addOption(RegExFilter.OR_FIELDS, ""true"");
    }
  }","Define a constant instead of duplicating this literal ""org.apache.accumulo.core.iterators.WholeRowIterator"" 4 times."
8abb99fb9df1e22d4dc74befd1ed9fab7c6d8b22,core/src/main/java/org/apache/accumulo/core/conf/ConfigSanityCheck.java,"      if (prop == null && Property.isValidPropertyKey(key))
        continue; // unknown valid property (i.e. has proper prefix)","Immediately return this expression instead of assigning it to the temporary variable ""cipherInputStream""."
6501e03f49ce3a70ac2a0dd95312fcca1d55ad19,server/src/main/java/org/apache/accumulo/server/tabletserver/log/DfsLogger.java,"      file.readFully(buffer);
      if (Arrays.equals(buffer, magic)) {","Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation."
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"import org.apache.accumulo.fate.zookeeper.IZooReaderWriter;
import org.apache.accumulo.fate.zookeeper.ZooLock.LockLossReason;
import org.apache.accumulo.fate.zookeeper.ZooLock.LockWatcher;
import org.apache.accumulo.fate.zookeeper.ZooUtil.NodeExistsPolicy;","Remove this call to ""exit"" or ensure it is really required."
9dc244484b4d35859d4d22b27580a47ae7da0e1a,core/src/main/java/org/apache/accumulo/core/util/ByteBufferUtil.java,"import org.apache.accumulo.core.data.ByteSequence;
  
  public static ByteBuffer toByteBuffers(ByteSequence bs) {
    if (bs == null)
      return null;

    if (bs.isBackedByArray()) {
      return ByteBuffer.wrap(bs.getBackingArray(), bs.offset(), bs.length());
    } else {
      // TODO create more efficient impl
      return ByteBuffer.wrap(bs.toArray());
    }
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/DeleteTable.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
af59f0ad10af71de2f7de9880a1dbe1595956cc5,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/CreateUser.java,import org.apache.accumulo.core.security.tokens.PasswordToken;,1 duplicated blocks of code must be removed.
ee3a264e704c17de90c186065f50a0775ce4ad10,src/server/src/main/java/org/apache/accumulo/server/util/DeleteZooInstance.java,"import org.apache.accumulo.server.zookeeper.IZooReaderWriter;
    IZooReaderWriter zk = ZooReaderWriter.getInstance();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
754f174a705d3a263adda0ad4a600cd27c066b5b,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteScanIterCommand.java,"import java.util.Iterator;
import java.util.List;
import org.apache.accumulo.core.client.IteratorSetting;
      List<IteratorSetting> tableScanIterators = shellState.scanIteratorOptions.remove(tableName);
      if (tableScanIterators == null)
        Shell.log.info(""Removed the following scan iterators from table "" + tableName + "":"" + tableScanIterators);
      List<IteratorSetting> tableScanIterators = shellState.scanIteratorOptions.get(tableName);
      if (tableScanIterators != null) {
        boolean found = false;
        for (Iterator<IteratorSetting> iter = tableScanIterators.iterator(); iter.hasNext();) {
          if (iter.next().getName().equals(name)) {
            iter.remove();
            found = true;
            break;
          }
        }
        if (!found)
        else {
          Shell.log.info(""Removed scan iterator "" + name + "" from table "" + tableName + "" ("" + shellState.scanIteratorOptions.get(tableName).size() + "" left)"");
          if (shellState.scanIteratorOptions.get(tableName).size() == 0)
            shellState.scanIteratorOptions.remove(tableName);
        }
}","Remove the literal ""true"" boolean value."
5ef6cf189fdae233bb698f0d063810330ba546d5,src/server/src/main/java/org/apache/accumulo/server/master/state/MergeStats.java,"  public void update(KeyExtent ke, TabletState state, boolean chopped, boolean hasWALs) {
      if (chopped && !hasWALs)
      if (!tls.walogs.isEmpty()) {
        return false;
      }
      verify.update(tls.extent, tls.getState(master.onlineTabletServers()), tls.chopped, !tls.walogs.isEmpty());","The Cyclomatic Complexity of this method ""update"" is 13 which is greater than 10 authorized."
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/shard/Search.java,"package org.apache.accumulo.test.randomwalk.shard;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
a69a9d68fb8f1e2e7455b75a5a1130e964d96a7d,core/src/main/java/org/apache/accumulo/core/conf/AccumuloConfiguration.java,"  @Override
   * 
   * @param property
   *          the prefix property, and must be of type PropertyType.PREFIX
  public Map<String,String> getAllPropertiesWithPrefix(Property property) {
    Map<String,String> propMap = new HashMap<String,String>();
    for (Entry<String,String> entry : this) {
   * Only here for Shell option-free start-up
  // overridden in ZooConfiguration
  public void invalidateCache() {}","Immediately return this expression instead of assigning it to the temporary variable ""result""."
02a26268575ac93d74796ec8fd8798f85b92dac1,server/src/main/java/org/apache/accumulo/server/util/VerifyTabletAssignments.java,"    Connector conn = instance.getConnector(user, passw.getBytes());
        new AuthInfo(user, ByteBuffer.wrap(pass.getBytes()), HdfsZooInstance.getInstance().getInstanceID()), table, false, locations, tablets);
            checkTabletServer(conf, user, ByteBuffer.wrap(pass.getBytes()), entry, failures);","Remove this unused method parameter ""ex""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/zookeeper/DistributedReadWriteLock.java,"      if (lockData == null || lockData.length < 1)
        throw new IllegalArgumentException();
      if (split == -1)
        throw new IllegalArgumentException();
          if (tryLock(1, TimeUnit.DAYS))
            return;
        if (tryLock(100, TimeUnit.MILLISECONDS))
          return;
        if (entry.getKey().equals(this.entry))
          return true;
        if (parsed.type == LockType.WRITE)
          return false;
        if (tryLock())
          return true;
      if (entry == -1)
        return;
      if (!iterator.hasNext())
        throw new IllegalStateException(""Did not find our own lock in the queue: "" + this.entry + "" userData "" + new String(this.userData) + "" lockType ""
            + lockType());
      if (iterator.next().getKey().equals(entry))
        return true;","Remove this call to ""exit"" or ensure it is really required."
322e0359ac5d35d3774c47507aed07760397513a,src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java,"   * @see #importDirectory(String, String, String, boolean)",1 duplicated blocks of code must be removed.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,contrib/accumulo_sample/query/src/test/java/logic/TestQueryLogic.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
b8e663c2a0568670eb5110ef8513c74e1284f232,core/src/main/java/org/apache/accumulo/core/client/lexicoder/PairLexicoder.java," * This class is a lexicoder that sorts a ComparablePair. Each item in the pair is encoded with the given lexicoder and concatenated together.
 * This makes it easy to construct a sortable key based on two components. There are many examples of this- but a key/value relationship is a great one.
 *
 * If we decided we wanted a two-component key where the first component is a string and the second component a date which is reverse sorted, we can do so with
 * the following example:
 *
 * <pre>
 * {@code
 * StringLexicoder stringEncoder = new StringLexicoder();
 * ReverseLexicoder<Date> dateEncoder = new ReverseLexicoder<Date>(new DateLexicoder());
 * PairLexicoder<String,Date> pairLexicoder = new PairLexicoder<String,Date>(stringEncoder, dateEncoder);
 * byte[] pair1 = pairLexicoder.encode(new ComparablePair<String,Date>(""com.google"", new Date()));
 * byte[] pair2 = pairLexicoder.encode(new ComparablePair<String,Date>(""com.google"", new Date(System.currentTimeMillis() + 500)));
 * byte[] pair3 = pairLexicoder.encode(new ComparablePair<String,Date>(""org.apache"", new Date(System.currentTimeMillis() + 1000)));
 * }
 * </pre>
 * 
 * In the example, pair2 will be sorted before pair1. pair3 will occur last since 'org' is sorted after 'com'. If we just used a {@link DateLexicoder} instead
 * of a {@link ReverseLexicoder}, pair1 would have been sorted before pair2.",Remove this unused import 'java.util.Date'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServerConstants.java,"  
  public static final String IntermediateKeyName = ""IntermediateKey"";
  public static final String ColumnSetName = ""ColumnSet"";
  public static final String AuthorizationSetName = ""AuthorizationSet"";
  public static final String EndKeyName = ""EndKey"";
  public static final String MaxResultsName = ""MaxResults"";
  public static final String PreviousQueryTypeName = ""PreviousQueryType"";
  public static final String PreviousQueryStatusName = ""PreviousQueryStatus"";",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/parser/TreeBuilder.java,"package org.apache.accumulo.examples.wikisearch.parser;
import org.apache.accumulo.examples.wikisearch.parser.QueryParser.EvaluationContext;
import org.apache.accumulo.examples.wikisearch.parser.QueryParser.FunctionResult;
import org.apache.accumulo.examples.wikisearch.parser.QueryParser.LiteralResult;
import org.apache.accumulo.examples.wikisearch.parser.QueryParser.ObjectHolder;
import org.apache.accumulo.examples.wikisearch.parser.QueryParser.QueryTerm;
import org.apache.accumulo.examples.wikisearch.parser.QueryParser.TermResult;","Rename ""table"" which hides the field declared at line 107."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/iterators/FirstEntryInRowIterator.java,"        if (!latestRange.afterEndKey(nextKey))
          getSource().seek(new Range(nextKey, true, latestRange.getEndKey(), latestRange.isEndKeyInclusive()), latestColumnFamilies, latestInclusive);","Remove this call to ""exit"" or ensure it is really required."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/OfflineCommand.java,"package org.apache.accumulo.core.util.shell.commands;


import org.apache.accumulo.core.Constants;
import org.apache.accumulo.core.client.AccumuloException;
import org.apache.accumulo.core.client.AccumuloSecurityException;
import org.apache.accumulo.core.client.TableNotFoundException;
import org.apache.accumulo.core.util.shell.Shell;
import org.apache.accumulo.core.util.shell.Shell.TableOperation;

public class OfflineCommand extends TableOperation {
    
    @Override
    public String description() {
        return ""starts the process of taking table offline"";
    }
    
    protected void doTableOp(Shell shellState, String tableName) throws AccumuloException, AccumuloSecurityException, TableNotFoundException {
        if (tableName.equals(Constants.METADATA_TABLE_NAME)) {
            Shell.log.info(""  You cannot take the "" + Constants.METADATA_TABLE_NAME + "" offline."");
        } else {
            Shell.log.info(""Attempting to begin taking "" + tableName + "" offline"");
            shellState.getConnector().tableOperations().offline(tableName);
        }
    }
}",Return empty string instead.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/data/KeyExtent.java,"  private static final WeakHashMap<Text,WeakReference<Text>> tableIds = new WeakHashMap<Text,WeakReference<Text>>();","Remove this unused private ""appendProp"" method."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/iterators/user/MinCombiner.java,"package org.apache.accumulo.core.iterators.user;

import java.util.Iterator;

import org.apache.accumulo.core.data.Key;
import org.apache.accumulo.core.iterators.LongCombiner;


public class MinCombiner extends LongCombiner {
	@Override
	public Long typedReduce(Key key, Iterator<Long> iter) {
		long min = Long.MAX_VALUE;
		while (iter.hasNext()) {
			Long l = iter.next();
			if (l < min) min = l;
		}
		return min;
	}
}",Return empty string instead.
7942da1d204d271bff01e9e93208cdd67d0eefa3,server/src/main/java/org/apache/accumulo/server/security/handler/InsecurePermHandler.java,"import org.apache.accumulo.core.security.thrift.TCredentials;
  public void initializeSecurity(TCredentials token, String rootuser) throws AccumuloSecurityException {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f423648a208cbcc2a3dd7c82ec427cc6375c1bf8,src/core/src/main/java/org/apache/accumulo/core/iterators/system/VisibilityFilter.java,    setSource(iterator);,"Remove this unused method parameter ""hasStart""."
b8859513a7f9cec03d7af3f45c7516344798fe06,test/src/main/java/org/apache/accumulo/test/functional/FunctionalTest.java,"import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;
import org.apache.accumulo.core.client.security.tokens.PasswordToken;",1 duplicated blocks of code must be removed.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/test/java/org/apache/accumulo/core/client/mapreduce/AccumuloFileOutputFormatTest.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    @Before
    public void setup() {
        job = new JobContext(new Configuration(), new JobID());
        tac = new TaskAttemptContext(job.getConfiguration(), new TaskAttemptID());
    }
    
    @Test
    public void testSet() throws IOException, InterruptedException {
    }
    
    @Test
    public void testUnset() throws IOException, InterruptedException {
        validate((int) AccumuloConfiguration.getDefaultConfiguration().getMemoryInBytes(Property.TABLE_FILE_COMPRESSED_BLOCK_SIZE));
    }
    
    public void validate(int size) throws IOException, InterruptedException {
        AccumuloFileOutputFormat.handleBlockSize(job);
        int detSize = job.getConfiguration().getInt(""io.seqfile.compress.blocksize"", -1);
        assertEquals(size, detSize);
    }
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/NumArraySummation.java,"  long[] sum = new long[0];
  
  public Value aggregate() {
    try {
      return new Value(NumArraySummation.longArrayToBytes(sum));
    } catch (IOException e) {
      throw new RuntimeException(e);
  }
  
  public void collect(Value value) {
    long[] la;
    try {
      la = NumArraySummation.bytesToLongArray(value.get());
    } catch (IOException e) {
      throw new RuntimeException(e);
    if (la.length > sum.length) {
      for (int i = 0; i < sum.length; i++) {
        la[i] = NumSummation.safeAdd(la[i], sum[i]);
      }
      sum = la;
    } else {
      for (int i = 0; i < la.length; i++) {
        sum[i] = NumSummation.safeAdd(sum[i], la[i]);
      }
  }
  
  public static byte[] longArrayToBytes(long[] la) throws IOException {
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    DataOutputStream dos = new DataOutputStream(baos);
    WritableUtils.writeVInt(dos, la.length);
    for (int i = 0; i < la.length; i++) {
      WritableUtils.writeVLong(dos, la[i]);
    return baos.toByteArray();
  }
  
  public static long[] bytesToLongArray(byte[] b) throws IOException {
    DataInputStream dis = new DataInputStream(new ByteArrayInputStream(b));
    int len = WritableUtils.readVInt(dis);
    
    long[] la = new long[len];
    
    for (int i = 0; i < len; i++) {
      la[i] = WritableUtils.readVLong(dis);
    return la;
  }
  
  public void reset() {
    sum = new long[0];
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,test/src/main/java/org/apache/accumulo/test/randomwalk/security/WalkingSecurity.java,"import org.apache.accumulo.core.security.thrift.Credentials;
  public void initializeSecurity(Credentials rootuser, String token) throws ThriftSecurityException {
  public boolean authenticateUser(String principal, byte[] token) {
    byte[] pass = (byte[]) state.get(principal + userPass);
    boolean ret = Arrays.equals(pass, token);
  public void createUser(String principal, byte[] token) throws AccumuloSecurityException {
    state.set(principal + userExists, Boolean.toString(true));
    changePassword(principal, token);
    cleanUser(principal);
  public void changePassword(String principal, byte[] token) throws AccumuloSecurityException {
    state.set(principal + userPass, token);
    state.set(principal + userPass + ""time"", System.currentTimeMillis());
  public Credentials getSysCredentials() {
    return new Credentials(getSysUserName(), ByteBuffer.wrap(getSysPassword()), state.getInstance().getInstanceID());
  public Credentials getTabCredentials() {
    return new Credentials(getTabUserName(), ByteBuffer.wrap(getTabPassword()), state.getInstance().getInstanceID());
  public boolean canAskAboutUser(Credentials credentials, String user) throws ThriftSecurityException {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,test/src/main/java/org/apache/accumulo/test/randomwalk/security/CreateTable.java,"    Connector conn = state.getInstance().getConnector(WalkingSecurity.get(state).getSysCredentials());
    boolean hasPermission = WalkingSecurity.get(state).canCreateTable(WalkingSecurity.get(state).getSysCredentials());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
cd8ebfe895726695378644fad55e886022d67fc6,src/server/src/main/java/org/apache/accumulo/server/Accumulo.java,"    String logConfig = String.format(""%s/%s_logger.xml"", System.getenv(""ACCUMULO_CONF_DIR""), application);
      logConfig = String.format(""%s/generic_logger.xml"", System.getenv(""ACCUMULO_CONF_DIR""));",2 duplicated blocks of code must be removed.
8dccbe7e9960c204bf82326c9fe6e28dcb8d647e,core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/NoSuchScanIDException.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",296 duplicated blocks of code must be removed.
79cc7104b28089ff0a9bfa171f82862892b9cd55,src/core/src/main/java/org/apache/accumulo/core/client/impl/ScannerImpl.java,   * Returns an iterator over an accumulo table. This iterator uses the options that are currently set on the scanner for its lifetime. So setting options on a,2 duplicated blocks of code must be removed.
5c97efc2576278f4b8b6b004ded78c98251cda24,core/src/main/java/org/apache/accumulo/core/iterators/user/ColumnAgeOffFilter.java,"    if (super.validateOptions(options) == false)
      return false;
    try {
      this.ttls = new TTLSet(options);
    } catch (Exception e) {
      throw new IllegalArgumentException(""bad TTL options"", e);
    }",Return empty string instead.
162e17aa5e9d1f86066301921ad01e45fa0c8ad4,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaConfiguration.java,"
  public final static String NUM_GROUPS = ""wikipedia.ingest.groups"";

  public static int getNumGroups(Configuration conf) {
    return conf.getInt(NUM_GROUPS, 1);
  }
  ","Immediately return this expression instead of assigning it to the temporary variable ""result""."
af9a1216a1853a7bd6e89ab581fadaf682cb69a0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteManyCommand.java,"    forceOpt = new Option(""f"", ""force"", false, ""force deletion without prompting"");
    tableOpt = new Option(Shell.tableOption, ""table"", true, ""table to delete entries from"");
}",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/tabletserver/HoldTimeoutException.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
24cf3d7644ff44f67fe48e5a3993e5aed73d93e8,src/server/src/main/java/org/apache/accumulo/server/test/functional/ConstraintTest.java,"    Map<String,String> config = parseConfig(Property.TABLE_CONSTRAINT_PREFIX + ""1=org.apache.accumulo.examples.simple.constraints.NumericValueConstraint"",
        Property.TABLE_CONSTRAINT_PREFIX + ""2=org.apache.accumulo.examples.simple.constraints.AlphaNumKeyConstraint"");
        if (!cvs.constrainClass.equals(""org.apache.accumulo.examples.simple.constraints.NumericValueConstraint"")) {
      expected.put(""org.apache.accumulo.examples.simple.constraints.NumericValueConstraint"", numericErrors);
      expected.put(""org.apache.accumulo.examples.simple.constraints.AlphaNumKeyConstraint"", 1);",Either log or rethrow this exception.
ca10f6d48d0e072ba202013e89c57905bb2573d8,server/src/main/java/org/apache/accumulo/server/master/Master.java,"  // TODO: maybe move this to Property? We do this in TabletServer, Master, TableLoadBalancer, etc. - ACCUMULO-1295
          // TODO detect case of table offline AND tablets w/ logs? - ACCUMULO-1296
    // TODO: add shutdown for fate object - ACCUMULO-1307","Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
2ad672a5172124625d719c38c163ab68846c75a6,core/src/test/java/org/apache/accumulo/core/client/mock/MockTableOperationsTest.java,import org.apache.accumulo.core.client.security.tokens.PasswordToken;,Move this constructor to comply with Java Code Conventions.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/Fixture.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    protected final Logger log = Logger.getLogger(this.getClass());
    
    public abstract void setUp(State state) throws Exception;
    
    public abstract void tearDown(State state) throws Exception;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/util/OfflineMetadataScanner.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
f343540ca4b9e4359c43d6f990e486de960b637c,core/src/main/java/org/apache/accumulo/core/util/shell/commands/MaxRowCommand.java,"    String tableName = OptUtil.getTableOpt(cl, shellState);",Either log or rethrow this exception.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/master/state/Assignment.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
86c7a24494b2d41e9ac3277a09d1f7fe5d09fd19,server/src/main/java/org/apache/accumulo/server/security/handler/ZKPermHandler.java,"
  @Override
  public void initTable(String table) throws AccumuloSecurityException {
    // All proper housekeeping is done on delete and permission granting, no work needs to be done here
  }","Reduce this switch case number of lines from 44 to at most 5, for example by extracting code into methods."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/problems/ProblemReportingIterator.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
e0fcc836dbd80229a0dbcbd5b02019558aa799e4,src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java,"   * @throws IllegalArgumentException
   *           if the setting conflicts with any existing iterators
  
  /**
   * Check whether a given iterator configuration conflicts with existing configuration; in particular, determine if the name or priority are already in use for
   * the specified scopes.
   * 
   * @param tableName
   *          the name of the table
   * @param setting
   *          object specifying the properties of the iterator
   * @throws AccumuloException
   * @throws TableNotFoundException
   * @throws IllegalStateException
   *           if the setting conflicts with any existing iterators
   */
  public void checkIteratorConflicts(String tableName, IteratorSetting setting) throws AccumuloException, TableNotFoundException;",Either log or rethrow this exception.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/UsersCommand.java,"  @Override
  public int execute(String fullCommand, CommandLine cl, Shell shellState) throws AccumuloException, AccumuloSecurityException, IOException {
    for (String user : shellState.getConnector().securityOperations().listUsers())
      shellState.getReader().printString(user + ""\n"");
    return 0;
  }
  
  @Override
  public String description() {
    return ""displays a list of existing users"";
  }
  
  @Override
  public int numArgs() {
    return 0;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e511baa049c58509539ab7eb793c0da97c9d3ef6,core/src/main/java/org/apache/accumulo/core/iterators/aggregation/conf/AggregatorConfiguration.java,@Deprecated,Return empty string instead.
c16b6ae4fc7e607011c1ae7c01f3ea3bd0c182ba,test/src/test/java/org/apache/accumulo/test/TestConfigurableMajorCompactionIT.java,      plan.inputFiles.addAll(request.getFiles().keySet());,Replace this if-then-else statement by a single return statement.
2db5ce6186e32c451328154b024951cc5090505f,server/src/main/java/org/apache/accumulo/server/logger/LogReader.java,"import java.io.EOFException;
import org.apache.hadoop.fs.FSDataInputStream;
        FSDataInputStream f = fs.open(path);
        while (true) {
          try {
            key.readFields(f);
            value.readFields(f);
          } catch (EOFException ex) {
            break;
          }
        FSDataInputStream f = fs.open(path);
        while (true) {
          try {
            key.readFields(f);
            value.readFields(f);
          } catch (EOFException ex) {
            break;
          }
        // read the log entries sorted in a map file
        MultiReader input = new MultiReader(fs, conf, file);
        while (input.next(key, value)) {
          printLogEvent(key, value, row, rowMatcher, ke, tabletIds, max);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a63607a89356ef85af81e377b289fafe413687c5,server/src/main/java/org/apache/accumulo/server/client/BulkImporter.java,"import org.apache.accumulo.cloudtrace.instrument.Tracer;
    ClientService.Client client = null;
        List<TKeyExtent> failures = client.bulkImport(Tracer.traceInfo(), credentials, tid, Translator.translate(files, Translator.KET), setTime);","Immediately return this expression instead of assigning it to the temporary variable ""client""."
ee3a264e704c17de90c186065f50a0775ce4ad10,src/server/src/main/java/org/apache/accumulo/server/test/functional/SplitRecoveryTest.java,"import org.apache.accumulo.server.zookeeper.IZooReaderWriter;
    IZooReaderWriter zoo = ZooReaderWriter.getInstance();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/util/Initialize.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
f868c3762cf39628e32bda051f98862a56628220,src/minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloCluster.java,"import org.apache.accumulo.server.gc.SimpleGarbageCollector;
  private Process gcProcess;
    appendProp(fileWriter, Property.GC_CYCLE_DELAY, ""30s"", siteConfig);
    
    if (config.shouldRunGC()) {
      gcProcess = exec(SimpleGarbageCollector.class);
    }

    if (gcProcess != null)
      gcProcess.destroy();",Return empty string instead.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/file/FileSKVWriter.java,"package org.apache.accumulo.core.file;

import java.io.DataOutputStream;
import java.io.IOException;
import java.util.Set;

import org.apache.accumulo.core.data.ByteSequence;
import org.apache.accumulo.core.data.Key;
import org.apache.accumulo.core.data.Value;


public interface FileSKVWriter {
	boolean supportsLocalityGroups();
	void startNewLocalityGroup(String name, Set<ByteSequence> columnFamilies) throws IOException;
	void startDefaultLocalityGroup() throws IOException;
	void append(Key key, Value value) throws IOException;
	DataOutputStream createMetaStore(String name) throws IOException;
	void close() throws IOException;
}",Return empty string instead.
c31bf3aa2092782c65bf23839aac442f44127b39,src/trace/src/main/java/cloudtrace/instrument/impl/NullSpan.java,"  
  public NullSpan() {}
  
  @Override
  public long accumulatedMillis() {
    return 0;
  }
  
  @Override
  public String description() {
    return ""NullSpan"";
  }
  
  @Override
  public long getStartTimeMillis() {
    return 0;
  }
  
  @Override
  public long getStopTimeMillis() {
    return 0;
  }
  
  @Override
  public Span parent() {
    return null;
  }
  
  @Override
  public long parentId() {
    return -1;
  }
  
  @Override
  public boolean running() {
    return false;
  }
  
  @Override
  public long spanId() {
    return -1;
  }
  
  @Override
  public void start() {}
  
  @Override
  public void stop() {}
  
  @Override
  public long traceId() {
    return -1;
  }
  
  @Override
  public Span child(String description) {
    return this;
  }
  
  @Override
  public void data(String key, String value) {}
  
  @Override
  public String toString() {
    return ""Not Tracing"";
  }
  
  @Override
  public Map<String,String> getData() {
    return Collections.emptyMap();
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/functional/BadCombiner.java,package org.apache.accumulo.test.functional;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
af59f0ad10af71de2f7de9880a1dbe1595956cc5,server/src/main/java/org/apache/accumulo/server/tabletserver/mastermessage/MasterMessage.java,import org.apache.accumulo.core.security.thrift.ThriftSecurityException;,1 duplicated blocks of code must be removed.
5d044b8d9daa0ce6c32152c89e4d86ff65d0dc53,proxy/src/test/java/org/apache/accumulo/proxy/TestProxyInstanceOperations.java,"import java.util.TreeMap;
  @SuppressWarnings(""serial"")
    userpass = tpc.proxy.login(""root"", new TreeMap<String, String>() {{ put(""password"",""""); }});",Remove this hard-coded password.
612fd01c5340167328661e271e9c58656832cc68,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/Merge.java,"import java.util.ArrayList;
import org.apache.accumulo.core.Constants;
    tableNames = new ArrayList<String>(tableNames);
    tableNames.add(Constants.METADATA_TABLE_NAME);","Use ""Integer.toString"" instead."
b8062ee54c6358e999cd58da6da366fe934723dd,src/core/src/main/java/org/apache/accumulo/core/client/impl/ServerClient.java,"import org.apache.accumulo.core.conf.AccumuloConfiguration;
    AccumuloConfiguration conf = instance.getConfiguration();
    return getConnection(instance, preferCachedConnections, conf.getTimeInMillis(Property.GENERAL_RPC_TIMEOUT));
  }
  
  public static Pair<String,ClientService.Iface> getConnection(Instance instance, boolean preferCachedConnections, long rpcTimeout) throws TTransportException {
    AccumuloConfiguration conf = instance.getConfiguration();
        servers.add(new ThriftTransportKey(
            new ServerServices(new String(data)).getAddressString(Service.TSERV_CLIENT), 
            conf.getPort(Property.TSERV_CLIENTPORT), 
            rpcTimeout));",Reorder the modifiers to comply with the Java Language Specification.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,core/src/main/java/org/apache/accumulo/core/cli/ClientOnRequiredTable.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.cli;

import org.apache.accumulo.core.client.mapreduce.AccumuloInputFormat;
import org.apache.accumulo.core.client.mapreduce.AccumuloOutputFormat;
import org.apache.hadoop.mapreduce.Job;

import com.beust.jcommander.Parameter;

public class ClientOnRequiredTable extends ClientOpts {
  
  @Parameter(names={""-t"", ""--table""}, required=true, description=""table to use"")
  public String tableName = null;

  @Override
  public void setAccumuloConfigs(Job job) {
    super.setAccumuloConfigs(job);
    AccumuloInputFormat.setInputInfo(job.getConfiguration(), user, getPassword(), tableName, auths);
    AccumuloOutputFormat.setOutputInfo(job.getConfiguration(), user, getPassword(), true, tableName);
  }
}","Remove this call to ""exit"" or ensure it is really required."
38932fefb38e1ef2df70fc23a5ed88ff6930afdf,src/core/src/main/java/org/apache/accumulo/core/iterators/NoLabelIterator.java," * @deprecated since 1.4, replaced by {@link org.apache.accumulo.core.iterators.user.ReqVisFilter}",Either log or rethrow this exception.
ed0f9eef789024e70538194f12f5e5126975ae97,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/helloworld/InsertWithOutputFormat.java,"/**
 * Inserts 10K rows (50K entries) into accumulo with each row having 5 entries using an OutputFormat.
 */
      System.out.println(""Usage: bin/tool.sh "" + this.getClass().getName() + "" <instance name> <zoo keepers> <username> <password> <tablename>"");",Replace this use of System.out or System.err by a logger.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ConstraintViolationException.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */","Remove this unused private ""appendProp"" method."
1d138a73ad757c12b3d30aa1a6029b63cc3eaa66,test/src/main/java/org/apache/accumulo/test/functional/PermissionsTest.java,"import org.apache.accumulo.core.security.tokens.PasswordToken;
import org.apache.accumulo.core.security.tokens.SecurityToken;",Replace all tab characters in this file by sequences of white-spaces.
cb6bcc517b27df03106d7e5eca344ed45699e31f,src/core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ScanType.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@SuppressWarnings(""all"") public enum ScanType implements org.apache.thrift.TEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b8859513a7f9cec03d7af3f45c7516344798fe06,server/src/test/java/org/apache/accumulo/server/master/balancer/ChaoticLoadBalancerTest.java,import org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException;,1 duplicated blocks of code must be removed.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,server/src/main/java/org/apache/accumulo/server/security/handler/Authorizor.java,"import org.apache.accumulo.core.security.thrift.Credentials;
  public void initializeSecurity(Credentials credentials, String rootuser) throws AccumuloSecurityException, ThriftSecurityException;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f37ee0b85f8d71ed03d655d7e4b4ff53c7d74314,examples/simple/src/main/java/org/apache/accumulo/examples/simple/client/ReadWriteExample.java,"    @Parameter(names = {""-C"", ""--createtable""}, description = ""create table before doing anything"")
    @Parameter(names = {""-D"", ""--deletetable""}, description = ""delete table when finished"")
    @Parameter(names = {""-c"", ""--create""}, description = ""create entries before any deletes"")
    @Parameter(names = {""-r"", ""--read""}, description = ""read entries after any creates/deletes"")
    @Parameter(names = {""-d"", ""--delete""}, description = ""delete entries after any creates"")
    public Opts() {
      super(DEFAULT_TABLE_NAME);
    
    ",Reduce the number of conditional operators (6) used in the expression (maximum allowed 3).
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,fate/src/main/java/org/apache/accumulo/fate/zookeeper/ZooReservation.java,"        zk.putPersistentData(path, (reservationID + "":"" + debugInfo).getBytes(), NodeExistsPolicy.FAIL);","Remove this unused private ""appendProp"" method."
0f1202c8f874ea3ecb4b9ecd3a4916808290fbf5,fate/src/main/java/org/apache/accumulo/fate/ZooStore.java,"    while (true) {
      try {
        String txpath = getTXPath(tid);
        String top = findTop(txpath);
        if (top == null)
          return null;
        
        byte[] ser = zk.getData(txpath + ""/"" + top, null);
        return (Repo<T>) deserialize(ser);
      } catch (KeeperException.NoNodeException ex) {
        continue;
      } catch (Exception e) {
        throw new RuntimeException(e);
      }",Either log or rethrow this exception.
3de0c1ec44d476fe1465eb05d33c32de3ccf1068,server/src/main/java/org/apache/accumulo/server/util/Admin.java,"import com.google.common.net.HostAndPort;
      HostAndPort address = AddressUtil.parseAddress(server);
      final String finalServer = address.toString();","Remove this unused method parameter ""threadName""."
a9efdd884330d37d46c0f8b9dc59cdce0a91c5f7,test/src/main/java/org/apache/accumulo/test/randomwalk/security/CreateUser.java,      switch (ae.getSecurityErrorCode()) {,Do not forget to remove this deprecated code someday.
f343540ca4b9e4359c43d6f990e486de960b637c,core/src/main/java/org/apache/accumulo/core/util/shell/commands/GetGroupsCommand.java,"    String tableName = OptUtil.getTableOpt(cl, shellState);",Either log or rethrow this exception.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/fate/Admin.java,"import java.util.ArrayList;
import java.util.List;

import org.apache.accumulo.server.cli.ClientOpts;
import com.beust.jcommander.JCommander;
import com.beust.jcommander.Parameter;
import com.beust.jcommander.Parameters;


  
  static class TxOpts {
    @Parameter(description=""<txid>"", required=true)
    List<String> args = new ArrayList<String>();
  }
  
  @Parameters(commandDescription=""Stop an existing FATE by transaction id"")
  static class FailOpts extends TxOpts {
  }
  
  @Parameters(commandDescription=""Delete an existing FATE by transaction id"")
  static class DeleteOpts extends TxOpts {
  }
  
  @Parameters(commandDescription=""List the existing FATE transactions"")
  static class ListOpts {
  }
  
    ClientOpts opts = new ClientOpts();
    JCommander jc = new JCommander(opts);
    jc.setProgramName(Admin.class.getName());
    FailOpts fail = new FailOpts();
    jc.addCommand(""fail"", fail);
    DeleteOpts deleteOpts = new DeleteOpts();
    jc.addCommand(""delete"", deleteOpts);
    jc.addCommand(""list"", new ListOpts());
    jc.parse(args);
    if (opts.help || jc.getParsedCommand() == null) {
      jc.usage();
    AdminUtil<Master> admin = new AdminUtil<Master>();
    
    Instance instance = opts.getInstance();
    if (jc.getParsedCommand().equals(""fail"")) {
    } else if (jc.getParsedCommand().equals(""delete"")) {
    } else if (jc.getParsedCommand().equals(""print"")) {","Remove this call to ""exit"" or ensure it is really required."
937e6b8543b2595bcd5b086a80ed776380251d9b,core/src/main/java/org/apache/accumulo/core/iterators/user/SummingArrayCombiner.java,"    if (super.validateOptions(options) == false)
      return false;
    try {
      setEncoder(options);
    } catch (Exception e) {
      throw new IllegalArgumentException(""bad encoder option"", e);
    }","Remove the literal ""false"" boolean value."
b16f74ffa66d5febfda15b6db21c6b5c74197409,test/src/test/java/org/apache/accumulo/fate/zookeeper/ZooLockTest.java,"    
    @Override
    public synchronized void unableToMonitorLockNode(Throwable e) {
      changes++;
      this.notifyAll();
    }
    
    zl.unlock();
    
    zl3.unlock();

    synchronized (zl) {
      Field field = zl.getClass().getDeclaredField(""watchingParent"");
      field.setAccessible(true);
      Assert.assertTrue((Boolean) field.get(zl));
    }
    
    zl.unlock();","Remove this call to ""exit"" or ensure it is really required."
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/AddSplits.java,"package org.apache.accumulo.test.randomwalk.concurrent;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/IteratorSetting.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
7aaaa6f397b6c7409cdb74c99dfc6373cfd1d7e6,test/src/main/java/org/apache/accumulo/test/performance/thrift/NullTserver.java,"import java.util.Set;
import org.apache.accumulo.core.client.impl.thrift.ThriftTableOperationException;
import org.apache.accumulo.core.tabletserver.thrift.DiskUsage;

    @Override
    public List<DiskUsage> getDiskUsage(Set<String> tables, TCredentials credentials) throws ThriftSecurityException, ThriftTableOperationException, TException {
      return null;
    }",Either log or rethrow this exception.
4317e32452212553d26e9af7a31be22e161011a8,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/XMLServlet.java,"    resp.setContentType(""text/xml;charset=UTF-8"");
      sb.append(""<osload>"").append(status.osLoad).append(""</osload>\n"");
      sb.append(""<ingest>"").append(summary.ingestRate).append(""</ingest>\n"");
      sb.append(""<query>"").append(summary.queryRate).append(""</query>\n"");",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
04c50c515fd4c28d3412e1ca0c3f6eaacf44db50,test/src/test/java/org/apache/accumulo/test/MiniAccumuloClusterTest.java,"    conn.securityOperations().createLocalUser(""user1"", new PasswordToken(""pass1""));",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
af9a1216a1853a7bd6e89ab581fadaf682cb69a0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/GetSplitsCommand.java,"    outputFileOpt = new Option(""o"", ""output"", true, ""local file to write the splits to"");
    maxSplitsOpt = new Option(""m"", ""max"", true, ""maximum number of splits to return (evenly spaced)"");
    tableOpt = new Option(Shell.tableOption, ""tableName"", true, ""table to get splits for"");
}",Replace all tab characters in this file by sequences of white-spaces.
f9601adc657762245b34a74db9dbf62039d8be97,core/src/main/java/org/apache/accumulo/core/client/ScannerBase.java,"  
  /**
   * This setting determines how long a scanner will automatically retry when a failure occurs. By default a scanner will retry forever.
   * 
   * @param timeOut
   *          in seconds
   */
  public void setTimeOut(int timeOut);
  
  /**
   * Returns the setting for how long a scanner will automatically retry when a failure occurs.
   * 
   * @return the timeout configured for this scanner
   */
  public int getTimeOut();","Remove this unused method parameter ""e""."
99da5641c28784c7b717cce6749673863c2ec8cf,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/Shutdown.java,"import org.apache.accumulo.core.client.Instance;
        Instance instance = HdfsZooInstance.getInstance();
        Client client = MasterClient.getConnection(instance);
        client.getMasterStats(Tracer.traceInfo(), SystemCredentials.get().toThrift(instance));","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
1dcfb06a4c90b642ae0d3f3a81ea04ce7703dcd5,start/src/main/java/org/apache/accumulo/start/Main.java,"    System.out.println(""accumulo init | master | tserver | monitor | shell | admin | gc | classpath | rfile-info | login-info | tracer | proxy | <accumulo class> args"");",Define and throw a dedicated exception instead of using a generic one.
6a5500a5b3f34b26386877e332973e7b926aa4ce,test/src/main/java/org/apache/accumulo/test/randomwalk/security/CreateUser.java,"import org.apache.accumulo.core.security.thrift.tokens.PasswordToken;
import org.apache.accumulo.core.security.thrift.tokens.SecurityToken;
    SecurityToken tabUserPass = new PasswordToken().setPassword(""Super Sekret Table User Password"".getBytes());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
59e29ad8742907ee95719bca87cfa3da33b16abd,fate/src/main/java/org/apache/accumulo/fate/zookeeper/ZooSession.java,"    long startTime = System.currentTimeMillis();

        
        if (System.currentTimeMillis() - startTime > 2 * timeout)
          throw new RuntimeException(""Failed to connect to zookeeper ("" + host + "") within 2x zookeeper timeout period "" + timeout);
",Define and throw a dedicated exception instead of using a generic one.
f7e96a3e7174eb56a4eb21f7dfdf1f6a9495cc0e,minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloConfig.java,      mergePropWithRandomPort(Property.GC_PORT.getKey());,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/shard/CloneIndex.java,"package org.apache.accumulo.server.test.randomwalk.shard;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Properties;

import org.apache.accumulo.server.test.randomwalk.State;
import org.apache.accumulo.server.test.randomwalk.Test;


public class CloneIndex extends Test {

	@Override
	public void visit(State state, Properties props) throws Exception {
		
		String indexTableName = (String)state.get(""indexTableName"");
		String tmpIndexTableName = indexTableName+""_tmp"";
		
		long t1 = System.currentTimeMillis();
		state.getConnector().tableOperations().flush(indexTableName, null, null, true);
		long t2 = System.currentTimeMillis();
		state.getConnector().tableOperations().clone(indexTableName, tmpIndexTableName, false, new HashMap<String, String>(), new HashSet<String>());
		long t3 = System.currentTimeMillis();
		
		log.debug(""Cloned ""+tmpIndexTableName+"" from ""+indexTableName+"" flush: ""+(t2-t1)+""ms clone: ""+(t3-t2)+""ms"");
		
	}
	
}",Return empty string instead.
afc4907a94ba4991e1abb5c6aa5201cbdf85beea,src/core/src/test/java/org/apache/accumulo/core/iterators/user/WholeRowIteratorTest.java,"package org.apache.accumulo.core.iterators.user;
import org.apache.accumulo.core.iterators.user.WholeRowIterator;","Remove the literal ""false"" boolean value."
b8859513a7f9cec03d7af3f45c7516344798fe06,server/src/main/java/org/apache/accumulo/server/master/LiveTServerSet.java,import org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException;,1 duplicated blocks of code must be removed.
1ef85ebf9fe825c0f640e8e346120829c0476401,test/src/main/java/org/apache/accumulo/test/VerifyIngest.java,"      Connector connector = opts.getConnector();
      connector.securityOperations().changeUserAuthorizations(opts.principal, labelAuths);",Remove this hard-coded password.
3de0c1ec44d476fe1465eb05d33c32de3ccf1068,server/src/main/java/org/apache/accumulo/server/monitor/ZooKeeperStatus.java,"import com.google.common.net.HostAndPort;

          HostAndPort addr;
            addr = HostAndPort.fromParts(parts[0], Integer.parseInt(parts[1]));
            addr = HostAndPort.fromParts(parts[0], 2181);","Remove this unused method parameter ""threadName""."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/util/MapCounter.java,"package org.apache.accumulo.server.util;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Set;

public class MapCounter<KT> {
	
	static class MutableLong {
		long l = 0l;
	}
	
	private HashMap<KT, MutableLong> map;
	
	public MapCounter(){
		map = new HashMap<KT, MutableLong>();
	}
	
	public long increment(KT key, long l){
		MutableLong ml = map.get(key);
		if(ml == null){
			ml = new MutableLong();
			map.put(key, ml);
		}
		
		ml.l += l;
		
		if(ml.l == 0){
			map.remove(key);
		}
		
		return ml.l;
	}
	
	public long decrement(KT key, long l){
		return increment(key, -1*l);
	}
	
	public boolean contains(KT key){
		return map.containsKey(key);
	}
	
	public long get(KT key){
		MutableLong ml = map.get(key);
		if(ml == null){
			return 0;
		}
		
		return ml.l;
	}
	
	public Set<KT> keySet(){
		return map.keySet();
	}
	
	public Collection<Long> values(){
		Collection<MutableLong> vals = map.values();
		ArrayList<Long> ret = new ArrayList<Long>(vals.size());
		for (MutableLong ml : vals) {
			ret.add(ml.l);
		}
		
		return ret;
	}
	
	public int size(){
		return map.size();
	}
}",Return empty string instead.
38932fefb38e1ef2df70fc23a5ed88ff6930afdf,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloFileOutputFormat.java,"   * @return The Accumulo instance.
   * @return The Accumulo instance.",Either log or rethrow this exception.
057b8d6cb0ccbf472067a755d76eba7ee2e3fd71,test/src/test/java/org/apache/accumulo/test/functional/BinaryIT.java,  @Test(timeout=60*1000),Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
0aa7eec581c8696a1b3b39dbca723a997837fe7b,core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloFileOutputFormat.java,import org.apache.accumulo.core.client.mapreduce.lib.util.FileOutputConfigurator;,Either log or rethrow this exception.
36ddf332867a6b9bc50bf26961bc1857b3cc3379,src/server/src/main/java/org/apache/accumulo/server/thrift/metrics/ThriftMetrics.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */","Remove the literal ""true"" boolean value."
ed996b84d6409ec67a6af94db7641451243f2fba,test/src/main/java/org/apache/accumulo/test/functional/SplitRecoveryTest.java,"import org.apache.accumulo.core.client.Scanner;
import org.apache.accumulo.core.client.impl.ScannerImpl;
    TabletServer.verifyTabletInformation(high, instance, null, ""127.0.0.1:0"", zl);

    if (steps >= 1) {
      ensureTabletHasNoUnexpectedMetadataEntries(low, lowDatafileSizes);
      ensureTabletHasNoUnexpectedMetadataEntries(high, highDatafileSizes);
      Map<String,Long> lowBulkFiles = MetadataTable.getBulkFilesLoaded(SecurityConstants.getSystemCredentials(), low);
      Map<String,Long> highBulkFiles = MetadataTable.getBulkFilesLoaded(SecurityConstants.getSystemCredentials(), high);
      if (!lowBulkFiles.equals(highBulkFiles)) {
        throw new Exception("" "" + lowBulkFiles + "" != "" + highBulkFiles + "" "" + low + "" "" + high);
      }
      if (lowBulkFiles.size() == 0) {
        throw new Exception("" no bulk files "" + low);
      }
    } else {
      ensureTabletHasNoUnexpectedMetadataEntries(extent, mapFiles);
    Scanner scanner = new ScannerImpl(HdfsZooInstance.getInstance(), SecurityConstants.getSystemCredentials(), Constants.METADATA_TABLE_ID,
        Constants.NO_AUTHS);
    scanner.setRange(extent.toMetadataRange());
    Iterator<Entry<Key,Value>> iter = scanner.iterator();
      Key key = iter.next().getKey();
        throw new Exception(""Tablet "" + extent + "" contained unexpected "" + Constants.METADATA_TABLE_NAME + "" entry "" + key);","Remove this unused method parameter ""extent""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/performance/metadata/MetadataBatchScanTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
3de0c1ec44d476fe1465eb05d33c32de3ccf1068,test/src/main/java/org/apache/accumulo/test/performance/scan/CollectTabletStats.java,"import com.google.common.net.HostAndPort;
        boolean isLocal = HostAndPort.fromString(entry.getValue()).getHostText().equals(localaddress.getHostName());","Remove this unused method parameter ""threadName""."
fe239249b11bc3de48e423c5e9e50f1f9fe00f5e,core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloMultiTableInputFormat.java,"/**
 * This class allows MapReduce jobs to use multiple Accumulo tables as the source of data. This {@link org.apache.hadoop.mapred.InputFormat} provides keys and
 * values of type {@link Key} and {@link Value} to the Map function.
 * 
 * The user must specify the following via static configurator methods:
 * 
 * <ul>
 * <li>{@link AccumuloInputFormat#setConnectorInfo(JobConf, String, org.apache.accumulo.core.client.security.tokens.AuthenticationToken)}
 * <li>{@link AccumuloInputFormat#setConnectorInfo(JobConf, String, String)}
 * <li>{@link AccumuloInputFormat#setScanAuthorizations(JobConf, org.apache.accumulo.core.security.Authorizations)}
 * <li>{@link AccumuloInputFormat#setZooKeeperInstance(JobConf, String, String)} OR {@link AccumuloInputFormat#setMockInstance(JobConf, String)}
 * <li>{@link AccumuloMultiTableInputFormat#setBatchScanConfigs(org.apache.hadoop.mapred.JobConf, java.util.Map)}
 * </ul>
 * 
 * Other static methods are optional.
 */

public class AccumuloMultiTableInputFormat extends AbstractInputFormat<Key,Value> {
   * Sets the {@link BatchScanConfig} objects on the given Hadoop configuration",Do not forget to remove this deprecated code someday.
04c50c515fd4c28d3412e1ca0c3f6eaacf44db50,core/src/main/java/org/apache/accumulo/core/client/ZooKeeperInstance.java,  @Deprecated,Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
a649b2fcaa9f7b102c56f41f9f1b154a673fd767,server/src/main/java/org/apache/accumulo/server/master/Master.java,"import org.apache.accumulo.server.monitor.util.Table;
      } catch (KeeperException.NoNodeException e) {
        // race condition... table no longer exists?  This call will throw an exception if the table was deleted:
        checkTableId(tableName, op);
        log.info(""Error altering table property"", e);
        throw new ThriftTableOperationException(tableId, tableName, op, TableOperationExceptionType.OTHER, ""Problem altering table property"");
        throw new ThriftTableOperationException(tableId, tableName, op, TableOperationExceptionType.OTHER, ""Problem altering table property"");",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/client/impl/ScannerImpl.java," * 
 * ""Clients can iterate over multiple column families, and there are several 
 * mechanisms for limiting the rows, columns, and timestamps traversed by a 
 * scan. For example, we could restrict [a] scan ... to only produce anchors 
 * whose columns match [a] regular expression ..., or to only produce 
 * 
  
  
  
  
  
    
  
  
  
  
  
  
  
  
  ",Replace all tab characters in this file by sequences of white-spaces.
656a3614e0981462a0ee2c54b4754466d67fb72f,server/src/main/java/org/apache/accumulo/server/tabletserver/compaction/CompactionPlan.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",2 duplicated blocks of code must be removed.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/master/tableOps/ChangeTableState.java,"    if (top != TableOperation.ONLINE && top != TableOperation.OFFLINE)
      throw new IllegalArgumentException(top.toString());
    if (top == TableOperation.OFFLINE)
      ts = TableState.OFFLINE;","Remove this call to ""exit"" or ensure it is really required."
af59f0ad10af71de2f7de9880a1dbe1595956cc5,core/src/test/java/org/apache/accumulo/core/client/mapred/AccumuloFileOutputFormatTest.java,import org.apache.accumulo.core.security.tokens.PasswordToken;,1 duplicated blocks of code must be removed.
6a5500a5b3f34b26386877e332973e7b926aa4ce,core/src/main/java/org/apache/accumulo/core/client/impl/MetadataLocationObtainer.java,"import org.apache.accumulo.core.security.thrift.Credential;
  private Credential credentials;
  MetadataLocationObtainer(Credential credentials, Instance instance) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ed0f9eef789024e70538194f12f5e5126975ae97,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/constraints/NumericValueConstraint.java,"/**
 * This class is an accumulo constraint that ensures values are numeric strings. See docs/examples/README.constraint for instructions.
 */",Replace this use of System.out or System.err by a logger.
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/file/blockfile/cache/ClassSize.java," * 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   * 
   * 
    
              
  
   * 
   * 
    
  
   * 
  
   * 
  
   * 
  ",Replace all tab characters in this file by sequences of white-spaces.
99da5641c28784c7b717cce6749673863c2ec8cf,core/src/main/java/org/apache/accumulo/core/metadata/MetadataServicer.java,"import org.apache.accumulo.core.security.Credentials;
  public static MetadataServicer forTableName(Instance instance, Credentials credentials, String tableName) throws AccumuloException, AccumuloSecurityException {
    Connector conn = instance.getConnector(credentials.getPrincipal(), credentials.getToken());
  public static MetadataServicer forTableId(Instance instance, Credentials credentials, String tableId) {","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/iterators/aggregation/StringMax.java,    return new Value(Long.toString(max).getBytes());,"Remove this unused private ""appendProp"" method."
db4a291f944e8a6ad9d63dcbedfa9fe3108f0ead,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/ScanTable.java,"import org.apache.accumulo.core.client.AccumuloSecurityException;
    } catch (RuntimeException e) {
      if (e.getCause() instanceof AccumuloSecurityException) {
        log.debug(""BatchScan "" + tableName + "" failed, permission error"");
      } else {
        throw e;
      }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
42491533f6e743ed2b26519c556133f5e5f65132,test/src/main/java/org/apache/accumulo/test/randomwalk/security/DropUser.java,      switch (ae.getSecurityErrorCode()) {,Do not forget to remove this deprecated code someday.
ca10f6d48d0e072ba202013e89c57905bb2573d8,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/Merge.java,    // TODO need to sometimes do null start and end ranges - ACCUMULO-1304,"Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
8d5908f50f9f157a1d440b849a75ed07d2717995,core/src/test/java/org/apache/accumulo/core/iterators/user/IntersectingIteratorTest.java,"  int docid = 0;
  private TreeMap<Key,Value> createSortedMap(float hitRatio, int numRows, int numDocsPerRow, Text[] columnFamilies, Text[] otherColumnFamilies,
  private SortedKeyValueIterator<Key,Value> createIteratorStack(float hitRatio, int numRows, int numDocsPerRow, Text[] columnFamilies,
    return createIteratorStack(hitRatio, numRows, numDocsPerRow, columnFamilies, otherColumnFamilies, docs, nullText);
  private SortedKeyValueIterator<Key,Value> createIteratorStack(float hitRatio, int numRows, int numDocsPerRow, Text[] columnFamilies,
    TreeMap<Key,Value> inMemoryMap = createSortedMap(hitRatio, numRows, numDocsPerRow, columnFamilies, otherColumnFamilies, docs, negatedColumns);
  private void cleanup() throws IOException {
    float hitRatio = 0.5f;
    SortedKeyValueIterator<Key,Value> source = createIteratorStack(hitRatio, NUM_ROWS, NUM_DOCIDS, columnFamilies, otherColumnFamilies, docs);
    float hitRatio = 0.5f;
    SortedKeyValueIterator<Key,Value> source = createIteratorStack(hitRatio, NUM_ROWS, NUM_DOCIDS, columnFamilies, otherColumnFamilies, docs);
    float hitRatio = 0.5f;
    SortedKeyValueIterator<Key,Value> source = createIteratorStack(hitRatio, NUM_ROWS, NUM_DOCIDS, columnFamilies, otherColumnFamilies, docs);
    SortedKeyValueIterator<Key,Value> source2 = createIteratorStack(hitRatio, NUM_ROWS, NUM_DOCIDS, columnFamilies, otherColumnFamilies, docs);
    float hitRatio = 0.5f;
    SortedKeyValueIterator<Key,Value> source = createIteratorStack(hitRatio, NUM_ROWS, NUM_DOCIDS, columnFamilies, otherColumnFamilies, docs, negatedColumns);","Remove the declaration of thrown exception 'java.io.IOException', as it cannot be thrown from method's body."
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/NullBatchWriter.java,"  
  private int mutationsAdded;
  private long startTime;
  
  @Override
  public void addMutation(Mutation m) throws MutationsRejectedException {
    if (mutationsAdded == 0) {
      startTime = System.currentTimeMillis();
    mutationsAdded++;
    m.numBytes();
  }
  
  @Override
  public void addMutations(Iterable<Mutation> iterable) throws MutationsRejectedException {
    for (Mutation mutation : iterable) {
      addMutation(mutation);
  }
  
  @Override
  public void close() throws MutationsRejectedException {
    flush();
  }
  
  @Override
  public void flush() throws MutationsRejectedException {
    System.out.printf(""Mutation add rate : %,6.2f mutations/sec\n"", mutationsAdded / ((System.currentTimeMillis() - startTime) / 1000.0));
    mutationsAdded = 0;
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
35f8e2b1868cea9849efae7fae21e8ac789a0817,core/src/main/java/org/apache/accumulo/core/iterators/user/RowDeletingIterator.java,"import java.nio.charset.Charset;
  private static final Charset utf8 = Charset.forName(""UTF8"");
	  
  public static final Value DELETE_ROW_VALUE = new Value(""DEL_ROW"".getBytes(utf8));
",Move this variable to comply with Java Code Conventions.
a1afdead746d3ac983a43d962f61ded1b8370332,core/src/main/java/org/apache/accumulo/core/file/rfile/RFile.java,                currKey = tmpRk.getKey();,4 duplicated blocks of code must be removed.
0bff2afcab366c1e2acbbd9df1cf685e614ffad1,src/server/src/main/java/org/apache/accumulo/server/util/Initialize.java,"import org.apache.accumulo.server.iterators.MetadataBulkLoadFilter;
    initialMetadataConf.put(Property.TABLE_ITERATOR_PREFIX.getKey() + ""majc.bulkLoadFilter"", ""20,"" + MetadataBulkLoadFilter.class.getName());",Either log or rethrow this exception.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/GetSplitsCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
af59f0ad10af71de2f7de9880a1dbe1595956cc5,core/src/test/java/org/apache/accumulo/core/client/mock/MockConnectorTest.java,import org.apache.accumulo.core.security.tokens.PasswordToken;,1 duplicated blocks of code must be removed.
10b44e79544b5f16cd747de7926af23739bf5726,server/src/main/java/org/apache/accumulo/server/gc/SimpleGarbageCollector.java,"import org.apache.accumulo.server.ServerOpts;
  static class Opts extends ServerOpts {
  private Opts opts = new Opts();
    opts.parseArgs(""gc"", args);
    SimpleGarbageCollector gc = new SimpleGarbageCollector(opts);
    Accumulo.enableTracing(opts.getAddress(), ""gc"");
  public SimpleGarbageCollector(Opts opts) {
    this.opts = opts;
    log.info(""start delay: "" + (opts.offline ? 0 + "" sec (offline)"" : gcStartDelay + "" milliseconds""));
    log.info(""safemode: "" + opts.safeMode);
    log.info(""offline: "" + opts.offline);
    log.info(""verbose: "" + opts.verbose);
    if (!opts.offline) {
        if (opts.safeMode) {
          if (opts.verbose)
      if (opts.offline)
    InetSocketAddress result = new InetSocketAddress(opts.getAddress(), port);
      TServerUtils.startTServer(result, processor, this.getClass().getSimpleName(), ""GC Monitor Service"", 2, 1000, maxMessageSize);
    return result;
    if (opts.offline) {
    if (opts.offline) {
    if (!opts.offline) {","Remove this unused method parameter ""threadName""."
7942da1d204d271bff01e9e93208cdd67d0eefa3,core/src/main/java/org/apache/accumulo/core/client/mock/MockAccumulo.java,"import org.apache.hadoop.io.Text;
    MockUser root = new MockUser(""root"", new PasswordToken(new byte[0]), Constants.NO_AUTHS);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bfc44fd328c471d06b480835ba826b706dcf6816,core/src/test/java/org/apache/accumulo/core/client/mock/MockConnectorTest.java,"import java.util.concurrent.TimeUnit;
    BatchScanner s = c.createBatchScanner(""test"", Authorizations.EMPTY, 2);
    BatchWriter bw = c
        .createBatchWriter(""test"", new BatchWriterConfig().setMaxMemory(10000L).setMaxLatency(1000L, TimeUnit.MILLISECONDS).setMaxWriteThreads(4));
    
    
    bw.addMutations(Collections.<Mutation> emptyList());
    
    
    
  
    Scanner s = c.createScanner(""perDayCounts"", Authorizations.EMPTY);
    Scanner scanner = c.createScanner(""test"", Authorizations.EMPTY);
    BatchDeleter deleter = c.createBatchDeleter(""test"", Authorizations.EMPTY, 2, new BatchWriterConfig());
    Scanner scanner = c.createScanner(tableName, Authorizations.EMPTY);
    Scanner scanner = c.createScanner(""test"", Authorizations.EMPTY);
    Scanner scanner = c.createScanner(""a"", Authorizations.EMPTY);
    scanner = c.createScanner(""b"", Authorizations.EMPTY);
    Scanner scanner = c.createScanner(""test"", Authorizations.EMPTY);","Remove this unused method parameter ""range""."
02a26268575ac93d74796ec8fd8798f85b92dac1,server/src/main/java/org/apache/accumulo/server/gc/SimpleGarbageCollector.java,"      if (lock.tryLock(lockWatcher, new ServerServices(address, Service.GC_CLIENT).toString().getBytes())) {","Remove this unused method parameter ""ex""."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/security/SecurityConstants.java,"    byte[] version = Constants.VERSION.getBytes();
    byte[] inst = HdfsZooInstance.getInstance().getInstanceID().getBytes();
      versionFails = !Arrays.equals(buff, Constants.VERSION.getBytes());
      instanceFails = !Arrays.equals(buff, HdfsZooInstance.getInstance().getInstanceID().getBytes());
      md.update(Constants.VERSION.getBytes());
      md.update(HdfsZooInstance.getInstance().getInstanceID().getBytes());
          md.update(entry.getKey().getBytes());
          md.update(entry.getValue().getBytes());","Remove this unused private ""appendProp"" method."
5ae9fda6e5f61e619c529ac7fac10442cf1c1578,src/server/src/main/java/org/apache/accumulo/server/fate/Fate.java,"      Thread thread = new Daemon(new LoggingRunnable(log, new TransactionRunner()), ""Repo runner "" + i);
        store.setProperty(tid, DEBUG_PROP, repo.getDescription());",Rename this package name to match the regular expression '^[a-z]+(\.[a-z][a-z0-9]*)*$'.
b1945d4dd4a2327314b35de5442a3028c7d557aa,src/core/src/main/java/org/apache/accumulo/core/iterators/FamilyIntersectingIterator.java,"/**
import org.apache.accumulo.core.iterators.user.IndexedDocIterator;
/**
 * This class remains here for backwards compatibility.
 * 
 * @deprecated since 1.4
 * @see org.apache.accumulo.core.iterators.user.IndexedDocIterator
 */
public class FamilyIntersectingIterator extends IndexedDocIterator {",Either log or rethrow this exception.
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/combiner/StatsCombiner.java,package org.apache.accumulo.examples.simple.combiner;,2 duplicated blocks of code must be removed.
5bd33fa1e9625e3c088ee39f626c256aca75b0da,core/src/test/java/org/apache/accumulo/core/client/mock/MockConnectorTest.java,"import org.apache.accumulo.core.client.BatchWriterConfig;
    BatchWriter bw = c.createBatchWriter(""test"", new BatchWriterConfig());
    BatchWriter bw = c.createBatchWriter(""perDayCounts"", new BatchWriterConfig());
    BatchWriter bw = c.createBatchWriter(""test"", new BatchWriterConfig());
    BatchDeleter deleter = c.createBatchDeleter(""test"", Constants.NO_AUTHS, 2, new BatchWriterConfig());
    BatchWriter writer = c.createBatchWriter(""test"", new BatchWriterConfig());
    writer = c.createBatchWriter(""test"", new BatchWriterConfig());
    BatchWriter bw = c.createBatchWriter(""test"", new BatchWriterConfig());
    MultiTableBatchWriter bw = c.createMultiTableBatchWriter(new BatchWriterConfig());
    BatchWriter bw = c.createBatchWriter(""test"", new BatchWriterConfig());","Remove this unused method parameter ""e""."
176df80fd404e7ba68bceedbb1ab2b3a53862857,core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ConstraintViolationException.java,"                  org.apache.accumulo.core.data.thrift.TConstraintViolationSummary _elem2; // required
            org.apache.accumulo.core.data.thrift.TConstraintViolationSummary _elem7; // required","Remove this unused method parameter ""table""."
cbb2d5c4c9590822a11fb9eb626726330700b37f,test/src/test/java/org/apache/accumulo/test/MetaSplitTest.java,  @Test(timeout = 60000),1 duplicated blocks of code must be removed.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/iterators/conf/ColumnSet.java,"package org.apache.accumulo.core.iterators.conf;

import java.util.Collection;
import java.util.HashSet;
import java.util.Set;

import org.apache.accumulo.core.data.Key;
import org.apache.accumulo.core.iterators.conf.ColumnUtil.ColFamHashKey;
import org.apache.accumulo.core.iterators.conf.ColumnUtil.ColHashKey;
import org.apache.hadoop.io.Text;


@SuppressWarnings(""deprecation"")
public class ColumnSet {
	private Set<ColFamHashKey> objectsCF;
	private Set<ColHashKey> objectsCol;
	
	private ColHashKey lookupCol = new ColHashKey();
	private ColFamHashKey lookupCF = new ColFamHashKey();
	
	public ColumnSet(){
		objectsCF = new HashSet<ColFamHashKey>();
		objectsCol = new HashSet<ColHashKey>();
	}
	
	public ColumnSet(Collection<String> objectStrings) {
		this();
		
		for (String column : objectStrings) {
			PerColumnIteratorConfig pcic = PerColumnIteratorConfig.decodeColumns(column, null);
			
			if(pcic.getColumnQualifier() == null){
				add(pcic.getColumnFamily());
			}else{
				add(pcic.getColumnFamily(), pcic.getColumnQualifier());
			}
		}
	}

	protected void add(Text colf){
		objectsCF.add(new ColFamHashKey(new Text(colf)));
	}
	
	protected void add(Text colf, Text colq){
		objectsCol.add(new ColHashKey(colf, colq));
	}
	
	public boolean contains(Key key) {
		//lookup column family and column qualifier
		if(objectsCol.size() > 0){
			lookupCol.set(key);
			if (objectsCol.contains(lookupCol)) return true;
		}
		
		//lookup just column family
		if(objectsCF.size() > 0){
			lookupCF.set(key);
			return objectsCF.contains(lookupCF);
		}
		
		return false;
	}
	
	public boolean isEmpty() {
		return objectsCol.size() == 0 && objectsCF.size() == 0;
	}
}",Return empty string instead.
e511baa049c58509539ab7eb793c0da97c9d3ef6,core/src/main/java/org/apache/accumulo/core/util/ColumnFQ.java,"  @Deprecated
  @Deprecated
  @Deprecated",Return empty string instead.
1039b9ec83b9f3f99e6606d4f2b0849bdab9eb79,trace/src/main/java/org/apache/accumulo/cloudtrace/instrument/receivers/AsyncSpanReceiver.java,  final AbstractQueue<RemoteSpan> sendQueue = new ConcurrentLinkedQueue<RemoteSpan>();,Move this variable to comply with Java Code Conventions.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,examples/simple/src/main/java/org/apache/accumulo/examples/simple/filedata/CharacterHistogram.java,"import org.apache.accumulo.core.cli.ClientOnRequiredTable;
import com.beust.jcommander.Parameter;

  static class Opts extends ClientOnRequiredTable {
    @Parameter(names=""--vis"")
    String visibilities = """";
  }
  
  

    Opts opts = new Opts();
    opts.parseArgs(CharacterHistogram.class.getName(), args);

    opts.setAccumuloConfigs(job);
    job.getConfiguration().set(VIS, opts.visibilities.toString());","Remove this call to ""exit"" or ensure it is really required."
28404ae3fd69ab8fa2635f99884210e350f945df,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"import java.util.concurrent.Executors;
import java.util.concurrent.ThreadPoolExecutor;
import org.apache.accumulo.core.util.NamingThreadFactory;
import org.apache.accumulo.server.zookeeper.DistributedWorkQueue;
  private DistributedWorkQueue bulkFailedCopyQ;
  
    ThreadPoolExecutor distWorkQThreadPool = (ThreadPoolExecutor) Executors.newFixedThreadPool(getSystemConfiguration().getCount(Property.TSERV_WORKQ_THREADS),
        new NamingThreadFactory(""distributed work queue""));

    bulkFailedCopyQ = new DistributedWorkQueue(Constants.ZROOT + ""/"" + HdfsZooInstance.getInstance().getInstanceID() + Constants.ZBULK_FAILED_COPYQ);
    try {
      bulkFailedCopyQ.startProcessing(new BulkFailedCopyProcessor(), distWorkQThreadPool);
    } catch (Exception e1) {
      throw new RuntimeException(""Failed to start distributed work queue for copying "", e1);
    }
","Reduce this switch case number of lines from 11 to at most 5, for example by extracting code into methods."
b96701f220ecb3e891a71741179b867429fa1d39,core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloInputFormat.java," * <li>{@link AccumuloInputFormat#setTableQueryConfigs(JobConf, org.apache.accumulo.core.conf.TableQueryConfig...)}</li>",Either log or rethrow this exception.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/client/impl/Writer.java,"        log.error(""server = "" + tabLoc.tablet_location, e);","Remove this unused private ""appendProp"" method."
bafe4507a744cf1888a1195ff946848bbc944484,server/src/main/java/org/apache/accumulo/server/util/RestoreZookeeper.java,"import org.apache.accumulo.fate.zookeeper.IZooReaderWriter;
import org.apache.accumulo.server.zookeeper.ZooReaderWriter;
    IZooReaderWriter zk = null;
    Restore(IZooReaderWriter zk, boolean overwrite) {
          zk.putPersistentData(path, data, overwrite ? NodeExistsPolicy.OVERWRITE : NodeExistsPolicy.FAIL);
    parser.parse(in, new Restore(ZooReaderWriter.getInstance(), opts.overwrite));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/test/java/org/apache/accumulo/test/iterator/RegExTest.java,package org.apache.accumulo.test.iterator;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/data/thrift/IterInfo.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */","Remove this unused private ""appendProp"" method."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/functional/RunTests.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
20d587c571bc0bb7fc8251c9e6701fe843291837,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"import org.apache.accumulo.server.master.state.ZooTabletStateStore;
import org.mortbay.log.Log;
      String clientAddress, ZooLock lock) throws AccumuloSecurityException, DistributedStoreException {
          ZooTabletStateStore store = new ZooTabletStateStore();
          if (!store.iterator().hasNext()) {
            log.warn(""Illegal state: location is not set in zookeeper"");
            return null;
          }
          TabletLocationState next = store.iterator().next();
          if (!instance.equals(next.future)) {
            log.warn(""Future location is not to this server for the root tablet"");
            return null;
          }",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/client/HdfsZooInstance.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
af9a1216a1853a7bd6e89ab581fadaf682cb69a0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/RevokeCommand.java,"    tableOpt = new Option(Shell.tableOption, ""table"", true, ""table to revoke a table permission for"");
}",Replace all tab characters in this file by sequences of white-spaces.
3b62690ceb7c98383e2231d82204aed90fb592ed,contrib/accumulo_sample/query/src/main/java/iterator/AbstractEvaluatingIterator.java,"            throw new IllegalArgumentException(""Failed to parse query"", e);",Complete the task associated to this TODO comment.
48e331cc2d55a37421b5dd7bbb45e91657ea811f,test/src/main/java/org/apache/accumulo/test/functional/BulkSplitOptimizationTest.java,    while (getConnector().tableOperations().listSplits(TABLE_NAME).size() < 50) {,Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/client/Connector.java," * 
  
   * 
   * 
  
   * 
   * 
  
   * 
  
  
   * 
   * 
  
   * 
  
  
   * 
   * 
  
   * 
  
  
   * 
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * ",Replace all tab characters in this file by sequences of white-spaces.
50f47f759f1fcda4b68716a07b74baab440c7251,server/src/main/java/org/apache/accumulo/server/monitor/servlets/trace/Basic.java,"      at = HdfsZooInstance.getInstance().getAuthenticator().login(principal, props);","Remove this unused method parameter ""principal""."
aa7110234e15a017bb1dbc99b4351f0bf06cc73b,test/src/test/java/org/apache/accumulo/test/functional/BatchWriterFlushIT.java,"

    String[] tableNames = getTableNames(2);
    String bwft = tableNames[0];
    String bwlt = tableNames[1];











  private void runFlushTest(String tableName) throws AccumuloException, AccumuloSecurityException, TableNotFoundException, MutationsRejectedException,
      Exception {























",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2bd8f1b07c42fcbf8742ba08e83dddc264a4aa1b,examples/simple/src/main/java/org/apache/accumulo/examples/simple/shard/Index.java,"  public static void index(int numPartitions, File src, String splitRegex, BatchWriter bw) throws Exception {",Either log or rethrow this exception.
fb39453e79e370b32bd5c8f39ec9c5a97cc64c48,core/src/main/java/org/apache/accumulo/core/client/impl/TabletLocatorImpl.java,"    /**
     * @return null when unable to read information successfully
     */
    TabletLocations lookupTablet(TabletLocation src, Text row, Text stopRow, TabletLocator parent) throws AccumuloSecurityException, AccumuloException;
      TabletLocations locations = locationObtainer.lookupTablet(ptl, metadataRow, lastTabletRow, parent);
      while (locations != null && locations.getLocations().isEmpty() && locations.getLocationless().isEmpty()
 && !ptl.tablet_extent.isRootTablet()) {
        // try the next tablet, the current tablet does not have any tablets that overlap the row
          else
            break;
        } else {
          break;
      if (locations == null)
        return;

      for (TabletLocation tabletLocation : locations.getLocations()) {",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
e5dad25fb62544cd271a06535a801288e7482c15,src/server/src/main/java/org/apache/accumulo/server/util/FindOfflineTablets.java,"import java.util.Iterator;
import java.util.concurrent.atomic.AtomicBoolean;
import org.apache.accumulo.core.Constants;
import org.apache.commons.collections.iterators.IteratorChain;
    if (args.length != 2) {
      System.err.println(""Usage: "" + FindOfflineTablets.class.getName() + "" <instance> <zookeepers>"");
    MetaDataTableScanner rootScanner = new MetaDataTableScanner(zooInst, SecurityConstants.getSystemCredentials(),
        Constants.ROOT_TABLET_EXTENT.toMetadataRange());
    MetaDataTableScanner metaScanner = new MetaDataTableScanner(zooInst, SecurityConstants.getSystemCredentials(), Constants.NON_ROOT_METADATA_KEYSPACE);
    @SuppressWarnings(""unchecked"")
    Iterator<TabletLocationState> scanner = (Iterator<TabletLocationState>) new IteratorChain(rootScanner, metaScanner);
    final AtomicBoolean scanning = new AtomicBoolean(false);
        if (!deleted.isEmpty() && scanning.get())
        if (!added.isEmpty() && scanning.get())
    
    tservers.startListeningForTabletServerChanges();
    scanning.set(true);

      if (state != null && state != TabletState.HOSTED
          && TableManager.getInstance().getTableState(locationState.extent.getTableId().toString()) != TableState.OFFLINE)
        if (!locationState.extent.equals(Constants.ROOT_TABLET_EXTENT))
          System.out.println(locationState + "" is "" + state + ""  #walogs:"" + locationState.walogs.size());",Merge this if statement with the enclosing one.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/CreateTable.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    @Override
    public void visit(State state, Properties props) throws Exception {
        Connector conn = state.getConnector();
        
        Random rand = (Random) state.get(""rand"");
        
        @SuppressWarnings(""unchecked"")
        List<String> tableNames = (List<String>) state.get(""tables"");
        
        String tableName = tableNames.get(rand.nextInt(tableNames.size()));
        
        try {
            conn.tableOperations().create(tableName);
            log.debug(""Created table "" + tableName);
        } catch (TableExistsException e) {
            log.debug(""Create "" + tableName + "" failed, it exist"");
        }
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
01dcdb92ca2c5b5dbcd692d6a0f32b35a7866ae8,server/src/main/java/org/apache/accumulo/server/master/recovery/HadoopLogCloser.java,"import org.apache.accumulo.core.conf.Property;
import org.apache.accumulo.server.master.Master;
  public long close(Master master, FileSystem fs, Path source) throws IOException {
          return master.getConfiguration().getConfiguration().getTimeInMillis(Property.MASTER_LEASE_RECOVERY_WAITING_PERIOD);",1 duplicated blocks of code must be removed.
e511baa049c58509539ab7eb793c0da97c9d3ef6,core/src/test/java/org/apache/accumulo/core/client/BatchWriterConfigTest.java,"  public void testZeroValues() {
    bwConfig.setMaxMemory(0);
    assertEquals(0, bwConfig.getMaxMemory());
  public void testNegativeMaxMemory() {
    bwConfig.setMaxMemory(-1);
  @Test
  public void testTinyTimeConversions() {
    BatchWriterConfig bwConfig = new BatchWriterConfig();
    bwConfig.setMaxLatency(999, TimeUnit.MICROSECONDS);
    bwConfig.setTimeout(999, TimeUnit.MICROSECONDS);
    
    assertEquals(1000, bwConfig.getMaxLatency(TimeUnit.MICROSECONDS));
    assertEquals(1000, bwConfig.getTimeout(TimeUnit.MICROSECONDS));
    assertEquals(1, bwConfig.getMaxLatency(TimeUnit.MILLISECONDS));
    assertEquals(1, bwConfig.getTimeout(TimeUnit.MILLISECONDS));
    
    bwConfig.setMaxLatency(10, TimeUnit.NANOSECONDS);
    bwConfig.setTimeout(10, TimeUnit.NANOSECONDS);
    
    assertEquals(1000000, bwConfig.getMaxLatency(TimeUnit.NANOSECONDS));
    assertEquals(1000000, bwConfig.getTimeout(TimeUnit.NANOSECONDS));
    assertEquals(1, bwConfig.getMaxLatency(TimeUnit.MILLISECONDS));
    assertEquals(1, bwConfig.getTimeout(TimeUnit.MILLISECONDS));
    
  }
  ",Return empty string instead.
a650bc93ce99a5f771fb10615334c5fbea8b40a4,minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloConfig.java,"    
    //Sanity checks
    if (this.getDir().exists() && !this.getDir().isDirectory())
      throw new IllegalArgumentException(""Must pass in directory, "" + this.getDir() + "" is a file"");

    if (this.getDir().exists() && this.getDir().list().length != 0)
      throw new IllegalArgumentException(""Directory "" + this.getDir() + "" is not empty"");
    ",277 duplicated blocks of code must be removed.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,server/src/main/java/org/apache/accumulo/server/master/balancer/TabletBalancer.java,"      List<TabletStats> onlineTabletsForTable = client.getTabletStats(Tracer.traceInfo(), SecurityConstants.getSystemCredentials(), tableId);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
6a5500a5b3f34b26386877e332973e7b926aa4ce,core/src/test/java/org/apache/accumulo/core/client/mapred/AccumuloInputFormatTest.java,"import java.nio.charset.Charset;
import org.apache.accumulo.core.security.thrift.tokens.PasswordToken;
      AccumuloInputFormat.setConnectorInfo(job, user, new PasswordToken().setPassword(pass.getBytes(Charset.forName(""UTF-8""))));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/tabletserver/log/LogSorter.java,"import org.apache.accumulo.fate.zookeeper.ZooLock.LockLossReason;
import org.apache.accumulo.fate.zookeeper.ZooLock.LockWatcher;
import org.apache.accumulo.fate.zookeeper.ZooUtil.NodeMissingPolicy;","Remove this call to ""exit"" or ensure it is really required."
a1c5667873834cdd74cb3eb5a19ec25486fba290,core/src/main/java/org/apache/accumulo/core/util/shell/commands/UserCommand.java,      shellState.getReader().println();,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/functional/LogicalTimeTest.java,package org.apache.accumulo.test.functional;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
56cd6b7861a0dbfc21fa08f44d11210b45f0fd96,core/src/main/java/org/apache/accumulo/core/util/shell/commands/TraceCommand.java,          for (int i = 0; i < 30; i++) {,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
0811c7958ecc1a9a2c8f80702273856f1cd2eab8,src/trace/src/main/java/org/apache/accumulo/cloudtrace/instrument/receivers/SendSpansViaThrift.java,"package org.apache.accumulo.cloudtrace.instrument.receivers;
import org.apache.accumulo.cloudtrace.thrift.RemoteSpan;
import org.apache.accumulo.cloudtrace.thrift.SpanReceiver.Client;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/trace/ListType.java,"      if (obj == null)
        return ""-"";","Remove this call to ""exit"" or ensure it is really required."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/monitor/util/celltypes/StringType.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
b2704423be3181ab1681dd0bf6e3f093135bb18d,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/security/TableOp.java,"        fs.delete(dir, true);
        fs.delete(fail, true);
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ff1e582020a1437e9c520ef3a1af99477462d803,core/src/main/java/org/apache/accumulo/core/data/Column.java,"import static org.apache.accumulo.core.util.ByteBufferUtil.toBytes;
import java.io.DataInput;",2 duplicated blocks of code must be removed.
8dccbe7e9960c204bf82326c9fe6e28dcb8d647e,trace/src/main/java/org/apache/accumulo/cloudtrace/thrift/TestService.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",296 duplicated blocks of code must be removed.
0811c7958ecc1a9a2c8f80702273856f1cd2eab8,src/core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReaderIterator.java,import org.apache.accumulo.cloudtrace.instrument.TraceRunnable;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
8025e96e0b108063f3028eb06b78847de2fa95d4,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/function/QueryFunctions.java,package org.apache.accumulo.examples.wikisearch.function;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ea3e2ea8ad34493a95f5aad56410ed4c6950fae8,server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousBatchWalker.java,"import org.apache.accumulo.core.security.Authorizations;
import org.apache.accumulo.server.test.continuous.ContinuousWalk.RandomAuths;
  private static String authsFile = null;
      } else if (args[i].equals(""--auths"")) {
        authsFile = args[++i];
          + "" [--debug <debug log>] [--auths <file>] <instance name> <zookeepers> <user> <pass> <table> <min> <max> <sleep time> <batch size> <query threads>"");
    RandomAuths randomAuths = new RandomAuths(authsFile);
    Authorizations auths = randomAuths.getAuths(r);

    Connector conn = new ZooKeeperInstance(instanceName, zooKeepers).getConnector(user, password.getBytes());
    Scanner scanner = conn.createScanner(table, auths);
    BatchScanner bs = conn.createBatchScanner(table, auths, numQueryThreads);
","Remove this unused method parameter ""r""."
ca70c0288721bed8e95bc7813c2d4becdb7be3bb,core/src/main/java/org/apache/accumulo/core/util/ContextFactory.java,"import org.apache.hadoop.mapreduce.Job;
  private static final Constructor<?> JOB_CONSTRUCTOR;
    Class<?> jobCls;
        jobCls = Class.forName(PACKAGE + "".Job"");
        jobCls = Class.forName(PACKAGE + "".Job"");
      JOB_CONSTRUCTOR = jobCls.getConstructor(Configuration.class, String.class);
  public static Job createJob() {
    return createJob(new Configuration());
  }
  
  public static Job createJob(Configuration conf) {
    try {
      return (Job) JOB_CONSTRUCTOR.newInstance(conf, new JobID(""local"", 0).toString());
    } catch (InstantiationException e) {
      throw new IllegalArgumentException(""Can't create object"", e);
    } catch (IllegalAccessException e) {
      throw new IllegalArgumentException(""Can't create object"", e);
    } catch (InvocationTargetException e) {
      throw new IllegalArgumentException(""Can't create object"", e);
    }
  }
  
        @SuppressWarnings(""unchecked"")
        Mapper<K1,V1,K2,V2>.Context newInstance = (Mapper<K1,V1,K2,V2>.Context) MAP_CONTEXT_CONSTRUCTOR.newInstance(MAP_CONSTRUCTOR.newInstance(), basis);
        return newInstance;
        @SuppressWarnings(""unchecked"")
        Mapper<K1,V1,K2,V2>.Context newInstance = (Mapper<K1,V1,K2,V2>.Context) MAP_CONTEXT_CONSTRUCTOR.newInstance(m, tac.getConfiguration(),
            tac.getTaskAttemptID(), reader, writer, committer, reporter, split);
        return newInstance;",Move this variable to comply with Java Code Conventions.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/multitable/Commit.java,"  
  @Override
  public void visit(State state, Properties props) throws Exception {
    state.getMultiTableBatchWriter().flush();
    Integer numWrites = state.getInteger(""numWrites"");
    Integer totalWrites = state.getInteger(""totalWrites"") + numWrites;
    log.debug(""Committed "" + numWrites + "" writes.  Total writes: "" + totalWrites);
    
    state.set(""totalWrites"", totalWrites);
    state.set(""numWrites"", new Integer(0));
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
3f52aecdb983f029bc5741b215cb625f5bdcd2f6,src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsImpl.java,"import org.apache.accumulo.core.client.TableDeletedException;
    String tableId = Tables.getTableId(instance, tableName);
    TabletLocator tl = TabletLocator.getInstance(instance, credentials, new Text(tableId));
      if (!Tables.exists(instance, tableId))
        throw new TableDeletedException(tableId);
      if (Tables.getTableState(instance, tableId) == TableState.OFFLINE)
        throw new TableOfflineException(instance, tableId);

      binnedRanges.clear();","Remove this unused method parameter ""extent""."
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/file/FileSKVIterator.java,"  public Key getFirstKey() throws IOException;
  
  public Key getLastKey() throws IOException;
  
  public DataInputStream getMetaStore(String name) throws IOException, NoSuchMetaStoreException;
  
  public void closeDeepCopies() throws IOException;
  
  public void close() throws IOException;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/util/TextUtil.java,"package org.apache.accumulo.core.util;

import java.nio.ByteBuffer;

import org.apache.accumulo.core.Constants;
import org.apache.hadoop.io.Text;



public final class TextUtil
{
	public static byte[] getBytes(Text text) {
		byte[] bytes = text.getBytes();
		if (bytes.length != text.getLength())
		{
			bytes = new byte[text.getLength()];
			System.arraycopy(text.getBytes(), 0, bytes, 0, bytes.length);
		}
		return bytes;
	}
	
	public static ByteBuffer getByteBuffer(Text text) {
		if(text == null)
			return null;
        byte[] bytes = text.getBytes();
        return ByteBuffer.wrap(bytes, 0, text.getLength());
    }
    
	public static Text truncate(Text text, int maxLen) {
		if(text.getLength() > maxLen){
			Text newText = new Text();
			newText.append(text.getBytes(), 0, maxLen);
			String suffix = ""... TRUNCATED"";
			newText.append(suffix.getBytes(), 0, suffix.length());
			return newText;
		}
		
		return text;
	}

	public static Text truncate(Text row) {
		return truncate(row, Constants.MAX_DATA_TO_PRINT);
	}
}",Return empty string instead.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/util/TableDiskUsage.java,"package org.apache.accumulo.server.util;

import java.util.Arrays;

import org.apache.accumulo.core.client.Connector;
import org.apache.accumulo.core.client.Instance;
import org.apache.accumulo.server.client.HdfsZooInstance;
import org.apache.accumulo.server.conf.ServerConfiguration;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FileSystem;


public class TableDiskUsage {
    
    /**
     * @param args
     */
    public static void main(String[] args) throws Exception {
        FileSystem fs = FileSystem.get(new Configuration());
        
        Instance instance = HdfsZooInstance.getInstance();
        Connector conn = instance.getConnector(""root"", ""secret"");
        
        org.apache.accumulo.core.util.TableDiskUsage.printDiskUsage(ServerConfiguration.getSystemConfiguration(), Arrays.asList(args), fs, conn);
    }

}",Return empty string instead.
7a1075a47299afd6d27225b17814c11eb62432d2,test/src/main/java/org/apache/accumulo/test/functional/CacheTestClean.java,"import org.apache.commons.io.FileUtils;
    if (reportDir.exists()) {
      FileUtils.deleteDirectory(reportDir);
    reportDir.mkdirs();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
93773813e5839ac9ffb4f5a2b2b70bcedb106286,server/src/main/java/org/apache/accumulo/server/util/OfflineMetadataScanner.java,"import org.apache.accumulo.core.util.RootTable;
      rwal = MetadataTable.getLogEntries(null, RootTable.ROOT_TABLET_EXTENT);
    columns.add(new Column(TextUtil.getBytes(MetadataTable.DATAFILE_COLUMN_FAMILY), null, null));
    columns.add(new Column(TextUtil.getBytes(MetadataTable.LOG_COLUMN_FAMILY), null, null));
      if (ssi.getTopKey().compareColumnFamily(MetadataTable.DATAFILE_COLUMN_FAMILY) == 0) {
    scanner.setRange(MetadataTable.KEYSPACE);","Use ""Long.toString"" instead."
3ae2b169d30ad1f39cc50540ddb0eb22321ada5d,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReaderIterator.java,"    this.locator = new TimeoutTabletLocator(TabletLocator.getInstance(instance, new Text(table)), timeout);
      List<Range> failures = tabletLocator.binRanges(ranges, binnedRanges, credentials);",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
3b3d390cafb8fbc50945b2a7042afd80df421193,src/server/src/main/java/org/apache/accumulo/server/trace/TraceServer.java,"  private BatchWriter writer = null;
  private Connector connector;
  final String table;

        if (writer == null)
          resetWriter();
        if (writer == null)
          return;
    table = conf.get(Property.TRACE_TABLE);
      resetWriter();
    }
  }
  
  synchronized private void resetWriter() {
    try {
      if (writer != null)
        writer.close();
    } catch (Exception ex) {
      log.error(""Error closing batch writer"", ex);
    } finally {
      writer = null;
      try {
        writer = connector.createBatchWriter(table, 100l * 1024 * 1024, 5 * 1000l, 10);
      } catch (Exception ex) {
        log.error(""Unable to create a batch writer: "" + ex);
      }
",Reorder the modifiers to comply with the Java Language Specification.
6a5500a5b3f34b26386877e332973e7b926aa4ce,server/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java,"import org.apache.accumulo.core.security.CredentialHelper;
import org.apache.accumulo.core.security.thrift.Credential;
  final protected Credential auths;
  public MetaDataStateStore(Instance instance, Credential auths, CurrentState state) {
      return instance.getConnector(auths.getPrincipal(), CredentialHelper.extractToken(auths)).createBatchWriter(Constants.METADATA_TABLE_NAME,",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,core/src/main/java/org/apache/accumulo/core/cli/ClientOpts.java,"import java.nio.ByteBuffer;
import org.apache.accumulo.core.security.thrift.Credentials;
    @Override
  public byte[] getPassword() {
    if (securePassword == null) {
      return password.value;
    return securePassword.value;
    return getInstance().getConnector(this.user, this.getPassword());
  public Credentials getCredentials() {
    return new Credentials(user, ByteBuffer.wrap(getPassword()), getInstance().getInstanceID());
  public void setAccumuloConfigs(Job job) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/security/ColumnVisibility.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
f765888e3decac70571cf836e5300fb9a015b38e,server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousQuery.java,"      System.out.printf(""SRQ %d %s %d %d%n"", t1, new String(row), (t2 - t1), count);",Use isEmpty() to check whether the collection is empty or not.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/master/state/tables/TableObserver.java,"  void initialize(Map<String,TableState> tableIdToStateMap);
  
  void stateChanged(String tableId, TableState tState);
  
  void sessionExpired();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ccaad172643805d56f5dd46cbbc7dcd1a5519cbf,src/server/src/main/java/org/apache/accumulo/server/test/VerifyIngest.java,import org.apache.accumulo.cloudtrace.instrument.Trace;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
7942da1d204d271bff01e9e93208cdd67d0eefa3,server/src/main/java/org/apache/accumulo/server/tabletserver/mastermessage/TabletStatusMessage.java,"import org.apache.accumulo.core.security.thrift.TCredentials;
  public void send(TCredentials auth, String serverName, Iface client) throws TException, ThriftSecurityException {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/Fixture.java,package org.apache.accumulo.test.randomwalk;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
1039b9ec83b9f3f99e6606d4f2b0849bdab9eb79,server/src/main/java/org/apache/accumulo/server/tabletserver/NativeMap.java,"  private final ReadWriteLock rwLock;
  private final Lock rlock;
  private final Lock wlock;",Move this variable to comply with Java Code Conventions.
48c98ba2e3bea2b11621030693f5e37fc8dfa10d,src/core/src/main/java/org/apache/accumulo/core/client/impl/ServerClient.java,"    return getConnection(instance, true);
  }
  
  public static Pair<String,ClientService.Iface> getConnection(Instance instance, boolean preferCachedConnections) throws TTransportException {
      Pair<String,TTransport> pair = ThriftTransportPool.getInstance().getAnyTransport(servers, preferCachedConnections);",Do not forget to remove this deprecated code someday.
3b62690ceb7c98383e2231d82204aed90fb592ed,contrib/accumulo_sample/query/src/main/java/iterator/UniqFieldNameValueIterator.java,"import org.apache.commons.jexl2.Expression;
import org.apache.hadoop.io.Text;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;

import util.FieldIndexKeyParser;",Complete the task associated to this TODO comment.
7942da1d204d271bff01e9e93208cdd67d0eefa3,core/src/main/java/org/apache/accumulo/core/client/mock/MockInstance.java,"import org.apache.accumulo.core.security.thrift.TCredentials;
import org.apache.accumulo.core.security.tokens.AuthenticationToken;
    return getConnector(user, new PasswordToken(pass));
  public Connector getConnector(String principal, AuthenticationToken token) throws AccumuloException, AccumuloSecurityException {
      throw new AccumuloSecurityException(principal, SecurityErrorCode.BAD_CREDENTIALS);
  public Connector getConnector(TCredentials credential) throws AccumuloException, AccumuloSecurityException {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
99da5641c28784c7b717cce6749673863c2ec8cf,server/src/main/java/org/apache/accumulo/server/master/Master.java,"import org.apache.accumulo.core.security.Credentials;
              MetadataTableUtil.moveMetaDeleteMarkers(instance, SystemCredentials.get());
    Credentials systemCreds = SystemCredentials.get();
    watchers.add(new TabletGroupWatcher(this, new MetaDataStateStore(instance, systemCreds, this), null));
    watchers.add(new TabletGroupWatcher(this, new RootTabletStateStore(instance, systemCreds, this), watchers.get(0)));
    clientService = TServerUtils.startServer(getSystemConfiguration(), hostname, Property.MASTER_CLIENTPORT, processor, ""Master"",
        ""Master Client Service Handler"", null, Property.MASTER_MINTHREADS, Property.MASTER_THREADCHECK, Property.GENERAL_MAX_MESSAGE_SIZE).server;","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/util/DumpZookeeper.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
bd77fefdb146ef0dc9bf64b51fb8e8f43c10ce0d,core/src/main/java/org/apache/accumulo/core/gc/thrift/GCMonitorService.java,"    @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",300 duplicated blocks of code must be removed.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/file/keyfunctor/RowFunctor.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
public class RowFunctor implements KeyFunctor {
    
    @Override
    public org.apache.hadoop.util.bloom.Key transform(org.apache.accumulo.core.data.Key acuKey) {
        byte keyData[];
        
        ByteSequence row = acuKey.getRowData();
        keyData = new byte[row.length()];
        System.arraycopy(row.getBackingArray(), 0, keyData, 0, row.length());
        
        return new org.apache.hadoop.util.bloom.Key(keyData, 1.0);
    }
    
    @Override
    public Key transform(Range range) {
        if (isRangeInBloomFilter(range, PartialKey.ROW)) {
            return transform(range.getStartKey());
        }
        return null;
    }
    
    static boolean isRangeInBloomFilter(Range range, PartialKey keyDepth) {
        
        if (range.getStartKey() == null || range.getEndKey() == null) {
            return false;
        }
        
        if (range.getStartKey().equals(range.getEndKey(), keyDepth)) return true;
        
        // include everything but the deleted flag in the comparison...
        return range.getStartKey().followingKey(keyDepth).equals(range.getEndKey(), PartialKey.ROW_COLFAM_COLQUAL_COLVIS_TIME) && !range.isEndKeyInclusive();
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/constraints/Constraint.java,"  
  public interface Environment {
    KeyExtent getExtent();
    String getUser();
    Authorizations getAuthorizations();
  }
  
  /**
   * Implementers of this method should return a short one sentence description of what a given violation code means.
   * 
   */
  
  String getViolationDescription(short violationCode);
  
  /**
   * Checks a mutation for constrain violations. If the mutation contains no violations, then the implementation should return null. Otherwise it should return
   * a list of violation codes.
   * 
   * Violation codes must be non negative. Negative violation codes are reserved for system use.
   * 
   */
  
  List<Short> check(Environment env, Mutation mutation);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
74a2417d8b338d9a36e5da51d80fb4563a3113d4,src/core/src/main/java/org/apache/accumulo/core/client/ZooKeeperInstance.java,"  /**
   * Given a zooCache and instanceId, look up the instance name.
   * 
   * @param zooCache
   * @param instanceId
   * @return the instance name
   */",Move this constructor to comply with Java Code Conventions.
9edf2a6c43ccb90159b5807f01e35787577f6d9e,src/server/src/main/java/org/apache/accumulo/server/master/state/RootTabletStateStore.java,"import org.apache.accumulo.core.client.Instance;
import org.apache.accumulo.core.security.thrift.AuthInfo;
  public RootTabletStateStore(Instance instance, AuthInfo auths, CurrentState state) {
    super(instance, auths, state);
    return new MetaDataTableScanner(instance, auths, range, state);",Move this constructor to comply with Java Code Conventions.
d631e78ce6361c82ee6de2e98ecf3b0a14b33858,test/src/main/java/org/apache/accumulo/test/randomwalk/bulk/BulkPlusOne.java,"      state.set(""bulkImportSuccess"", ""false"");",Either log or rethrow this exception.
6e7269ddfffb3e35824f5de87ac93304e39d52cf,minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloConfig.java,"      siteConfig.put(key, ""0"");",Either log or rethrow this exception.
f1f795b85692fa0ed51750f14606d7cf837338cc,src/core/src/main/java/org/apache/accumulo/core/iterators/user/RegExFilter.java,    RegExFilter result = (RegExFilter) super.deepCopy(env);,Define and throw a dedicated exception instead of using a generic one.
897613840017ed4ed636efa1c988df830ab05b92,server/src/main/java/org/apache/accumulo/server/client/HdfsZooInstance.java,"  public Connector getConnector(org.apache.accumulo.core.security.thrift.AuthInfo auth) throws AccumuloException, AccumuloSecurityException {",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
63401308a8fc8ff7ad54afa3e8bb2d93e1971a74,server/src/main/java/org/apache/accumulo/server/test/functional/SparseColumnFamilyTest.java,"        if (!""001"".equals(entry.getKey().getColumnFamilyData().toString())) {
          throw new Exception();
        }","Use ""Integer.toString"" instead."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/test/CreateMapFiles.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    public static void main(String[] args) {
        long splitSize = Math.round((end - start) / (double) numsplits);
        while (currEnd <= end && currStart < currEnd) {
            Runnable r = new Runnable() {
                
                        TestIngest.main(tia.split("" ""));
                    }
        while (!threadPool.isTerminated())
            try {
                threadPool.awaitTermination(1, TimeUnit.HOURS);
            } catch (InterruptedException e) {
                throw new RuntimeException(e);
            }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2496efb93eacc4bd6695cdeaeb4d9acd2917bd91,server/src/main/java/org/apache/accumulo/server/client/ClientServiceHandler.java,"    try {
      return security.authenticateUser(new InstanceTokenWrapper(credentials), TokenHelper.unwrap(token));
    } catch (ThriftSecurityException e) {
      log.error(e);
      throw e;
    }
  public void changeAuthorizations(TInfo tinfo, ThriftInstanceTokenWrapper credentials, String user, List<ByteBuffer> authorizations)
      throws ThriftSecurityException {
  public void grantTablePermission(TInfo tinfo, ThriftInstanceTokenWrapper credentials, String user, String tableName, byte permission)
      throws ThriftSecurityException, ThriftTableOperationException {
  public void revokeTablePermission(TInfo tinfo, ThriftInstanceTokenWrapper credentials, String user, String tableName, byte permission)
      throws ThriftSecurityException, ThriftTableOperationException {
  public boolean hasTablePermission(TInfo tinfo, ThriftInstanceTokenWrapper credentials, String user, String tableName, byte tblPerm)
      throws ThriftSecurityException, ThriftTableOperationException {
          return BulkImporter.bulkLoad(new ServerConfiguration(instance).getConfiguration(), instance, credentials, tid, tableId, files, errorDir, setTime);
  ","Remove this call to ""exit"" or ensure it is really required."
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/monitor/util/celltypes/CellType.java,"  private boolean sortable = true;
  
  abstract public String alignment();
  
  abstract public String format(Object obj);
  
  public final void setSortable(boolean sortable) {
    this.sortable = sortable;
  }
  
  public final boolean isSortable() {
    return sortable;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/XMLServlet.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
c23ab5a8f436296381c455d509d2b9cb8965aa23,start/src/test/java/org/apache/accumulo/start/classloader/vfs/providers/VfsClassLoaderTest.java,package org.apache.accumulo.start.classloader.vfs.providers;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,core/src/main/java/org/apache/accumulo/core/client/Instance.java,"import org.apache.accumulo.core.security.tokens.SecurityToken;
   * @deprecated @since 1.5, use {@link #getConnector(SecurityToken)}
  public abstract Connector getConnector(SecurityToken token) throws AccumuloException, AccumuloSecurityException;
   *           @deprecated @since 1.5, use {@link #getConnector(SecurityToken)}
   *           @deprecated @since 1.5, use {@link #getConnector(SecurityToken)}",Either log or rethrow this exception.
9e2ebc51b9cf1b2e58dac56ce49caf916a1cfeec,src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java,"/**
 * A Combiner that interprets Values as Longs and returns their sum.
 */",1 duplicated blocks of code must be removed.
7a69a7770bac8b72b27ef1e6d27b77081fc2d40c,core/src/test/java/org/apache/accumulo/core/client/mock/MockConnectorTest.java,"    c.securityOperations().createUser(""greg"", new byte[] {});",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
96ab37aca0d893ceeef69a35c3d737acb025bffc,src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsImpl.java,"    Map<String,String> opts = IteratorUtil.generateInitialTableProperties(limitVersion);",Either log or rethrow this exception.
04e1ae88fbd4882726a85959e4df7699d727f349,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaPartitionedIngester.java,"    partitionerJob.setOutputKeyClass(Text.class);
    partitionerJob.setOutputValueClass(Article.class);
    configureIngestJob(ingestJob);
    
    ingestJob.setMapperClass(WikipediaPartitionedMapper.class);
    ingestJob.setNumReduceTasks(0);
    

  protected void configureIngestJob(Job job) {
    job.setJarByClass(WikipediaPartitionedIngester.class);
    job.setInputFormatClass(WikipediaInputFormat.class);
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,test/src/main/java/org/apache/accumulo/test/functional/RunTests.java," * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
  
  
  
  
    
    
  
    
    
    
    
    
    
    
  
  ",Replace all tab characters in this file by sequences of white-spaces.
42673bf9da5e79a4780556acae005c8864c91d85,core/src/main/java/org/apache/accumulo/core/util/shell/commands/ScanCommand.java,"import org.apache.accumulo.core.Constants;
      auths = ScanCommand.parseAuthorizations(cl.getOptionValue(scanOptAuths.getOpt()));
  static Authorizations parseAuthorizations(final String field) {
    if (field == null || field.isEmpty()) {
      return Constants.NO_AUTHS;
    }
    return new Authorizations(field.split("",""));
  }
  ",1 duplicated blocks of code must be removed.
c5cead221a8e46019564b2ceaad129b976fe1aa0,core/src/main/java/org/apache/accumulo/core/cli/ClientOpts.java,"import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Properties;
import com.beust.jcommander.DynamicParameter;
  @DynamicParameter(names = ""-l"",
      description = ""login properties in the format key=value. Reuse -l for each property (prompt for properties if this option is missing"")
  public Map<String,String> loginProps = new LinkedHashMap<String,String>();
  
    if (!loginProps.isEmpty()) {
      Properties props = new Properties();
      for (Entry<String,String> loginOption : loginProps.entrySet())
        props.put(loginOption.getKey(), loginOption.getValue());
      
      try {
        System.out.println(props);
        return getInstance().getAuthenticator().login(props);
      } catch (AccumuloSecurityException e) {
        throw new RuntimeException(e);
      } catch (AccumuloException e) {
        throw new RuntimeException(e);
      }
    
    if (securePassword != null)
      return new PasswordToken(securePassword.value);
    
    if (password != null)
      return new PasswordToken(password.value);
    
    return null;",Define and throw a dedicated exception instead of using a generic one.
e9645e91a04345b482865968b438fc5eddfed0b3,core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsImpl.java,"import org.apache.accumulo.core.util.ByteBufferUtil;
      String tableName = ByteBufferUtil.toString(args.get(0));
      String tableInfo = Tables.getPrintableTableInfoFromName(instance, tableName);
      throw new AccumuloSecurityException(e.user, e.code, tableInfo, e);",Either log or rethrow this exception.
74dae989d399b3e86bc8cb1d37152de548ca2f45,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/InputFormatBase.java,"      FileSystem fs = FileSystem.get(conf);
      Path file = new Path(fs.getWorkingDirectory(), conf.get(""mapred.job.name"") + System.currentTimeMillis() + "".ranges"");
      conf.set(RANGES, file.toString());
      FSDataOutputStream fos = fs.create(file, false);
      fs.setPermission(file, new FsPermission(FsAction.ALL, FsAction.NONE, FsAction.NONE));
      fs.deleteOnExit(file);
      
      fos.writeInt(ranges.size());
        r.write(fos);
      fos.close();
      
      DistributedCache.addCacheFile(file.toUri(), conf);
    } catch (IOException e) {
      throw new RuntimeException(""Unable to write ranges to file"", e);
    FileSystem fs = FileSystem.get(conf);
    String rangePath = conf.get(RANGES);
    if (rangePath == null)
      return ranges;
    Path file = new Path(rangePath);
    
    FSDataInputStream fdis = fs.open(file);
    int numRanges = fdis.readInt();
    while (numRanges > 0) {
      Range r = new Range();
      r.readFields(fdis);
      ranges.add(r);
      numRanges--;
    fdis.close();",Return empty string instead.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/security/AlterTable.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
5d044b8d9daa0ce6c32152c89e4d86ff65d0dc53,core/src/main/java/org/apache/accumulo/core/security/CredentialHelper.java,"  public static TCredentials fromByteArray(byte[] serializedCredential) throws AccumuloSecurityException {
    if (serializedCredential == null)
      return null;
      td.deserialize(toRet, serializedCredential);",Remove this hard-coded password.
5e14ecff940065c80ed5975124552c9014cc3442,src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsImpl.java,"      opts = IteratorUtil.generateInitialTableProperties();
  public void addAggregators(String tableName, List<? extends org.apache.accumulo.core.iterators.conf.PerColumnIteratorConfig> aggregators)
      throws AccumuloSecurityException, TableNotFoundException,
      for (Entry<String,String> entry : IteratorUtil.generateAggTableProperties(aggregators).entrySet()) {","Remove this unused private ""match"" method."
30e097294d334bf08cd81652e1633ae80fe74798,src/core/src/test/java/org/apache/accumulo/core/iterators/aggregation/conf/AggregatorConfigurationTest.java,"/**
 * @deprecated since 1.4
 */",Either log or rethrow this exception.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/start/src/main/java/org/apache/accumulo/start/TestMain.java,"package org.apache.accumulo.start;


public class TestMain {
	public static void main(String[] args) {
	    if (args.length > 0) {
	        if (args[0].equals(""success""))
	            System.exit(0);
	        if (args[0].equals(""throw""))
	            throw new RuntimeException(""This is an exception"");
	    }
        System.exit(-1);
    }
}",Return empty string instead.
71d9e509afdee1d5d2eb214dc6a9aa4663ddb5ab,core/src/main/java/org/apache/accumulo/core/client/impl/ThriftScanner.java,"  public static final Map<TabletType,Set<String>> serversWaitedForWrites = new EnumMap<TabletType,Set<String>>(TabletType.class);","Make this member ""protected""."
2ad672a5172124625d719c38c163ab68846c75a6,core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloOutputFormat.java,"import org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode;
import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;
import org.apache.accumulo.core.client.security.tokens.PasswordToken;",Move this constructor to comply with Java Code Conventions.
9b0751a7e22c8ba88ae5f78589541b041055b09b,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/StringSummation.java," * @deprecated since 1.4, replaced by {@link org.apache.accumulo.core.iterators.user.SummingCombiner} with
 *             {@link org.apache.accumulo.core.iterators.LongCombiner.Type#STRING}",Do not forget to remove this deprecated code someday.
2ad672a5172124625d719c38c163ab68846c75a6,core/src/main/java/org/apache/accumulo/core/client/ZooKeeperInstance.java,"import org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException;
import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;
import org.apache.accumulo.core.client.security.tokens.PasswordToken;",Move this constructor to comply with Java Code Conventions.
0608e32f8b09f926e40677d1e23ccedd0d6e088d,server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"import org.apache.accumulo.core.util.LocalityGroupUtil.LocalityGroupConfigurationError;
      try {
        memTable = new InMemoryMap(acuTableConf);
      } catch (LocalityGroupConfigurationError e) {
        throw new RuntimeException(e);
      }
      try {
        memTable = new InMemoryMap(acuTableConf);
      } catch (LocalityGroupConfigurationError e) {
        throw new RuntimeException(e);
      }",Either log or rethrow this exception.
2db5ce6186e32c451328154b024951cc5090505f,server/src/main/java/org/apache/accumulo/server/problems/ProblemReports.java,import org.apache.accumulo.core.util.NamingThreadFactory;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
527a100ef5de9c51fb17b0b340f036ee4cd98590,src/core/src/main/java/org/apache/accumulo/core/master/thrift/RecoveryStatus.java,"@SuppressWarnings(""all"") public class RecoveryStatus implements org.apache.thrift.TBase<RecoveryStatus, RecoveryStatus._Fields>, java.io.Serializable, Cloneable {",13 duplicated blocks of code must be removed.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/zookeeper/ZooCache.java,"package org.apache.accumulo.server.zookeeper;

import org.apache.accumulo.core.conf.AccumuloConfiguration;
import org.apache.accumulo.core.conf.Property;
import org.apache.zookeeper.Watcher;


public class ZooCache extends org.apache.accumulo.core.zookeeper.ZooCache {
    public ZooCache() {
        this(null);
    }
    
    public ZooCache(Watcher watcher) {
        super(ZooReaderWriter.getInstance(), watcher);
    }
    
    public ZooCache(AccumuloConfiguration conf, Watcher watcher) {
        super(conf.get(Property.INSTANCE_ZK_HOST),
                (int)conf.getTimeInMillis(Property.INSTANCE_ZK_TIMEOUT),
                watcher);
    }
}",Return empty string instead.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/lib/partition/KeyRangePartitioner.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
0811c7958ecc1a9a2c8f80702273856f1cd2eab8,src/server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousIngest.java,"import org.apache.accumulo.cloudtrace.instrument.CountSampler;
import org.apache.accumulo.cloudtrace.instrument.Trace;
import org.apache.accumulo.cloudtrace.instrument.Tracer;
import org.apache.accumulo.cloudtrace.instrument.receivers.ZooSpanClient;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
446a37a9795f2df7adc841154ca05add79cf286e,server/src/main/java/org/apache/accumulo/server/security/handler/ZKAuthorizor.java,import org.apache.accumulo.core.metadata.MetadataTable;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/file/blockfile/cache/HeapSize.java,"/**
 * Copyright 2009 The Apache Software Foundation
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.file.blockfile.cache;

/**
 * Implementations can be asked for an estimate of their size in bytes.
 * <p>
 * Useful for sizing caches.  Its a given that implementation approximations
 * do not account for 32 vs 64 bit nor for different VM implementations.
 * <p>
 * An Object's size is determined by the non-static data members in it,
 * as well as the fixed {@link Object} overhead.
 * <p>
 * For example:
 * <pre>
 * public class SampleObject implements HeapSize {
 *   
 *   int [] numbers;
 *   int x;
 * }
 * </pre>
 */
public interface HeapSize {
  /**
   * @return Approximate 'exclusive deep size' of implementing object.  Includes
   * count of payload and hosting object sizings.
  */
  public long heapSize();
  
}",Return empty string instead.
8025e96e0b108063f3028eb06b78847de2fa95d4,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/parser/QueryEvaluator.java,"package org.apache.accumulo.examples.wikisearch.parser;
import org.apache.accumulo.examples.wikisearch.function.QueryFunctions;
import org.apache.accumulo.examples.wikisearch.jexl.Arithmetic;
import org.apache.accumulo.examples.wikisearch.parser.EventFields.FieldValue;
import org.apache.accumulo.examples.wikisearch.parser.QueryParser.QueryTerm;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
462e0393703c523ab5bdbc58ef7182b1809a5c36,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ScanCommand.java,"  private Option scanOptAuths, scanOptStartRow, scanOptEndRow, scanOptRow, scanOptColumns, disablePaginationOpt, tableOpt, showFewOpt;
    if ((cl.hasOption(scanOptStartRow.getOpt()) || cl.hasOption(scanOptEndRow.getOpt())) && cl.hasOption(scanOptRow.getOpt())) {
      // did not see a way to make commons cli do this check... it has mutually exclusive options but does not support the or
      throw new IllegalArgumentException(""Options -"" + scanOptRow.getOpt() + "" AND (-"" + scanOptStartRow.getOpt() + "" OR -"" + scanOptEndRow.getOpt()
          + "") are mutally exclusive "");
    }

    if (cl.hasOption(scanOptRow.getOpt())) {
      return new Range(new Text(cl.getOptionValue(scanOptRow.getOpt())));
    } else {
      Text startRow = cl.hasOption(scanOptStartRow.getOpt()) ? new Text(cl.getOptionValue(scanOptStartRow.getOpt())) : null;
      Text endRow = cl.hasOption(scanOptEndRow.getOpt()) ? new Text(cl.getOptionValue(scanOptEndRow.getOpt())) : null;
      return new Range(startRow, endRow);
    }
    scanOptRow = new Option(""r"", ""row"", true, ""row to scan"");
    scanOptRow.setArgName(""row"");
    o.addOption(scanOptRow);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2db5ce6186e32c451328154b024951cc5090505f,server/src/main/java/org/apache/accumulo/server/test/performance/thrift/NullTserver.java,"    
    /*
     * (non-Javadoc)
     * 
     * @see org.apache.accumulo.core.tabletserver.thrift.TabletClientService.Iface#removeLogs(org.apache.accumulo.cloudtrace.thrift.TInfo,
     * org.apache.accumulo.core.security.thrift.AuthInfo, java.util.List)
     */
    @Override
    public void removeLogs(TInfo tinfo, AuthInfo credentials, List<String> filenames) throws TException {
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
789c920404561521948f38642c142ec99065f50e,server/src/main/java/org/apache/accumulo/server/master/Master.java,      System.exit(1);,Replace this use of System.out or System.err by a logger.
446a37a9795f2df7adc841154ca05add79cf286e,test/src/test/java/org/apache/accumulo/test/functional/ReadWriteIT.java,"import org.apache.accumulo.core.metadata.MetadataTable;
import org.apache.accumulo.core.metadata.schema.MetadataSchema.TabletsSection.DataFileColumnFamily;
  @Test(timeout = 60 * 1000)
  
  public static String[] args(String... args) {
  @Test(timeout = 60 * 1000)
  @Test(timeout = 60 * 1000)
  @Test(timeout = 60 * 1000)
  
        @Override
  public static Text t(String s) {
    return new Text(s);
  }
  @Test(timeout = 60 * 1000)
    // verify that locality groups can make look-ups faster
    for (@SuppressWarnings(""unused"")
    Entry<Key,Value> entry : scanner)
    for (@SuppressWarnings(""unused"")
    Entry<Key,Value> entry : scanner)
  @Test(timeout = 60 * 1000)
    Map<String,Set<Text>> groups = new TreeMap<String,Set<Text>>();
    bscanner.fetchColumnFamily(DataFileColumnFamily.NAME);
    for (Entry<Key,Value> entry : bscanner) {
  @Test(timeout = 90 * 1000)
    String[] config = new String[] {""lg1:colf"", null, ""lg1:colf,xyz"", ""lg1:colf,xyz;lg2:c1,c2""};
      ingest(connector, ROWS * (i + 1), 1, 50, ROWS * i);
      verify(connector, 0, 1, 50, ROWS * (i + 1));
    config = new String[] {""lg1:colf"", null, ""lg1:colf,xyz"", ""lg1:colf;lg2:colf"",};
  
    Map<String,Set<Text>> groups = new TreeMap<String,Set<Text>>();
      for (String group : cfg.split("";"")) {
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b36658e5656da05e6ba2f948e66aebc822a9dab4,core/src/test/java/org/apache/accumulo/core/security/AuthorizationsTest.java,"  @Test
  public void testSerialization() {
    Authorizations a1 = new Authorizations(""a"", ""b"");
    Authorizations a2 = new Authorizations(""b"", ""a"");
    
    assertEquals(a1, a2);
    assertEquals(a1.serialize(), a2.serialize());
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/test/java/org/apache/accumulo/core/util/EscapeTokenizerTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
c23ab5a8f436296381c455d509d2b9cb8965aa23,start/src/test/java/org/apache/accumulo/start/classloader/vfs/AccumuloReloadingVFSClassLoaderTest.java,"    
    cl = new AccumuloReloadingVFSClassLoader(TEST_DIR.toUri().toString(), vfs, ClassLoader.getSystemClassLoader());
    
    cl = new AccumuloReloadingVFSClassLoader(TEST_DIR.toUri().toString(), vfs, ClassLoader.getSystemClassLoader(), 1000);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f4ace5867dfc33a678fb84c18394183e00416a82,test/src/test/java/org/apache/accumulo/test/TestAccumulo1235.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",1 duplicated blocks of code must be removed.
f765888e3decac70571cf836e5300fb9a015b38e,server/src/main/java/org/apache/accumulo/server/test/EstimateInMemMapOverhead.java,"    System.out.printf(""%30s | %,10d | %6.2fGB | %6.2f | %6.2f | %6.2f | %6.2f%s%n"", getName(), getNumPasses(), memSize / (1024 * 1024 * 1024.0),",Use isEmpty() to check whether the collection is empty or not.
6a5500a5b3f34b26386877e332973e7b926aa4ce,core/src/test/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormatTest.java,"import java.nio.charset.Charset;
import org.apache.accumulo.core.security.thrift.tokens.PasswordToken;
      AccumuloInputFormat.setConnectorInfo(job, user, new PasswordToken().setPassword(pass.getBytes(Charset.forName(""UTF-8""))));
      AccumuloOutputFormat.setConnectorInfo(job, user, new PasswordToken().setPassword(pass.getBytes(Charset.forName(""UTF-8""))));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
bfc44fd328c471d06b480835ba826b706dcf6816,core/src/test/java/org/apache/accumulo/core/client/mock/MockTableOperationsTest.java,"    BatchScanner s = c.createBatchScanner(tableName, Authorizations.EMPTY, 1);
    Scanner s = connector.createScanner(""test"", Authorizations.EMPTY);","Remove this unused method parameter ""range""."
ee3a264e704c17de90c186065f50a0775ce4ad10,src/server/src/main/java/org/apache/accumulo/server/util/CleanZookeeper.java,"import org.apache.accumulo.server.zookeeper.IZooReaderWriter;
    IZooReaderWriter zk = ZooReaderWriter.getInstance();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/test/java/org/apache/accumulo/core/data/MutationTest.java,"  
  
  
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
  
      
      
    
        
      
  
  
  
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
  
    
    
    
    
    
    
    
  
  
  
    long oldSize = dos.size(); 
    
    
    
    
  
    
    
    
    ",Replace all tab characters in this file by sequences of white-spaces.
9c355f10d6dd3099d6d25578ada1779ce05ff04f,fate/src/main/java/org/apache/accumulo/fate/AgeOffStore.java," * This store removes Repos, in the store it wraps, that are in a finished or new state for more than a configurable time period.
 * No external time source is used. It starts tracking idle time when its created.
  
  
    
            default:
              break;
    
          default:
            break;
  
    
      default:
        break;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/LongSummation.java,"  private static final Logger log = Logger.getLogger(LongSummation.class);
  long sum = 0;
  
  public Value aggregate() {
    return new Value(longToBytes(sum));
  }
  
  public void collect(Value value) {
    try {
      sum += bytesToLong(value.get());
    } catch (IOException e) {
      log.error(LongSummation.class.getSimpleName() + "" trying to convert bytes to long, but byte array isn't length 8"");
  }
  
  public void reset() {
    sum = 0;
  }
  
  public static long bytesToLong(byte[] b) throws IOException {
    return bytesToLong(b, 0);
  }
  
  public static long bytesToLong(byte[] b, int offset) throws IOException {
    if (b.length < offset + 8) throw new IOException(""trying to convert to long, but byte array isn't long enough, wanted "" + (offset + 8) + "" found ""
        + b.length);
    return (((long) b[offset + 0] << 56) + ((long) (b[offset + 1] & 255) << 48) + ((long) (b[offset + 2] & 255) << 40) + ((long) (b[offset + 3] & 255) << 32)
        + ((long) (b[offset + 4] & 255) << 24) + ((b[offset + 5] & 255) << 16) + ((b[offset + 6] & 255) << 8) + ((b[offset + 7] & 255) << 0));
  }
  
  public static byte[] longToBytes(long l) {
    byte[] b = new byte[8];
    b[0] = (byte) (l >>> 56);
    b[1] = (byte) (l >>> 48);
    b[2] = (byte) (l >>> 40);
    b[3] = (byte) (l >>> 32);
    b[4] = (byte) (l >>> 24);
    b[5] = (byte) (l >>> 16);
    b[6] = (byte) (l >>> 8);
    b[7] = (byte) (l >>> 0);
    return b;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/master/tableOps/CreateTable.java,"  public Repo<Master> call(long tid, Master master) throws Exception {
      Instance instance = master.getInstance();
  public void undo(long tid, Master master) throws Exception {
    Instance instance = master.getInstance();
  public Repo<Master> call(long tid, Master master) throws Exception {
      tableInfo.tableId = Utils.getNextTableId(tableInfo.tableName, master.getInstance());","Remove this unused private ""appendProp"" method."
215cdfa62328a6106912d3fd894f6c7858061bc8,src/server/src/main/java/org/apache/accumulo/server/security/ZKAuthenticator.java,"      try {
        return Tool.convertAuthorizations(zooCache.get(ZKUserPath + ""/"" + user + ZKUserAuths));
      } catch (IllegalArgumentException iae) {
        // User was deleted between checking existance and grabbing auths.
      }

      try {
        return Tool.convertTablePermissions(serializedPerms).contains(permission);
      } catch (IllegalArgumentException iae) {
        throw new AccumuloSecurityException(user, SecurityErrorCode.USER_DOESNT_EXIST); // user doesn't exist
      }
        Set<SystemPermission> perms = Tool.convertSystemPermissions(zooCache.get(ZKUserPath + ""/"" + user + ZKUserSysPerms));
        return;
      } catch (IllegalArgumentException iae) {
        // User was deleted between checking existance and grabbing auths.
        // Exception at end handles this
    }
    throw new AccumuloSecurityException(credentials.user, SecurityErrorCode.USER_DOESNT_EXIST); // user doesn't exist



        Set<SystemPermission> sysPerms = Tool.convertSystemPermissions(zooCache.get(ZKUserPath + ""/"" + user + ZKUserSysPerms));
      } catch (IllegalArgumentException iae) {
        // User was deleted between checking and pulling from the zooCache
        throw new AccumuloSecurityException(credentials.user, SecurityErrorCode.USER_DOESNT_EXIST);






",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a63607a89356ef85af81e377b289fafe413687c5,server/src/main/java/org/apache/accumulo/server/gc/GarbageCollectWriteAheadLogs.java,"import org.apache.accumulo.cloudtrace.instrument.Tracer;
import org.apache.accumulo.core.tabletserver.thrift.TabletClientService.Client;
        Client tserver = null;
          tserver.removeLogs(Tracer.traceInfo(), SecurityConstants.getSystemCredentials(), entry.getValue());","Immediately return this expression instead of assigning it to the temporary variable ""client""."
6a501c090876bb378ae671711f894f5f2845d652,server/src/main/java/org/apache/accumulo/server/security/handler/ZKPermHandler.java,"  private String ZKTablePath;
    ZKTablePath = ZKSecurityTool.getInstancePath(instanceId) + ""/tables"";
  public boolean hasTablePermission(String user, String table, TablePermission permission) throws TableNotFoundException {
        // maybe the table was just deleted?
        try {
          // check for existence:
          ZooReaderWriter.getRetryingInstance().getData(ZKTablePath + ""/"" + table, null);
          // it's there, you don't have permission
          return false;
        } catch (InterruptedException ex) {
          log.warn(""Unhandled InterruptedException, failing closed for table permission check"", e);
          return false;
        } catch (KeeperException ex) {
          // not there, throw an informative exception
          if (e.code() == Code.NONODE) {
            throw new TableNotFoundException(null, table, ""while checking permissions"");
          }
          log.warn(""Unhandled InterruptedException, failing closed for table permission check"", e);
        }",Either log or rethrow this exception.
cd08a7a18249090e7e9d941f7b10b4b0a0eb6d71,src/core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java,    //Not for client use,"Define a constant instead of duplicating this literal ""org.apache.accumulo.core.iterators.WholeRowIterator"" 4 times."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    @Override
    public Long typedReduce(Key key, Iterator<Long> iter) {
        long sum = 0;
        while (iter.hasNext()) {
            sum = safeAdd(sum, iter.next());
        }
        return sum;
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
86066e645d2ebe86659fa699482ab1a523286bc5,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/GrantCommand.java,import org.apache.accumulo.core.util.shell.Token;,Replace all tab characters in this file by sequences of white-spaces.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/query/Query.java,"package org.apache.accumulo.examples.wikisearch.query;
import org.apache.accumulo.examples.wikisearch.logic.ContentLogic;
import org.apache.accumulo.examples.wikisearch.logic.QueryLogic;
import org.apache.accumulo.examples.wikisearch.sample.Results;
  private static final String XSL = ""/accumulo-wikisearch/style.xsl"";","Rename ""table"" which hides the field declared at line 107."
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/tabletserver/metrics/TabletServerScanMetrics.java,"package org.apache.accumulo.server.tabletserver.metrics;

import javax.management.ObjectName;

import org.apache.accumulo.server.metrics.AbstractMetricsImpl;


public class TabletServerScanMetrics extends AbstractMetricsImpl implements TabletServerScanMetricsMBean {

    static final org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(TabletServerScanMetrics.class);

    public static final String METRICS_PREFIX = ""tserver.scan"";
    
    public static ObjectName OBJECT_NAME = null;
    
	public TabletServerScanMetrics() {
		super();
		reset();
		try {
			OBJECT_NAME = new ObjectName(""accumulo.server.metrics:service=TServerInfo,name=TabletServerScanMetricsMBean,instance=""+Thread.currentThread().getName());
		} catch (Exception e) {
			log.error(""Exception setting MBean object name"", e);
		}
	}

	@Override
	protected ObjectName getObjectName() {
		return OBJECT_NAME;
	}
	
	@Override
	protected String getMetricsPrefix() {
		return METRICS_PREFIX;
	}

	public long getResultAvgSize() { return this.getMetricAvg(resultSize); }
	public long getResultCount() { return this.getMetricCount(resultSize); }
	public long getResultMaxSize() { return this.getMetricMax(resultSize); }
	public long getResultMinSize() { return this.getMetricMin(resultSize); }
	public long getScanAvgTime() { return this.getMetricAvg(scan); }
	public long getScanCount() { return this.getMetricCount(scan); }
	public long getScanMaxTime() { return this.getMetricMax(scan); }
	public long getScanMinTime() { return this.getMetricMin(scan); }
	public void reset() {
		createMetric(scan);
		createMetric(resultSize);
	}

}",Return empty string instead.
a450ac2fa8bc20dd8406c02be88dda2f87f9dc26,core/src/main/java/org/apache/accumulo/core/client/mock/MockBatchScanner.java,"import org.apache.accumulo.core.client.mock.MockScanner.RangeFilter;
import org.apache.accumulo.core.iterators.IteratorEnvironment;
    public RangesFilter deepCopy(IteratorEnvironment env) {
      return new RangesFilter(getSource().deepCopy(env), ranges);
    }
    
    public RangesFilter(SortedKeyValueIterator<Key,Value> iterator, List<Range> ranges) {
      SortedKeyValueIterator<Key,Value> i = new RangesFilter(new SortedMapIterator(table.table), ranges);
        i = createFilter(i);",Move this constructor to comply with Java Code Conventions.
1c44069a35a1acfb2b806e1103c1992190c389eb,server/src/main/java/org/apache/accumulo/server/master/Master.java,"import org.apache.accumulo.core.client.admin.TableOperationsImpl;
        if (value == null || value.isEmpty()) {
            if (entry.getKey().startsWith(TableOperationsImpl.CLONE_EXCLUDE_PREFIX)) {
              propertiesToExclude.add(entry.getKey().substring(TableOperationsImpl.CLONE_EXCLUDE_PREFIX.length()));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
057b8d6cb0ccbf472067a755d76eba7ee2e3fd71,test/src/test/java/org/apache/accumulo/test/functional/RestartStressIT.java,"    cfg.useMiniDFS(true);
  @Test(timeout=600*1000)
    for (int i = 0; i < 2; i++) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/fate/Repo.java,"package org.apache.accumulo.server.fate;

import java.io.Serializable;

/**
 * Repeatable persisted operation
 *
 */
public interface Repo<T> extends Serializable {
	long isReady(long tid, T environment) throws Exception;
	Repo<T> call(long tid, T environment) throws Exception;
	void undo(long tid, T environment) throws Exception;
    String getDescription();
    
    //this allows the last fate op to return something to the user
    String getReturn();
}",Return empty string instead.
56cd6b7861a0dbfc21fa08f44d11210b45f0fd96,core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java,"  private Option verboseOpt, forceOpt, sizeOpt, allOpt;
    boolean all = false;
    if (cl.hasOption(allOpt.getOpt())) {
      force = true;
    }
    if (startRow == null && endRow == null && size < 0 && all) {
    allOpt = new Option("""", ""all"", false, ""allow an entire table to be merged into one tablet without prompting the user for confirmation"");
    o.addOption(allOpt);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2bd8f1b07c42fcbf8742ba08e83dddc264a4aa1b,examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/RowHash.java,"    ToolRunner.run(CachedConfiguration.getInstance(), new RowHash(), args);",Either log or rethrow this exception.
99da5641c28784c7b717cce6749673863c2ec8cf,core/src/main/java/org/apache/accumulo/core/metadata/ServicerForRootTable.java,"import org.apache.accumulo.core.security.Credentials;
  public ServicerForRootTable(Instance instance, Credentials credentials) {","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
f89c45bf477393978fd175c6c4ed6db04fffa790,core/src/test/java/org/apache/accumulo/core/util/shell/command/FormatterCommandTest.java,import org.junit.Assert;,6 duplicated blocks of code must be removed.
fb39453e79e370b32bd5c8f39ec9c5a97cc64c48,core/src/main/java/org/apache/accumulo/core/client/impl/MetadataLocationObtainer.java,"import org.apache.accumulo.core.client.impl.TabletLocator.TabletLocations;
import org.apache.accumulo.core.util.Pair;
  public TabletLocations lookupTablet(TabletLocation src, Text row, Text stopRow, TabletLocator parent) throws AccumuloSecurityException,

      ArrayList<TabletLocation> list = new ArrayList<TabletLocation>();

      Pair<SortedMap<KeyExtent,Text>,List<KeyExtent>> metadata = MetadataTable.getMetadataLocationEntries(results);
      for (Entry<KeyExtent,Text> entry : metadata.getFirst().entrySet()) {
      return new TabletLocations(list, metadata.getSecond());

    return null;
    SortedMap<KeyExtent,Text> metadata = MetadataTable.getMetadataLocationEntries(results).getFirst();",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
48e331cc2d55a37421b5dd7bbb45e91657ea811f,test/src/main/java/org/apache/accumulo/test/randomwalk/shard/ExportIndex.java,"    HashSet<Text> splits1 = new HashSet<Text>(state.getConnector().tableOperations().listSplits(indexTableName));
    HashSet<Text> splits2 = new HashSet<Text>(state.getConnector().tableOperations().listSplits(tmpIndexTableName));",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/client/impl/BatchWriterImpl.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
public class BatchWriterImpl implements BatchWriter {
    
    private String table;
    private TabletServerBatchWriter bw;
    
    public BatchWriterImpl(Instance instance, AuthInfo credentials, String table, long maxMemory, long maxLatency, int maxWriteThreads) {
        ArgumentChecker.notNull(instance, credentials, table);
        this.table = table;
        this.bw = new TabletServerBatchWriter(instance, credentials, maxMemory, maxLatency, maxWriteThreads);
    }
    
    @Override
    public void addMutation(Mutation m) throws MutationsRejectedException {
        ArgumentChecker.notNull(m);
        bw.addMutation(table, m);
    }
    
    @Override
    public void addMutations(Iterable<Mutation> iterable) throws MutationsRejectedException {
        ArgumentChecker.notNull(iterable);
        bw.addMutation(table, iterable.iterator());
    }
    
    @Override
    public void close() throws MutationsRejectedException {
        bw.close();
    }
    
    @Override
    public void flush() throws MutationsRejectedException {
        bw.flush();
    }
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
8915f3cea307f8dc7dece470c4027ce6114179fe,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/bulk/Verify.java,"import java.util.Iterator;
import org.apache.accumulo.core.client.RowIterator;
    
    scanner.clearColumns();
    scanner.fetchColumnFamily(BulkPlusOne.MARKER_CF);
    RowIterator rowIter = new RowIterator(scanner);
    
    while (rowIter.hasNext()) {
      Iterator<Entry<Key,Value>> row = rowIter.next();
      long prev = 0;
      Text rowText = null;
      while (row.hasNext()) {
        Entry<Key,Value> entry = row.next();
        
        if (rowText == null)
          rowText = entry.getKey().getRow();

        long curr = Long.valueOf(entry.getKey().getColumnQualifier().toString());

        if (curr - 1 != prev)
          throw new Exception(""Bad marker count "" + entry.getKey() + "" "" + entry.getValue() + "" "" + prev);
        
        if (!entry.getValue().toString().equals(""1""))
          throw new Exception(""Bad marker value "" + entry.getKey() + "" "" + entry.getValue());
        
        prev = curr;
      }
      
      if (BulkPlusOne.counter.get() != prev) {
        throw new Exception(""Row "" + rowText + "" does not have all markers "" + BulkPlusOne.counter.get() + "" "" + prev);
      }
    }
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/examples/src/main/java/org/apache/accumulo/examples/client/Flush.java,"package org.apache.accumulo.examples.client;

import org.apache.accumulo.core.client.Connector;
import org.apache.accumulo.core.client.ZooKeeperInstance;

/**
 * Simple example for using tableOperations() (like create, delete, flush, etc).
 */
public class Flush {

	public static void main(String[] args) {
		if (args.length != 5)
		{
		    System.err.println(""Usage: accumulo accumulo.examples.client.Flush <instance name> <zoo keepers> <username> <password> <tableName>"");
			return;
		}
		String instanceName = args[0];
        String zooKeepers = args[1];
        String user = args[2];
        String password = args[3];
        String table = args[4];
	
		Connector connector;
		try {
			ZooKeeperInstance instance = new ZooKeeperInstance(instanceName, zooKeepers);
			connector = instance.getConnector(user, password.getBytes());
			connector.tableOperations().flush(table, null, null, true);
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}
}",Return empty string instead.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/examples/src/main/java/org/apache/accumulo/examples/mapreduce/TableToFile.java,"      if (cf.getLength() > 0)
        columnsToFetch.add(new Pair<Text,Text>(cf, cq));
    if (!columnsToFetch.isEmpty())
      AccumuloInputFormat.fetchColumns(job, columnsToFetch);
    if (res != 0)
      System.exit(res);","Remove this call to ""exit"" or ensure it is really required."
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/sample/Field.java,package org.apache.accumulo.examples.wikisearch.sample;,"Rename ""table"" which hides the field declared at line 107."
446a37a9795f2df7adc841154ca05add79cf286e,server/src/main/java/org/apache/accumulo/server/master/tableOps/TableRangeOp.java,"import org.apache.accumulo.core.metadata.RootTable;
    if (RootTable.ID.equals(tableId) && TableOperation.MERGE.equals(op)) {
      log.warn(""Attempt to merge tablets for "" + RootTable.NAME + "" does nothing. It is not splittable."");
    }
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
31ffeceefd11710bb254a0355e9dbc5f93f2f6e2,core/src/main/java/org/apache/accumulo/core/conf/Property.java,"      ""The property only needs to be set if upgrading from 1.4 which used to store write-ahead logs on the local filesystem. In 1.5 write-ahead logs are ""
          + ""stored in DFS.  When 1.5 is started for the first time it will copy any 1.4 write ahead logs into DFS.  It is possible to specify a ""
          + ""comma-separated list of directories.""),
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
8cf38e402910b523568f5e1d5657d09a4d9c3cd1,src/core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java,"    Option histogramOption = new Option(""h"", ""histogram"", false, ""print a histogram of the key-value sizes"");
    opts.addOption(histogramOption);
    boolean dump = commandLine.hasOption(dumpKeys.getOpt());
    boolean doHistogram = commandLine.hasOption(histogramOption.getOpt());
    long countBuckets[] = new long[11];
    long sizeBuckets[] = new long[countBuckets.length];
    long totalSize = 0;

      if (doHistogram || dump) {
          if (dump)
            System.out.println(key + "" -> "" + value);
          if (doHistogram) {
            long size = key.getSize() + value.getSize();
            int bucket = (int) Math.log10(size);
            countBuckets[bucket]++;
            sizeBuckets[bucket] += size;
            totalSize += size;
          }
      if (doHistogram) {
        System.out.println(""Up to size      count      %-age"");
        for (int i = 1; i < countBuckets.length; i++) {
          System.out.println(String.format(""%11.0f : %10d %6.2f%%"", Math.pow(10, i), countBuckets[i], sizeBuckets[i] * 100. / totalSize));
        }
      }","Remove the literal ""true"" boolean value."
8a33be695e0bcb769412db499df9cbec23004740,server/src/main/java/org/apache/accumulo/server/util/AddFilesWithMissingEntries.java,"import org.apache.accumulo.core.cli.BatchWriterOpts;
    BatchWriterOpts bwOpts = new BatchWriterOpts();
    opts.parseArgs(AddFilesWithMissingEntries.class.getName(), args, bwOpts);
    final MultiTableBatchWriter writer = opts.getConnector().createMultiTableBatchWriter(bwOpts.getBatchWriterConfig());","Remove this unused method parameter ""opts""."
bfc44fd328c471d06b480835ba826b706dcf6816,test/src/main/java/org/apache/accumulo/test/QueryMetadataTable.java,"import org.apache.accumulo.core.security.Authorizations;
    @Override
        Scanner mdScanner = connector.createScanner(Constants.METADATA_TABLE_NAME, Authorizations.EMPTY);
    @Parameter(names = ""--numQueries"", description = ""number of queries to run"")
    @Parameter(names = ""--numThreads"", description = ""number of threads used to run the queries"")","Remove this unused method parameter ""range""."
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/monitor/util/celltypes/PercentageType.java,"  
  @Override
  public int compare(Double o1, Double o2) {
    return o1.compareTo(o2);
  }
  
  @Override
  public String alignment() {
    return ""right"";
  }
  
  @Override
  public String format(Object obj) {
    if (obj == null) return ""-"";
    return String.format(""%.0f%s"", 100 * (Double) obj, ""%"");
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
2167c76e3ec2c8e7032de886613888c06b55a723,core/src/main/java/org/apache/accumulo/core/security/crypto/DefaultCryptoModule.java," * @deprecated This feature is experimental and may go away in future versions.
@Deprecated",Extract the assignment out of this expression.
6f18b26ba335eeb4b62bc6b680eccb7bc318eb05,src/server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousMoru.java,"    AccumuloOutputFormat.setOutputInfo(job.getConfiguration(), user, pass.getBytes(), false, table);
    AccumuloOutputFormat.setZooKeeperInstance(job.getConfiguration(), instance, zookeepers);
    AccumuloOutputFormat.setMaxLatency(job.getConfiguration(), (int) (Integer.parseInt(maxLatency) / 1000.0));
    AccumuloOutputFormat.setMaxMutationBufferSize(job.getConfiguration(), Long.parseLong(maxMem));
    AccumuloOutputFormat.setMaxWriteThreads(job.getConfiguration(), Integer.parseInt(numThreads));",1 duplicated blocks of code must be removed.
5242f3ec228783d7da9a489f226c5665d83adf18,core/src/main/java/org/apache/accumulo/core/util/shell/commands/SetIterCommand.java,"    setTableProperties(cl, shellState, priority, options, classname, name);
  protected void setTableProperties(final CommandLine cl, final Shell shellState, final int priority, final Map<String,String> options, final String classname,
      final String name)
    
    final String tableName = OptUtil.getTableOpt(cl, shellState);
",Move this constructor to comply with Java Code Conventions.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/master/state/TabletMigration.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
322e0359ac5d35d3774c47507aed07760397513a,src/core/src/main/java/org/apache/accumulo/core/client/mock/MockShell.java,"   * @param commands 
   *          An array of commands to run
   * @return A byte[] input stream which can be handed to the console.",1 duplicated blocks of code must be removed.
766cb2ca5c0e8eb723a163cf425257bd7bc7289f,src/core/src/main/java/org/apache/accumulo/core/Constants.java,"  public static final String MAPFILE_EXTENSION = ""map"";",Either log or rethrow this exception.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/AddSplitsCommand.java,"      if (!shellState.getConnector().tableOperations().exists(tableName))
        throw new TableNotFoundException(null, tableName, null);
        if (!line.isEmpty())
          splits.add(decode ? new Text(Base64.decodeBase64(line.getBytes())) : new Text(line));
      if (cl.getArgList().isEmpty())
        throw new MissingArgumentException(""No split points specified"");
    if (!shellState.getConnector().tableOperations().exists(tableName))
      throw new TableNotFoundException(null, tableName, null);","Remove this call to ""exit"" or ensure it is really required."
f89c45bf477393978fd175c6c4ed6db04fffa790,server/src/test/java/org/apache/accumulo/server/gc/TestConfirmDeletes.java,import org.junit.Assert;,6 duplicated blocks of code must be removed.
ccaad172643805d56f5dd46cbbc7dcd1a5519cbf,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/trace/ShowTrace.java,import org.apache.accumulo.cloudtrace.thrift.RemoteSpan;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c07e968e4f3e7164cfb3e94ca19f91d3a2e9b642,core/src/main/java/org/apache/accumulo/core/conf/Property.java,"          + "" This should be on local disk on each node with sufficient space. It defaults to ${java.io.tmpdir}/accumulo-vfs-cache-${user.name}""),
  
  @Interpolated
  @Experimental
  GENERAL_MAVEN_PROJECT_BASEDIR(AccumuloClassLoader.MAVEN_PROJECT_BASEDIR_PROPERTY_NAME, AccumuloClassLoader.DEFAULT_MAVEN_PROJECT_BASEDIR_VALUE,
      PropertyType.ABSOLUTEPATH, ""Set this to automatically add maven target/classes directories to your dynamic classpath""),
  
  ;",1 duplicated blocks of code must be removed.
3ae2b169d30ad1f39cc50540ddb0eb22321ada5d,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchWriter.java,"        ret = TabletLocator.getInstance(instance, new Text(tableId));
            locator.binMutations(tableMutations, binnedMutations, tableFailures, credentials);
            TabletLocator.getInstance(instance, new Text(table)).invalidateCache(location);
              TabletLocator.getInstance(instance, new Text(entry.getKey().getTableId())).invalidateCache(entry.getKey());
              TabletLocator.getInstance(instance, new Text(table)).invalidateCache(failedExtent);",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,server/src/main/java/org/apache/accumulo/server/tabletserver/Compactor.java,"import org.apache.accumulo.trace.instrument.Span;
import org.apache.accumulo.trace.instrument.Trace;",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
1c867129751df33f7bda77b27714cff4c3bf7ca2,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/BasicServlet.java,"    if ((refresh > 0) && (req.getRequestURI().startsWith(""/docs"") == false) && (req.getRequestURI().startsWith(""/vis"") == false))
    sb.append(""<a href='/vis'>Visualization</a><br />\n"");","Remove the literal ""false"" boolean value."
35f8e2b1868cea9849efae7fae21e8ac789a0817,server/src/main/java/org/apache/accumulo/server/monitor/servlets/trace/Basic.java,"import java.nio.charset.Charset;

  private static final Charset utf8 = Charset.forName(""UTF8"");
    byte[] passwd = conf.get(Property.TRACE_PASSWORD).getBytes(utf8);",Move this variable to comply with Java Code Conventions.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/iterators/FamilyIntersectingIterator.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
3de0c1ec44d476fe1465eb05d33c32de3ccf1068,server/src/test/java/org/apache/accumulo/server/master/balancer/ChaoticLoadBalancerTest.java,"import com.google.common.net.HostAndPort;

    servers.put(new TServerInstance(HostAndPort.fromParts(""127.0.0.1"", 1234), ""a""), new FakeTServer());
    servers.put(new TServerInstance(HostAndPort.fromParts(""127.0.0.1"", 1235), ""b""), new FakeTServer());
    servers.put(new TServerInstance(HostAndPort.fromParts(""127.0.0.1"", 1236), ""c""), new FakeTServer());
      HostAndPort fakeAddress = HostAndPort.fromParts(""127.0.0.1"", c);","Remove this unused method parameter ""threadName""."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/test/java/org/apache/accumulo/server/zookeeper/TransactionWatcherTest.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
        Map<String,List<Long>> map = new HashMap<String,List<Long>>();
            if (txids == null) txids = new ArrayList<Long>();
            if (txids.contains(txid)) throw new Exception(""transaction already started"");
            throw new Exception(""transaction does not exist"");
        
            if (txids == null) return false;
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/examples/src/main/java/org/apache/accumulo/examples/mapreduce/bulk/GenerateTestData.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    public static void main(String[] args) throws IOException {
        int startRow = Integer.parseInt(args[0]);
        int numRows = Integer.parseInt(args[1]);
        String outputFile = args[2];
        
        Configuration conf = CachedConfiguration.getInstance();
        FileSystem fs = FileSystem.get(conf);
        
        PrintStream out = new PrintStream(new BufferedOutputStream(fs.create(new Path(outputFile))));
        
        for (int i = 0; i < numRows; i++) {
            out.println(String.format(""row_%08d\tvalue_%08d"", i + startRow, i + startRow));
        }
        
        out.close();
    }
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
af59f0ad10af71de2f7de9880a1dbe1595956cc5,server/src/test/java/org/apache/accumulo/server/master/balancer/TableLoadBalancerTest.java,import org.apache.accumulo.core.security.thrift.ThriftSecurityException;,1 duplicated blocks of code must be removed.
bfc44fd328c471d06b480835ba826b706dcf6816,server/src/main/java/org/apache/accumulo/server/master/tableOps/TraceRepo.java,"import org.apache.accumulo.fate.Repo;
  
  ","Remove this unused method parameter ""range""."
f8cd6259c11999392c5068d312c97a05f0586cf6,core/src/main/java/org/apache/accumulo/core/client/MutationsRejectedException.java,   * @since 1.5.0,Move this constructor to comply with Java Code Conventions.
04c50c515fd4c28d3412e1ca0c3f6eaacf44db50,core/src/main/java/org/apache/accumulo/core/client/mapred/InputFormatBase.java,"   * @throws AccumuloSecurityException
   * {@link CredentialHelper#asBase64String(TCredentials)}.
   *          the path to a file in the configured file system, containing the serialized, base-64 encoded {@link AuthenticationToken} with the user's
   *          authentication
   * @see #setConnectorInfo(JobConf, String, AuthenticationToken)
   * @see #setConnectorInfo(JobConf, String, AuthenticationToken)
          scanner = new OfflineScanner(instance, new TCredentials(user, tokenClass, ByteBuffer.wrap(password), instance.getInstanceID()), Tables.getTableId(
              instance, getInputTableName(job)), authorizations);",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/util/DumpTabletsOnServer.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/test/java/org/apache/accumulo/core/iterators/DefaultIteratorEnvironment.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/security/CreateTable.java,"package org.apache.accumulo.test.randomwalk.security;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
f5b0460dfe969ad764d43d30ceac961aaac4998f,server/src/main/java/org/apache/accumulo/server/metanalysis/IndexMeta.java,"    AccumuloOutputFormat.setConnectorInfo(job, opts.user, opts.getPassword());
    AccumuloOutputFormat.setCreateTables(job, false);",Either log or rethrow this exception.
c8b5f1755c0563e93f21036ecf88da37b567aa74,core/src/main/java/org/apache/accumulo/core/util/shell/commands/SetAuthsCommand.java,"  public int execute(final String fullCommand, final CommandLine cl, final Shell shellState) throws AccumuloException, AccumuloSecurityException {
    final String user = cl.getOptionValue(userOpt.getOpt(), shellState.getConnector().whoami());
    final String scanOpts = cl.hasOption(clearOptAuths.getOpt()) ? null : cl.getOptionValue(scanOptAuths.getOpt());
  public void registerCompletion(final Token root, final Map<Command.CompletionSet,Set<String>> completionSet) {
    final Options o = new Options();
    final OptionGroup setOrClear = new OptionGroup();",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
f89c45bf477393978fd175c6c4ed6db04fffa790,fate/src/test/java/org/apache/accumulo/fate/zookeeper/DistributedReadWriteLockTest.java,"import static org.junit.Assert.*;
        assertEquals(counter, data[i]);",6 duplicated blocks of code must be removed.
3dbd87897442d632a09660f5bb5667c28e4bf9c4,core/src/main/java/org/apache/accumulo/core/data/thrift/UpdateErrors.java," * Autogenerated by Thrift Compiler (0.9.0)
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
    // check for sub-struct validity",Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'.
e3db57fec95d5dbd27aef1e06be204d577ceffa4,contrib/accumulo_sample/query/src/main/java/iterator/AndIterator.java,"    idx = sKey.indexOf(""\0"");
        if (range.getStartKey().getColumnFamily() != null) {
              (sources[i].term == null) ? nullText : new Text(sources[i].term + ""\0"" + range.getStartKey().getColumnFamily()));
        if (!range.isStartKeyInclusive())
          sourceKey = sourceKey.followingKey(PartialKey.ROW_COLFAM_COLQUAL);
        String myUid = this.topKey.getColumnQualifier().toString();","Remove this unused ""seekTime"" private field."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServerResourceManager.java,"      throw new IllegalArgumentException(String.format(
          ""Maximum tablet server map memory %,d and block cache sizes %,d is too large for this JVM configuration %,d"", maxMemory, dCacheSize + iCacheSize,
          runtime.maxMemory()));
            if (System.currentTimeMillis() > timeout)
              throw new HoldTimeoutException(""Commits are held"");
    if (!holdCommits)
      return 0;
          if (entry.getValue().awaitTermination(60, TimeUnit.SECONDS))
            break;
      if (closed)
        throw new IllegalStateException(""closed"");
        if (delta > 0)
          lastReportedCommitTime = currentTime;
      if (report)
        memMgmt.updateMemoryUsageStats(tablet, size, lastReportedCommitTime, mincSize);
      if (tabletFiles.size() <= 1)
        return null;
          if (o1 == o2)
            return 0;
          if (o1.size < o2.size)
            return -1;
          if (o1.size > o2.size)
            return 1;
            if (files.size() >= maxFilesToCompact)
              break;
      if (tabletFiles.size() > maxFilesPerTablet)
        totalFilesToCompact = tabletFiles.size() - maxFilesPerTablet + 1;
          if (files.size() >= totalFilesToCompact)
            break;
      if (files.size() == 0)
        return null;
      if (closed)
        return false;// throw new IOException(""closed"");
        
      if (reason == MajorCompactionReason.ALL)
        return true;
          if (closed)
            throw new IOException(""closed"");
          if (openFilesReserved)
            throw new IOException(""tired to close files while open files reserved"");","Remove this call to ""exit"" or ensure it is really required."
322e0359ac5d35d3774c47507aed07760397513a,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/StringMin.java, * @see org.apache.accumulo.core.iterators.user.MinCombiner with MinCombiner.Type.STRING,1 duplicated blocks of code must be removed.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/test/QueryMetadataTable.java,"import org.apache.accumulo.server.cli.ClientOpts;
import com.beust.jcommander.Parameter;

  static class Opts extends ClientOpts {
    @Parameter(names=""--numQueries"", description=""number of queries to run"")
    int numQueries = 1;
    @Parameter(names=""--numThreads"", description=""number of threads used to run the queries"")
    int numThreads = 1;
  }
  
    Opts opts = new Opts();
    opts.parseArgs(QueryMetadataTable.class.getName(), args);
    Connector connector = opts.getConnector();
    Scanner scanner = connector.createScanner(Constants.METADATA_TABLE_NAME, opts.auths);
    scanner.setBatchSize(opts.scanBatchSize);
    ExecutorService tp = Executors.newFixedThreadPool(opts.numThreads);
    for (int i = 0; i < opts.numQueries; i++) {
    System.out.println(""time : "" + delta + ""  queries per sec : "" + (opts.numQueries / delta));","Remove this call to ""exit"" or ensure it is really required."
a63607a89356ef85af81e377b289fafe413687c5,server/src/main/java/org/apache/accumulo/server/tabletserver/mastermessage/SplitReportMessage.java,"import org.apache.accumulo.cloudtrace.instrument.Tracer;
    client.reportSplitExtent(Tracer.traceInfo(), credentials, serverName, split);","Immediately return this expression instead of assigning it to the temporary variable ""client""."
bfc44fd328c471d06b480835ba826b706dcf6816,test/src/main/java/org/apache/accumulo/test/randomwalk/shard/DeleteSomeDocs.java,"import org.apache.accumulo.core.security.Authorizations;
    BatchDeleter ibd = state.getConnector().createBatchDeleter(indexTableName, Authorizations.EMPTY, 8, bwc);
    BatchDeleter dbd = state.getConnector().createBatchDeleter(dataTableName, Authorizations.EMPTY, 8, bwc);","Remove this unused method parameter ""range""."
04c50c515fd4c28d3412e1ca0c3f6eaacf44db50,server/src/main/java/org/apache/accumulo/server/tabletserver/log/LogSorter.java,          org.apache.accumulo.core.security.crypto.CryptoModule cryptoOps = CryptoModuleFactory.getCryptoModule(cryptoModuleName);,Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/multitable/CopyTable.java,"    if (tables.isEmpty())
      return;","Remove this call to ""exit"" or ensure it is really required."
6a5500a5b3f34b26386877e332973e7b926aa4ce,test/src/main/java/org/apache/accumulo/test/randomwalk/security/SecurityFixture.java,"import org.apache.accumulo.core.security.thrift.tokens.PasswordToken;
import org.apache.accumulo.core.security.thrift.tokens.SecurityToken;
    SecurityToken sysUserPass = new PasswordToken().setPassword(""sysUser"".getBytes());
    WalkingSecurity.get(state).changePassword(tableUserName, new PasswordToken().setPassword(new byte[0]));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a74759ad47b49bd6f22cbe69ae019358357f8172,src/core/src/main/java/org/apache/accumulo/core/client/impl/ThriftTransportPool.java,"import org.apache.accumulo.core.util.Pair;
  Pair<String,TTransport> getAnyTransport(List<ThriftTransportKey> servers) throws TTransportException {
              return new Pair<String,TTransport>(entry.getKey().getLocation() + "":"" + entry.getKey().getPort(), cachedConnection.transport);
        return new Pair<String,TTransport>(servers.get(index).getLocation() + "":"" + servers.get(index).getPort(), createNewTransport(servers.get(index)));",Remove this unused import 'org.apache.accumulo.core.client.impl.thrift.ClientService.Iface'.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/test/GCLotsOfCandidatesTest.java,"import org.apache.accumulo.server.cli.ClientOpts;
    ClientOpts opts = new ClientOpts();
    opts.parseArgs(GCLotsOfCandidatesTest.class.getName(), args);
    Connector conn = opts.getConnector();
    BatchWriter bw = conn.createBatchWriter(Constants.METADATA_TABLE_NAME, opts.getBatchWriterConfig());","Remove this call to ""exit"" or ensure it is really required."
d0fff546871cddd53db5908a3f696dccddbdd678,core/src/main/java/org/apache/accumulo/core/conf/Property.java,"  TABLE_CLASSPATH(""table.classpath.context"", """", PropertyType.STRING, ""Per table classpath""),

        || key.startsWith(Property.MONITOR_PREFIX.getKey() + ""banner."") || key.startsWith(VFS_CONTEXT_CLASSPATH_PROPERTY.getKey());",Complete the task associated to this TODO comment.
02a26268575ac93d74796ec8fd8798f85b92dac1,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"      byte[] lockContent = new ServerServices(getClientAddressString(), Service.TSERV_CLIENT).toString().getBytes();","Remove this unused method parameter ""ex""."
1a79f8d245399bd847729e21844fbd04acb1ef9d,src/core/src/main/java/org/apache/accumulo/core/trace/ZooTraceClient.java,"    updateHosts(path, zoo.getChildren(path, this));
}",Reorder the modifiers to comply with the Java Language Specification.
7da1164d87227960d3e0cfc841f753067e2c0304,core/src/main/java/org/apache/accumulo/core/client/mock/MockInstance.java,"
  @Override
  public void close() throws AccumuloException {
    // NOOP
  }",Move this variable to comply with Java Code Conventions.
bfc44fd328c471d06b480835ba826b706dcf6816,test/src/test/java/org/apache/accumulo/test/ShellServerTest.java,"import org.apache.accumulo.core.security.Authorizations;
  
    
    
  
  
  
    input.set(secret + ""\n"" + secret + ""\n"");
  @Test
  // (timeout = 30000)
      @Override
          Scanner s = connector.createScanner(""t"", Authorizations.EMPTY);","Remove this unused method parameter ""range""."
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,server/src/main/java/org/apache/accumulo/server/master/state/MetaDataTableScanner.java,"import org.apache.accumulo.core.security.thrift.Credentials;
  public MetaDataTableScanner(Instance instance, Credentials auths, Range range, CurrentState state) {
      Connector connector = instance.getConnector(auths.getPrincipal(), auths.getToken());
  public MetaDataTableScanner(Instance instance, Credentials auths, Range range) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ea3e2ea8ad34493a95f5aad56410ed4c6950fae8,server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousWalk.java,"import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Collections;
import java.util.List;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
  private static String authsFile = null;
      } else if (args[i].equals(""--auths"")) {
        authsFile = args[++i];
  static class RandomAuths {
    private List<Authorizations> auths;
    
    RandomAuths(String file) throws IOException {
      if (file == null) {
        auths = Collections.singletonList(Constants.NO_AUTHS);
        return;
      }
      
      auths = new ArrayList<Authorizations>();
      
      FileSystem fs = FileSystem.get(new Configuration());
      BufferedReader in = new BufferedReader(new InputStreamReader(fs.open(new Path(file))));
      
      String line;
      
      while ((line = in.readLine()) != null) {
        auths.add(new Authorizations(line.split("","")));
      }
      
      in.close();
    }
    
    Authorizations getAuths(Random r) {
      return auths.get(r.nextInt(auths.size()));
    }
  }

          + "" [--debug <debug log>] [--auths <file>] <instance name> <zookeepers> <user> <pass> <table> <min> <max> <sleep time>"");
    RandomAuths randomAuths = new RandomAuths(authsFile);
      Scanner scanner = conn.createScanner(table, randomAuths.getAuths(r));
    cksum.update(key.getColumnVisibilityData().toArray());","Remove this unused method parameter ""r""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/util/AddFilesWithMissingEntries.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
93773813e5839ac9ffb4f5a2b2b70bcedb106286,server/src/main/java/org/apache/accumulo/server/util/TabletIterator.java,"import org.apache.accumulo.core.util.MetadataTable;
    MetadataTable.PREV_ROW_COLUMN.fetch(scanner);
    MetadataTable.DIRECTORY_COLUMN.fetch(scanner);
      if (!MetadataTable.PREV_ROW_COLUMN.hasColumns(prevEndRowKey)) {
      if (!returnPrevEndRow && MetadataTable.PREV_ROW_COLUMN.hasColumns(entry.getKey())) {
      if (!returnDir && MetadataTable.DIRECTORY_COLUMN.hasColumns(entry.getKey())) {
        if (MetadataTable.PREV_ROW_COLUMN.hasColumns(entry.getKey())) {
    log.info(""Resetting "" + MetadataTable.NAME + "" scanner to "" + range);","Use ""Long.toString"" instead."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchReaderIterator.java,"  private final Object nextLock = new Object();
    private final Map<KeyExtent,List<Range>> failures;","Remove this unused private ""appendProp"" method."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/Accumulo.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/functional/BadCombiner.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
65f0d20d7936df7427d8373efcfa69b02221c8b9,proxy/src/main/java/org/apache/accumulo/proxy/thrift/KeyExtent.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@SuppressWarnings(""all"") public class KeyExtent implements org.apache.thrift.TBase<KeyExtent, KeyExtent._Fields>, java.io.Serializable, Cloneable {
  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
5f83564549f7f9e94fb6619c983d8e3d12607e74,core/src/main/java/org/apache/accumulo/core/util/shell/commands/EGrepCommand.java,"  protected void setUpIterator(final int prio, final String name, final String term, final BatchScanner scanner) throws IOException {
    if (prio < 0) {
    }
    final IteratorSetting si = new IteratorSetting(prio, name, RegExFilter.class);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a1c5667873834cdd74cb3eb5a19ec25486fba290,core/src/main/java/org/apache/accumulo/core/util/shell/commands/WhoAmICommand.java,    shellState.getReader().println(shellState.getConnector().whoami());,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
517c271cab677ade0854048e7f13f421a9fb3aaa,server/src/main/java/org/apache/accumulo/server/master/state/ZooTabletStateStore.java,"      throw new DistributedStoreException(""Trying to set the root tablet location: it is already set to "" + current.current);
      throw new DistributedStoreException(""Trying to set the root tablet location: it is already set to "" + current.current);
      throw new DistributedStoreException(""Root tablet is already assigned to "" + current.future);
    // Make the following unnecessary by making the entire update atomic",2 duplicated blocks of code must be removed.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/client/impl/RootTabletLocator.java,"  
  private Instance instance;
  
  RootTabletLocator(Instance instance) {
    this.instance = instance;
  }
  
  @Override
  public void binMutations(List<Mutation> mutations, Map<String,TabletServerMutations> binnedMutations, List<Mutation> failures) throws AccumuloException,
      AccumuloSecurityException, TableNotFoundException {
    throw new UnsupportedOperationException();
  }
  
  @Override
  public List<Range> binRanges(List<Range> ranges, Map<String,Map<KeyExtent,List<Range>>> binnedRanges) throws AccumuloException, AccumuloSecurityException,
      TableNotFoundException {
    String rootTabletLocation = instance.getRootTabletLocation();
    if (rootTabletLocation != null) {
      for (Range range : ranges) {
        TabletLocatorImpl.addRange(binnedRanges, rootTabletLocation, Constants.ROOT_TABLET_EXTENT, range);
      }
    return Collections.emptyList();
  }
  
  @Override
  public void invalidateCache(KeyExtent failedExtent) {}
  
  @Override
  public void invalidateCache(Collection<KeyExtent> keySet) {}
  
  @Override
  public void invalidateCache(String server) {}
  
  @Override
  public void invalidateCache() {}
  
  @Override
  public TabletLocation locateTablet(Text row, boolean skipRow, boolean retry) throws AccumuloException, AccumuloSecurityException, TableNotFoundException {
    if (skipRow) {
      row = new Text(row);
      row.append(new byte[] {0}, 0, 1);
    if (!Constants.ROOT_TABLET_EXTENT.contains(row)) {
      throw new AccumuloException(""Tried to locate row out side of root tablet "" + row);
    String location = instance.getRootTabletLocation();
    // Always retry when finding the root tablet
    while (retry && location == null) {
      UtilWaitThread.sleep(500);
      location = instance.getRootTabletLocation();
    if (location != null) return new TabletLocation(Constants.ROOT_TABLET_EXTENT, location);
    return null;
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
99da5641c28784c7b717cce6749673863c2ec8cf,server/src/test/java/org/apache/accumulo/server/master/balancer/ChaoticLoadBalancerTest.java,"    Map<KeyExtent,TServerInstance> assignments = new HashMap<KeyExtent,TServerInstance>();
      InetSocketAddress fakeAddress = AddressUtil.parseAddress(""127.0.0.1"", c);","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
aa7110234e15a017bb1dbc99b4351f0bf06cc73b,test/src/test/java/org/apache/accumulo/test/VolumeTest.java,"import java.io.File;

  private static final Value EMPTY_VALUE = new Value(new byte[] {});
  public static TemporaryFolder folder = new TemporaryFolder(new File(System.getProperty(""user.dir"") + ""/target""));



      boolean inV2 = entry.getKey().getColumnQualifier().toString().contains(v2.toString());
",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
35f8e2b1868cea9849efae7fae21e8ac789a0817,server/src/main/java/org/apache/accumulo/server/util/SendLogToChainsaw.java,"import java.nio.charset.Charset;

  private static final Charset utf8 = Charset.forName(""UTF8"");
                    socket.getOutputStream().write(out.getBytes(utf8));",Move this variable to comply with Java Code Conventions.
0b72ded347071069a3cbacb7c0c0ccccc94b1f48,src/core/src/main/java/org/apache/accumulo/core/client/IteratorSetting.java,"  

  
    public Text getColumnQualifier() {",Either log or rethrow this exception.
5594b2e0b893e7b837f8b9f7979147ea2f1ea3f5,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaPartitioner.java,  // private static final Logger log = Logger.getLogger(WikipediaPartitioner.class);,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
602a8e3bfe4ae783f6ab6c89e0d3146afebe1d6a,core/src/main/java/org/apache/accumulo/core/client/IteratorSetting.java,"   * @see java.lang.Object#hashCode()
   */
  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((iteratorClass == null) ? 0 : iteratorClass.hashCode());
    result = prime * result + ((name == null) ? 0 : name.hashCode());
    result = prime * result + priority;
    result = prime * result + ((properties == null) ? 0 : properties.hashCode());
    return result;
  }
  
  /**
   * @see java.lang.Object#equals()
   */
  @Override
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (!(obj instanceof IteratorSetting))
      return false;
    IteratorSetting other = (IteratorSetting) obj;
    if (iteratorClass == null) {
      if (other.iteratorClass != null)
        return false;
    } else if (!iteratorClass.equals(other.iteratorClass))
      return false;
    if (name == null) {
      if (other.name != null)
        return false;
    } else if (!name.equals(other.name))
      return false;
    if (priority != other.priority)
      return false;
    if (properties == null) {
      if (other.properties != null)
        return false;
    } else if (!properties.equals(other.properties))
      return false;
    return true;
  }

  /**",Remove this unused import 'org.apache.hadoop.io.Writable'.
4c360048c5e62a8c7b22d1038bd64a819dba38e9,src/core/src/main/java/org/apache/accumulo/core/iterators/IteratorUtil.java,"    log.debug(""Iterator options: "" + iterOpts);
        log.debug(""Loading "" + iterInfo.className + "" "" + iterInfo.iterName + "" "" + iterInfo.priority);","Remove this unused method parameter ""table""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/examples/src/main/java/org/apache/accumulo/examples/mapreduce/bulk/GenerateTestData.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
02a26268575ac93d74796ec8fd8798f85b92dac1,server/src/main/java/org/apache/accumulo/server/security/ZKAuthenticator.java,"        zoo.putPersistentData(ZKUserPath, rootuser.getBytes(), NodeExistsPolicy.FAIL);","Remove this unused method parameter ""ex""."
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/ChangeAuthorizations.java,"package org.apache.accumulo.test.randomwalk.concurrent;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/randomwalk/unit/Scan.java,"package org.apache.accumulo.test.randomwalk.unit;
import org.apache.accumulo.test.randomwalk.State;
import org.apache.accumulo.test.randomwalk.Test;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
433c8a23f7fb389c68b1157b09c587eecec6f955,core/src/main/java/org/apache/accumulo/core/conf/Property.java,"  TRACE_USER(""trace.user"", ""root"", PropertyType.STRING, ""DEPRECATED SINCE 1.5, USE trace.principal. The name of the user to store distributed traces""),
  TRACE_PASSWORD(""trace.password"", ""secret"", PropertyType.STRING, ""DEPRECATED SINCE 1.5, USE trace.login. The password for the user used to store distributed traces""),",Replace all tab characters in this file by sequences of white-spaces.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/bulk/Split.java,"package org.apache.accumulo.server.test.randomwalk.bulk;

import java.util.Random;
import java.util.SortedSet;
import java.util.TreeSet;

import org.apache.accumulo.server.test.randomwalk.State;
import org.apache.hadoop.io.Text;


public class Split extends BulkTest {

    @Override
    protected void runLater(State state) throws Exception {
        SortedSet<Text> splits = new TreeSet<Text>();
        Random rand = (Random)state.get(""rand"");
        int count = rand.nextInt(20);
        for (int i = 0; i < count; i++)
            splits.add(new Text(String.format(BulkPlusOne.FMT, Math.abs(rand.nextLong()) % BulkPlusOne.LOTS)));
        log.info(""splitting "" + splits);
        state.getConnector().tableOperations().addSplits(Setup.getTableName(), splits);        
    }
    
}",Return empty string instead.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/tabletserver/Rate.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
35f8e2b1868cea9849efae7fae21e8ac789a0817,server/src/main/java/org/apache/accumulo/server/zookeeper/ZooQueueLock.java,"import java.nio.charset.Charset;

  private static final Charset utf8 = Charset.forName(""UTF8"");
    DistributedReadWriteLock rlocker = new DistributedReadWriteLock(lock, ""reader"".getBytes(utf8));
    DistributedReadWriteLock wlocker = new DistributedReadWriteLock(lock, ""wlocker"".getBytes(utf8));
    Lock writeLock2 = DistributedReadWriteLock.recoverLock(lock, ""wlocker"".getBytes(utf8));",Move this variable to comply with Java Code Conventions.
35f8e2b1868cea9849efae7fae21e8ac789a0817,core/src/main/java/org/apache/accumulo/core/file/rfile/RFile.java,"import java.nio.charset.Charset;

    Charset utf8 = Charset.forName(""UTF8"");
          w.append(new Key(row, cf, cq), new Value((c++ + """").getBytes(utf8)));",Move this variable to comply with Java Code Conventions.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/test/java/org/apache/accumulo/server/test/randomwalk/FrameworkTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
a8eed5b2b329b35cae88136e1b4ea71cc875f737,server/src/main/java/org/apache/accumulo/server/test/randomwalk/security/CreateUser.java,"import org.apache.accumulo.core.security.SystemPermission;
    Connector conn = SecurityHelper.getSystemConnector(state);
    String tableUserName = SecurityHelper.getTabUserName(state);
    boolean exists = SecurityHelper.getTabUserExists(state);
    boolean hasPermission = false;
    if (SecurityHelper.getSysPerm(state, SecurityHelper.getSysUserName(state), SystemPermission.CREATE_USER))
      hasPermission = true;
              SecurityHelper.setTabUserPass(state, tabUserPass);
              SecurityHelper.setTabUserExists(state, true);
    SecurityHelper.setTabUserPass(state, tabUserPass);
    SecurityHelper.setTabUserExists(state, true);",Either log or rethrow this exception.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/HiddenCommand.java,"package org.apache.accumulo.core.util.shell.commands;

import java.security.SecureRandom;
import java.util.Random;

import org.apache.accumulo.core.util.shell.Shell;
import org.apache.accumulo.core.util.shell.ShellCommandException;
import org.apache.accumulo.core.util.shell.Shell.Command;
import org.apache.accumulo.core.util.shell.ShellCommandException.ErrorCode;
import org.apache.commons.cli.CommandLine;


public class HiddenCommand extends Command {
	private static Random rand = new SecureRandom();

	@Override
	public String description() {
		return ""The first rule of Accumulus is: \""You don't talk about Accumulus.\"""";
	}

	@Override
	public int execute(String fullCommand, CommandLine cl, Shell shellState) throws Exception {
		if (rand.nextInt(10) == 0) {
			shellState.getReader().beep();
			shellState.getReader().printNewline();
			shellState.getReader().printString(""Sortacus lives!\n"");
			shellState.getReader().printNewline();
		} else
			throw new ShellCommandException(ErrorCode.UNRECOGNIZED_COMMAND, getName());

		return 0;
	}

	@Override
	public int numArgs() {
		return Shell.NO_FIXED_ARG_LENGTH_CHECK;
	}

	@Override
	public String getName() {
		return ""\0\0\0\0"";
	}
}",Return empty string instead.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousVerify.java,"import org.apache.accumulo.server.cli.ClientOpts;
import com.beust.jcommander.Parameter;
import com.beust.jcommander.validators.PositiveInteger;

  static class Opts extends ClientOpts {
    @Parameter(names=""--table"", description=""table to verify"")
    String tableName = ""ci"";
    @Parameter(names=""--output"", description=""location in HDFS to store the results; must not exist"", required=true)
    String outputDir = ""/tmp/continuousVerify"";
    @Parameter(names=""--maxMappers"", description=""the maximum number of mappers to use"", required=true, validateWith=PositiveInteger.class)
    int maxMaps = 0;
    @Parameter(names=""--reducers"", description=""the number of reducers to use"", required=true, validateWith=PositiveInteger.class)
    int reducers = 0;
    @Parameter(names=""--offline"", description=""perform the verification directly on the files while the table is offline"")
    boolean scanOffline = false;
  }
  
  @Override
  public int run(String[] args) throws Exception {
    Opts opts = new Opts();
    opts.parseArgs(this.getClass().getName(), args);
    String clone = opts.tableName;
    if (opts.scanOffline) {
      clone = opts.tableName + ""_"" + String.format(""%016x"", Math.abs(random.nextLong()));
      conn = opts.getConnector();
      conn.tableOperations().clone(opts.tableName, clone, true, new HashMap<String,String>(), new HashSet<String>());
    opts.setAccumuloConfigs(job);
    AccumuloInputFormat.setScanOffline(job.getConfiguration(), opts.scanOffline);
      Set<Range> ranges = opts.getConnector().tableOperations().splitRangeByTablets(opts.tableName, new Range(), opts.maxMaps);
    job.setNumReduceTasks(opts.reducers);
    job.getConfiguration().setBoolean(""mapred.map.tasks.speculative.execution"", opts.scanOffline);
    TextOutputFormat.setOutputPath(job, new Path(opts.outputDir));
    if (opts.scanOffline) {
    opts.stopTracing();","Remove this call to ""exit"" or ensure it is really required."
0680b04bf03e2d6ad19ae3c368f6cb23f4e30056,examples/simple/src/test/java/org/apache/accumulo/examples/simple/filedata/ChunkInputFormatTest.java,"import org.apache.accumulo.core.util.ContextFactory;
    JobContext job = ContextFactory.createJobContext();
    TaskAttemptContext tac = ContextFactory.createTaskAttemptContext(job.getConfiguration());
    JobContext job = ContextFactory.createJobContext();
    TaskAttemptContext tac = ContextFactory.createTaskAttemptContext(job.getConfiguration());
    JobContext job = ContextFactory.createJobContext();
    TaskAttemptContext tac = ContextFactory.createTaskAttemptContext(job.getConfiguration());",Rename this generic name to match the regular expression '^[A-Z]$'.
5e14ecff940065c80ed5975124552c9014cc3442,src/core/src/test/java/org/apache/accumulo/core/iterators/IntersectingIteratorTest.java,import org.apache.accumulo.core.iterators.user.IntersectingIterator;,"Remove this unused private ""match"" method."
2db5ce6186e32c451328154b024951cc5090505f,server/src/main/java/org/apache/accumulo/server/test/GetMasterStats.java,"        out(2, ""Recoveries %d"", server.logSorts.size());
        for (RecoveryStatus sort : server.logSorts) {
          out(3, ""File %s"", sort.name);
          out(3, ""Progress %.2f%%"", sort.progress * 100);
          out(3, ""Time running %s"", sort.runtime / 1000.);
        }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/util/TBufferedServerSocket.java,"package org.apache.accumulo.server.util;

import java.io.IOException;
import java.net.ServerSocket;

import org.apache.accumulo.core.util.TBufferedSocket;
import org.apache.thrift.transport.TServerTransport;
import org.apache.thrift.transport.TSocket;
import org.apache.thrift.transport.TTransport;
import org.apache.thrift.transport.TTransportException;


// Thrift-959 removed the small buffer from TSocket; this adds it back for servers
public class TBufferedServerSocket extends TServerTransport {
    
    // expose acceptImpl
    static class TServerSocket extends org.apache.thrift.transport.TServerSocket {
        public TServerSocket(ServerSocket serverSocket) {
            super(serverSocket);
        }

        public TSocket acceptImplPublic() throws TTransportException {
            return acceptImpl();
        }
    }
    
    final TServerSocket impl;
    final int bufferSize;
    
    public TBufferedServerSocket(ServerSocket serverSocket, int bufferSize) {
        this.impl = new TServerSocket(serverSocket);
        this.bufferSize = bufferSize;
    }
    
    @Override
    public void listen() throws TTransportException {
        impl.listen();
    }
    
    @Override
    public void close() {
        impl.close();
    }

    // Wrap accepted sockets using buffered IO
    @Override
    protected TTransport acceptImpl() throws TTransportException {
        TSocket sock = impl.acceptImplPublic();
        try {
            return new TBufferedSocket(sock, this.bufferSize);
        } catch (IOException e) {
            throw new TTransportException(e);
        }
    }
    
    
    

}",Return empty string instead.
5242f3ec228783d7da9a489f226c5665d83adf18,core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteManyCommand.java,"    addScanIterators(shellState, cl, scanner, tableName);",Move this constructor to comply with Java Code Conventions.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/start/src/main/java/org/apache/accumulo/start/Platform.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    public static String getPlatform() {
        return (System.getProperty(""os.name"") + ""-"" + System.getProperty(""os.arch"") + ""-"" + System.getProperty(""sun.arch.data.model"")).replace(' ', '_');",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/client/BatchDeleter.java,"package org.apache.accumulo.core.client;

import java.util.Collection;

import org.apache.accumulo.core.data.Range;


public interface BatchDeleter extends ScannerBase {

	public void delete() throws MutationsRejectedException, TableNotFoundException;
	
	/**
	 * Allows scanning over multiple ranges efficiently.
	 * 
	 * @param ranges specifies the non-overlapping ranges to query
	 */
	void setRanges(Collection<Range> ranges);

	
	void close();
}",Return empty string instead.
08ebaa4ec0533308debc7cfef5f8da964e77855b,trace/src/main/java/org/apache/accumulo/cloudtrace/thrift/RemoteSpan.java,"                  String _val3; // required
            String _val9; // required",12 duplicated blocks of code must be removed.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/tabletserver/EncodedBinaryTreePath.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
2ad672a5172124625d719c38c163ab68846c75a6,core/src/main/java/org/apache/accumulo/core/client/mapred/InputFormatBase.java,import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;,Move this constructor to comply with Java Code Conventions.
527a100ef5de9c51fb17b0b340f036ee4cd98590,src/core/src/main/java/org/apache/accumulo/core/data/thrift/MultiScanResult.java,"@SuppressWarnings(""all"") public class MultiScanResult implements org.apache.thrift.TBase<MultiScanResult, MultiScanResult._Fields>, java.io.Serializable, Cloneable {",13 duplicated blocks of code must be removed.
3d06f475ebfcb4da9789ab30c22b9d7b2ab47ddf,core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsImpl.java,"      opts.put(prop, """");","Immediately return this expression instead of assigning it to the temporary variable ""connector""."
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/util/BaseKeyParser.java,package org.apache.accumulo.examples.wikisearch.util;,"Rename ""table"" which hides the field declared at line 107."
c8b5f1755c0563e93f21036ecf88da37b567aa74,core/src/main/java/org/apache/accumulo/core/util/shell/commands/MaxRowCommand.java,"  public int execute(final String fullCommand, final CommandLine cl, final Shell shellState) throws Exception {
    final String tableName = OptUtil.getTableOpt(cl, shellState);
    final ScanInterpreter interpeter = getInterpreter(cl, tableName, shellState);
    final Range range = getRange(cl, interpeter);
    final Authorizations auths = getAuths(cl, shellState);
    final Text startRow = range.getStartKey() == null ? null : range.getStartKey().getRow();
    final Text endRow = range.getEndKey() == null ? null : range.getEndKey().getRow();
      final Text max = shellState.getConnector().tableOperations()
      if (max != null) {
      }",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/isolation/InterferenceTest.java,package org.apache.accumulo.examples.simple.isolation;,2 duplicated blocks of code must be removed.
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchWriter.java," *   + Once the queue of unprocessed mutations reaches 50% it is always pushed to the background threads, 
 *      even if they are currently processing... new mutations are merged with mutations currently 
 * 
 *   + mutations for a single tablet server are only processed by one thread concurrently (if new mutations 
 *      come in for a tablet server while one thread is processing mutations for it, no other thread should 
 *   
 * 
 * 
 * 
  
  
  
  
  
  
  
  
  
  
  
  
  
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
      
      
      
    
    
    
  
  
    
    
    
      
        
        
      
      
      
      
      
  
    
    
      
      
      
      
  
    
    
    
    
    
  
  
  
    
    
    
    
    
    
  
  
  
  
    
  
      
      
      
  
  
  
  
  
  
  
   * 
  
    
    
    
    
    
    
      
    
        
        
  
  
  
    
    
    
      
    
          
          
            
              
          
      
      
    
    
      
      
        
        
        
        
      
      
      
    
      
    
      
      
      
          
          
      
        
        
        
          
          
            
            
            
            
            
            
          
          
          
    
      
      
        
        
          
            
            
            
                
            
            
            
            
              
              
              
            
  
  
    
    
    
      
      
    
    
    
      
        
    
    
    ",Replace all tab characters in this file by sequences of white-spaces.
22cdcbc700e4c68b21738ab7087a35ef784b0fc1,server/src/main/java/org/apache/accumulo/server/fs/VolumeChooser.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.server.fs;


public interface VolumeChooser {
  String choose(String[] options);
}",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/fate/Repo.java,"  long isReady(long tid, T environment) throws Exception;
  
  Repo<T> call(long tid, T environment) throws Exception;
  
  void undo(long tid, T environment) throws Exception;
  
  String getDescription();
  
  // this allows the last fate op to return something to the user
  String getReturn();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
6f18b26ba335eeb4b62bc6b680eccb7bc318eb05,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/RowHash.java,"    AccumuloOutputFormat.setZooKeeperInstance(job.getConfiguration(), args[0], args[1]);
    AccumuloOutputFormat.setOutputInfo(job.getConfiguration(), args[2], args[3].getBytes(), true, args[6]);",1 duplicated blocks of code must be removed.
b8062ee54c6358e999cd58da6da366fe934723dd,src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,      List<TKeyExtent> failures = new ArrayList<TKeyExtent>();,Reorder the modifiers to comply with the Java Language Specification.
2ca89a813feca545f6dfa1aad54abde8a0e579dc,core/src/main/java/org/apache/accumulo/core/client/impl/thrift/ConfigurationType.java," * Autogenerated by Thrift Compiler (0.8.0)
 *  @generated",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/client/ClientServiceHandler.java,"    if (tableId == null)
      throw new ThriftTableOperationException(null, tableName, operation, TableOperationExceptionType.NOTFOUND, null);
      if (!entry.getKey().equals(Property.INSTANCE_SECRET.getKey()))
        result.put(entry.getKey(), entry.getValue());
      if (!authenticator.hasSystemPermission(credentials, credentials.getUser(), SystemPermission.SYSTEM))
        throw new AccumuloSecurityException(credentials.getUser(), SecurityErrorCode.PERMISSION_DENIED);","Remove this call to ""exit"" or ensure it is really required."
be646246ba8add6bacf025c448f1e9511e475c2c,core/src/main/java/org/apache/accumulo/core/util/shell/commands/GetAuthsCommand.java,"import java.util.SortedSet;
import java.util.TreeSet;
import org.apache.accumulo.core.security.Authorizations;
import org.apache.commons.lang.StringUtils;
    // Sort authorizations
    Authorizations auths = shellState.getConnector().securityOperations().getUserAuthorizations(user);
    SortedSet<String> set = new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);
    for (byte[] auth : auths) {
      set.add(new String(auth));
    }
    shellState.getReader().printString(StringUtils.join(set, ',') + ""\n"");",1 duplicated blocks of code must be removed.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/trace/SpanTreeVisitor.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
84a508592afc8fde6e035f6fef7f5990752256f2,core/src/main/java/org/apache/accumulo/core/client/impl/MetadataLocationObtainer.java,"import org.apache.accumulo.core.security.tokens.InstanceTokenWrapper;
  private InstanceTokenWrapper credentials;
  MetadataLocationObtainer(InstanceTokenWrapper credentials, Instance instance) {","Immediately return this expression instead of assigning it to the temporary variable ""ret""."
2cfbb3d6e2d9d3d464b89f2da14a9e1b91980913,trace/src/test/java/org/apache/accumulo/trace/instrument/PerformanceTest.java,"package org.apache.accumulo.trace.instrument;
import org.apache.accumulo.trace.instrument.Span;
import org.apache.accumulo.trace.instrument.Trace;",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/IsolatedScan.java,"  
  @Override
  public void visit(State state, Properties props) throws Exception {
    Connector conn = state.getConnector();
    Random rand = (Random) state.get(""rand"");
    
    @SuppressWarnings(""unchecked"")
    List<String> tableNames = (List<String>) state.get(""tables"");
    
    String tableName = tableNames.get(rand.nextInt(tableNames.size()));
    
    try {
      RowIterator iter = new RowIterator(new IsolatedScanner(conn.createScanner(tableName, Constants.NO_AUTHS)));
      
      while (iter.hasNext()) {
        PeekingIterator<Entry<Key,Value>> row = new PeekingIterator<Entry<Key,Value>>(iter.next());
        Entry<Key,Value> kv = null;
        if (row.hasNext()) kv = row.peek();
        while (row.hasNext()) {
          Entry<Key,Value> currentKV = row.next();
          if (!kv.getValue().equals(currentKV.getValue())) throw new Exception(""values not equal "" + kv + "" "" + currentKV);
      }
      log.debug(""Isolated scan "" + tableName);
    } catch (TableDeletedException e) {
      log.debug(""Isolated scan "" + tableName + "" failed, table deleted"");
    } catch (TableNotFoundException e) {
      log.debug(""Isolated scan "" + tableName + "" failed, doesnt exist"");
    } catch (TableOfflineException e) {
      log.debug(""Isolated scan "" + tableName + "" failed, offline"");
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/constraints/ConstraintLoader.java,"package org.apache.accumulo.server.constraints;

import java.io.IOException;
import java.util.Map.Entry;

import org.apache.accumulo.core.conf.AccumuloConfiguration;
import org.apache.accumulo.core.conf.Property;
import org.apache.accumulo.core.constraints.Constraint;
import org.apache.accumulo.server.conf.ServerConfiguration;
import org.apache.accumulo.start.classloader.AccumuloClassLoader;
import org.apache.log4j.Logger;


public class ConstraintLoader
{
    private static final Logger log = Logger.getLogger(ConstraintLoader.class);

    public static ConstraintChecker load(String table) throws IOException
    {
        try {

            AccumuloConfiguration conf = ServerConfiguration.getTableConfiguration(table);

            ConstraintChecker cc = new ConstraintChecker();

            for (Entry<String, String> entry : conf) {
                if (entry.getKey().startsWith(Property.TABLE_CONSTRAINT_PREFIX.getKey())) {
                    String className = entry.getValue();
                    Class<? extends Constraint> clazz = AccumuloClassLoader.loadClass(className, Constraint.class);
                    log.debug(""Loaded constraint "" + clazz.getName() + "" for "" + table);
                    cc.addConstraint(clazz.newInstance());
                }
            }

            return cc;
        } catch (ClassNotFoundException e) {
            log.error(e.toString());
            throw new IOException(e);
        } catch (InstantiationException e) {
            log.error(e.toString());
            throw new IOException(e);
        } catch (IllegalAccessException e) {
            log.error(e.toString());
            throw new IOException(e);
        }
    }
}",Return empty string instead.
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/util/CleanZookeeper.java,"import org.apache.accumulo.fate.zookeeper.IZooReaderWriter;
import org.apache.accumulo.fate.zookeeper.ZooUtil.NodeMissingPolicy;","Remove this call to ""exit"" or ensure it is really required."
096371a818a6160aa7fed456e8dae6d92f470a07,server/src/main/java/org/apache/accumulo/server/zookeeper/TransactionWatcher.java,"      String path = ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid;
      writer.putPersistentData(ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid + ""-running"", new byte[] {}, NodeExistsPolicy.OVERWRITE);
    
    public static void cleanup(String type, long tid) throws KeeperException, InterruptedException {
      Instance instance = HdfsZooInstance.getInstance();
      IZooReaderWriter writer = ZooReaderWriter.getInstance();
      writer.recursiveDelete(ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid, NodeMissingPolicy.SKIP);
      writer.recursiveDelete(ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid + ""-running"", NodeMissingPolicy.SKIP);
    }

    @Override
    public boolean transactionComplete(String type, long tid) throws Exception {
      String path = ZooUtil.getRoot(instance) + ""/"" + type + ""/"" + tid + ""-running"";
      rdr.sync(path);
      return !rdr.exists(path);
    }",Either log or rethrow this exception.
f95fca397d7ef2aecc84ea5911599d334372b3c6,minicluster/src/test/java/org/apache/accumulo/minicluster/MiniAccumuloClusterGCTest.java,"import java.util.Collection;
  public void testFilesAreGarbageCollected() throws Exception {
  @Test(timeout = 10000)
  public void testAccurateProcessListReturned() throws Exception {
    Map<ServerType,Collection<ProcessReference>> procs = accumulo.getProcesses();
    
    for (ServerType t : new ServerType[] {ServerType.MASTER, ServerType.TABLET_SERVER, ServerType.ZOOKEEPER, ServerType.GARBAGE_COLLECTOR}) {
      Assert.assertTrue(procs.containsKey(t));
      Collection<ProcessReference> procRefs = procs.get(t);
      Assert.assertTrue(1 <= procRefs.size());
      
      for (ProcessReference procRef : procRefs) {
        Assert.assertNotNull(procRef);
      }
    }
  }
",Define and throw a dedicated exception instead of using a generic one.
446a37a9795f2df7adc841154ca05add79cf286e,server/src/main/java/org/apache/accumulo/server/util/AddFilesWithMissingEntries.java,"import org.apache.accumulo.core.metadata.MetadataTable;
import org.apache.accumulo.core.metadata.schema.MetadataSchema;
import org.apache.accumulo.core.metadata.schema.MetadataSchema.TabletsSection;
import org.apache.accumulo.core.metadata.schema.MetadataSchema.TabletsSection.DataFileColumnFamily;
   * A utility to add files to the {@value MetadataTable#NAME} table that are not listed in the root tablet. This is a recovery tool for someone who knows what
   * they are doing. It might be better to save off files, and recover your instance by re-initializing and importing the existing files.
    scanner.setRange(MetadataSchema.TabletsSection.getRange());
      if (TabletsSection.ServerColumnFamily.DIRECTORY_COLUMN.hasColumns(key)) {
      } else if (key.compareColumnFamily(DataFileColumnFamily.NAME) == 0) {
          m.put(DataFileColumnFamily.NAME, new Text(filename), new Value(value.getBytes()));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
e7bb4680ca55dd5f1a31e034de842448882e768d,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/dirlist/Viewer.java,"package org.apache.accumulo.examples.simple.dirlist;
import org.apache.accumulo.examples.simple.filedata.FileDataQuery;",2 duplicated blocks of code must be removed.
43fc925412189045e4fccf0dc6cc87e6b40caa29,proxy/src/test/java/org/apache/accumulo/proxy/SimpleTest.java,"    props.put(""instance"", accumulo.getInstanceName());
    props.put(""zookeepers"", accumulo.getZooKeepers());
    props.put(""tokenClass"", PasswordToken.class.getName());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/tabletserver/MemoryManagementActions.java,  public List<KeyExtent> tabletsToMinorCompact;,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/functional/CacheTestWriter.java,package org.apache.accumulo.test.functional;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
d23cf3373dd3c8f77b747197575f30d6ee6d1321,proxy/src/main/java/org/apache/accumulo/proxy/Proxy.java,"      opts.prop.setProperty(api+"".zookeepers"", accumulo.getZooKeepers());","Define a constant instead of duplicating this literal ""digest"" 13 times."
af59f0ad10af71de2f7de9880a1dbe1595956cc5,test/src/main/java/org/apache/accumulo/test/randomwalk/security/WalkingSecurity.java,"import org.apache.accumulo.core.security.thrift.SecurityErrorCode;
import org.apache.accumulo.core.security.thrift.ThriftSecurityException;
import org.apache.accumulo.core.security.tokens.AuthenticationToken;
import org.apache.accumulo.core.security.tokens.PasswordToken;",1 duplicated blocks of code must be removed.
9cc068dd87d479bbc6f1445e9003b02682144751,core/src/main/java/org/apache/accumulo/core/util/Pair.java,"public class Pair<A,B> implements Comparable<Pair<A,B>> {


  @Override
  public int compareTo(Pair<A, B> abPair) {
    int cmp = ((Comparable<A>) first).compareTo(abPair.first);
    if (cmp == 0) {
      cmp = ((Comparable<B>) second).compareTo(abPair.second);
    }

    return cmp;
  }",Rename this generic name to match the regular expression '^[A-Z]$'.
5242f3ec228783d7da9a489f226c5665d83adf18,core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,"import org.apache.accumulo.core.util.shell.commands.DeleteShellterCommand;
import org.apache.accumulo.core.util.shell.commands.ListShellIterCommand;
import org.apache.accumulo.core.util.shell.commands.SetShellIterCommand;
  public Map<String,List<IteratorSetting>> iteratorProfiles = new HashMap<String,List<IteratorSetting>>();
    Command[] iteratorCommands = {new DeleteIterCommand(), new DeleteScanIterCommand(), new ListIterCommand(), new SetIterCommand(), new SetScanIterCommand(),
        new SetShellIterCommand(), new ListShellIterCommand(), new DeleteShellterCommand()};",Move this constructor to comply with Java Code Conventions.
b651adf29c5e8419e153616a2cbf6f7bdf75cf92,src/core/src/main/java/org/apache/accumulo/core/client/IteratorSetting.java,"import java.util.Collections;
   * @deprecated Since 1.4.1, see {@link IteratorSetting.getOptions}
   * @deprecated Since 1.4.1, see {@link IteratorSetting.clearOptions} and {@link IteratorSetting.setOptions}
   * @deprecated Since 1.4.1, see {@link IteratorSetting.getOptions} and test {@link Map.isEmpty}
   * Get the configuration parameters for this iterator.
   * 
   * @return the properties
   */
  public Map<String,String> getOptions() {
    return Collections.unmodifiableMap(properties);
  }
  
  /**",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
bd5f4f05975ec1cf0f3cf715d9d0094ababd8e73,core/src/main/java/org/apache/accumulo/core/util/shell/commands/TraceCommand.java,"        Trace.on(""shell:"" + shellState.getPrincipal());","Immediately return this expression instead of assigning it to the temporary variable ""connector""."
46f62443bafcc573637ecc889940499fd92640cf,src/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsHelper.java,"    if (!exists(tableName))
      throw new TableNotFoundException(null, tableName, null);
    if (!exists(tableName))
      throw new TableNotFoundException(null, tableName, null);
    if (!exists(tableName))
      throw new TableNotFoundException(null, tableName, null);
    if (!exists(tableName))
      throw new TableNotFoundException(null, tableName, null);",Either log or rethrow this exception.
82f1106343e0d07feb4c8dcb702dceba3e2e30c4,test/src/test/java/org/apache/accumulo/test/MetaSplitTest.java,"import org.apache.accumulo.mini.MiniAccumuloCluster;
import org.apache.accumulo.mini.MiniAccumuloConfig;",This block of commented-out lines of code should be removed.
3de0c1ec44d476fe1465eb05d33c32de3ccf1068,server/src/main/java/org/apache/accumulo/server/util/LocalityCheck.java,"import com.google.common.net.HostAndPort;

          HostAndPort hap = HostAndPort.fromParts(location, 0);
          if (hap.getHostText().equals(host)) {","Remove this unused method parameter ""threadName""."
040f891216154de5f7c8a87e25cefc0f816aea9c,test/src/test/java/org/apache/accumulo/test/functional/StartIT.java,  @Test(timeout = 10 * 1000),Either log or rethrow this exception.
8f35d25c6daa7026a34cc322f30d740a7de8c0c2,src/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"    // look for hints of a failure on the previous tablet server
    if (!logEntries.isEmpty() || needsMajorCompaction(MajorCompactionReason.NORMAL)) {
      // look for any temp files hanging around
      removeOldTemporaryFiles();
    }
",Return empty string instead.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/server/src/main/java/org/apache/accumulo/server/tabletserver/TabletState.java,"package org.apache.accumulo.server.tabletserver;

import org.apache.accumulo.core.data.KeyExtent;

public interface TabletState {
	KeyExtent getExtent();
	long getLastCommitTime();
	long getMemTableSize();
	long getMinorCompactingMemTableSize();
}",Return empty string instead.
20d587c571bc0bb7fc8251c9e6701fe843291837,fate/src/main/java/org/apache/accumulo/fate/zookeeper/IZooReaderWriter.java,"  public abstract void sync(String path) throws KeeperException, InterruptedException;
  ",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
d39ffa4191678072630915e1157855bc7d17cbf7,core/src/main/java/org/apache/accumulo/core/conf/Property.java,"  public synchronized static boolean isValidTablePropertyKey(String key) {
      if (validTableProperties == null) {
  	    validTableProperties = new HashSet<String>();
        for (Property p : Property.values()) {
          if (!p.getType().equals(PropertyType.PREFIX) && p.getKey().startsWith(Property.TABLE_PREFIX.getKey())) {
        	  validTableProperties.add(p.getKey());
          }",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/iterators/AggregatingIterator.java,"    if (iterator.getTopKey().isDeleted())
      return;
      if (classname == null)
        return false;","Remove this call to ""exit"" or ensure it is really required."
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/monitor/util/celltypes/StringType.java,"  @Override
  public String format(Object obj) {
    return obj == null ? ""-"" : obj.toString();
  }
  
  @Override
  public int compare(T o1, T o2) {
    if (o1 == null && o2 == null) return 0;
    else if (o1 == null) return -1;
    else if (o2 == null) return 1;
    return o1.toString().compareTo(o2.toString());
  }
  
  @Override
  public String alignment() {
    return ""left"";
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
74fd052838755d2d96c66761633b576918269c55,src/server/src/main/java/org/apache/accumulo/server/master/Master.java,"                  setMergeState(stats.getMergeInfo(), update = MergeState.COMPLETE);
            if (update == MergeState.COMPLETE)
              update = MergeState.NONE;",Extract the assignment out of this expression.
2a29e643aa756cae8b53866ec861a0fc8a4d6d71,examples/instamo/src/main/java/org/apache/accumulo/instamo/AccumuloApp.java,"import org.apache.accumulo.core.security.tokens.UserPassToken;
    Connector conn = instance.getConnector(new UserPassToken(""root"", rootPassword));",Either log or rethrow this exception.
b8859513a7f9cec03d7af3f45c7516344798fe06,test/src/main/java/org/apache/accumulo/test/randomwalk/concurrent/CreateUser.java,import org.apache.accumulo.core.client.security.tokens.PasswordToken;,1 duplicated blocks of code must be removed.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/BatchWrite.java,"      if (mre.getCause() instanceof TableDeletedException)
        log.debug(""BatchWrite "" + tableName + "" failed, table deleted"");
      else if (mre.getCause() instanceof TableOfflineException)
        log.debug(""BatchWrite "" + tableName + "" failed, offline"");
      else
        throw mre;","Remove this call to ""exit"" or ensure it is really required."
1d138a73ad757c12b3d30aa1a6029b63cc3eaa66,core/src/main/java/org/apache/accumulo/core/client/mock/MockInstance.java,"import org.apache.accumulo.core.security.tokens.PasswordToken;
import org.apache.accumulo.core.security.tokens.SecurityToken;",Replace all tab characters in this file by sequences of white-spaces.
7812b78e878300e65f38f24fd74c87ce4d18ada7,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"      MasterClientService.Client client = ThriftUtil.getClient(new MasterClientService.Client.Factory(), address,","Immediately return this expression instead of assigning it to the temporary variable ""client""."
8992380c18cc3b46b35f922b5fecc5cae9371aad,src/wikisearch/query/src/main/java/org/apache/accumulo/wikisearch/iterator/AbstractEvaluatingIterator.java,"package org.apache.accumulo.wikisearch.iterator;
import org.apache.accumulo.wikisearch.parser.EventFields;
import org.apache.accumulo.wikisearch.parser.QueryEvaluator;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/gc/thrift/GCStatus.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */","Remove this unused private ""appendProp"" method."
9b0751a7e22c8ba88ae5f78589541b041055b09b,src/core/src/main/java/org/apache/accumulo/core/iterators/aggregation/NumSummation.java," * @deprecated since 1.4, replaced by {@link org.apache.accumulo.core.iterators.user.SummingCombiner} with
 *             {@link org.apache.accumulo.core.iterators.LongCombiner.Type#VARLEN}",Do not forget to remove this deprecated code someday.
37f5f60dfa778b82f540256fd3e8df03fd55347c,core/src/main/java/org/apache/accumulo/core/Constants.java,"  public static final String METADATA_DELETE_FLAG_FOR_METADATA_PREFIX = ""!!"" + METADATA_DELETE_FLAG_PREFIX;
  public static final Range METADATA_DELETES_FOR_METADATA_KEYSPACE = new Range(new Key(new Text(METADATA_DELETE_FLAG_FOR_METADATA_PREFIX)), true, new Key(new Text(""!!~dem"")), false);",Move this variable to comply with Java Code Conventions.
f6cc2a5119f5b6a4225d2354d227df95fcb0cedf,examples/simple/src/test/java/org/apache/accumulo/examples/simple/filedata/ChunkInputFormatTest.java,"import java.nio.charset.Charset;
      ChunkInputFormat.setConnectorInfo(job, user, pass.getBytes(Charset.forName(""UTF-8"")));
    Connector conn = instance.getConnector(""root"", """".getBytes());
    BatchWriter bw = conn.createBatchWriter(""test"", new BatchWriterConfig());
    Connector conn = instance.getConnector(""root"", """".getBytes());
    BatchWriter bw = conn.createBatchWriter(""test"", new BatchWriterConfig());
    Connector conn = instance.getConnector(""root"", """".getBytes());
    BatchWriter bw = conn.createBatchWriter(""test"", new BatchWriterConfig());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c23ab5a8f436296381c455d509d2b9cb8965aa23,start/src/main/java/org/apache/accumulo/start/classloader/vfs/providers/HdfsFileObject.java,"package org.apache.accumulo.start.classloader.vfs.providers;
import org.apache.commons.vfs2.provider.AbstractFileName;
import org.apache.commons.vfs2.provider.AbstractFileObject;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/trace/NullKeyValueIterator.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/test/java/org/apache/accumulo/core/client/admin/TableOperationsHelperTest.java,    @Deprecated,"Remove this unused private ""appendProp"" method."
3dbd87897442d632a09660f5bb5667c28e4bf9c4,core/src/main/java/org/apache/accumulo/core/gc/thrift/GcCycleStats.java," * Autogenerated by Thrift Compiler (0.9.0)
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
  private byte __isset_bitfield = 0;
    __isset_bitfield = other.__isset_bitfield;
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STARTED_ISSET_ID);
    return EncodingUtils.testBit(__isset_bitfield, __STARTED_ISSET_ID);
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STARTED_ISSET_ID, value);
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FINISHED_ISSET_ID);
    return EncodingUtils.testBit(__isset_bitfield, __FINISHED_ISSET_ID);
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FINISHED_ISSET_ID, value);
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CANDIDATES_ISSET_ID);
    return EncodingUtils.testBit(__isset_bitfield, __CANDIDATES_ISSET_ID);
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CANDIDATES_ISSET_ID, value);
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INUSE_ISSET_ID);
    return EncodingUtils.testBit(__isset_bitfield, __INUSE_ISSET_ID);
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INUSE_ISSET_ID, value);
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DELETED_ISSET_ID);
    return EncodingUtils.testBit(__isset_bitfield, __DELETED_ISSET_ID);
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DELETED_ISSET_ID, value);
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ERRORS_ISSET_ID);
    return EncodingUtils.testBit(__isset_bitfield, __ERRORS_ISSET_ID);
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ERRORS_ISSET_ID, value);
    // check for sub-struct validity
      __isset_bitfield = 0;",Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/functional/DropModIter.java,package org.apache.accumulo.test.functional;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
ea3e2ea8ad34493a95f5aad56410ed4c6950fae8,server/src/main/java/org/apache/accumulo/server/test/scalability/Ingest.java,"import org.apache.accumulo.core.security.ColumnVisibility;
    ColumnVisibility cv = new ColumnVisibility();

      Mutation m = ContinuousIngest.genMutation(rowId, r.nextInt(maxColF), r.nextInt(maxColQ), cv, ingestInstanceId.getBytes(), count, null, r, false);","Remove this unused method parameter ""r""."
5ee669d0db014693ed3ce9a46cc06b5d26ff3be4,server/src/main/java/org/apache/accumulo/server/master/TServerLockWatcher.java,  public void unableToMonitorLockNode(Throwable e) {},"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation."
322e0359ac5d35d3774c47507aed07760397513a,src/core/src/main/java/org/apache/accumulo/core/iterators/AggregatingIterator.java, * @see org.apache.accumulo.core.iterators.Combiner,1 duplicated blocks of code must be removed.
5bd33fa1e9625e3c088ee39f626c256aca75b0da,server/src/main/java/org/apache/accumulo/server/master/Master.java,"import org.apache.accumulo.core.client.BatchWriterConfig;
              BatchWriter bw = getConnector().createBatchWriter(Constants.METADATA_TABLE_NAME, new BatchWriterConfig());

        BatchWriter bw = conn.createBatchWriter(Constants.METADATA_TABLE_NAME,
 new BatchWriterConfig());
          bw = conn.createBatchWriter(Constants.METADATA_TABLE_NAME, new BatchWriterConfig());
        bw = conn.createBatchWriter(Constants.METADATA_TABLE_NAME, new BatchWriterConfig());","Remove this unused method parameter ""e""."
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/functional/ScanRangeTest.java,package org.apache.accumulo.test.functional;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/upgrade/UpgradeAccumuloSite.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
        
        List<PropertyValueDescription> contents = new ArrayList<PropertyValueDescription>();
        public void startElement(String uri, String localName, String name, Attributes attributes) throws SAXException {
        public void characters(char[] ch, int start, int length) throws SAXException {
        
        public void endElement(String uri, String localName, String name) throws SAXException {
            
                
                        if (value % 1000 == 0) entry.value = String.format(""%ds"", value / 1000);
                        else entry.value = String.format(""%.2fs"", value / 1000.);
                if (entry.property.equals(""table.scan.max.time"")) entry.value = entry.value + ""ms"";
            if (entry.description.trim().length() > 0) out.println(""      <description>"" + entry.description + ""</description>"");
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/master/state/TabletStateChangeIterator.java,      byte[] data = Base64.decodeBase64(merges.getBytes());,"Remove this unused private ""appendProp"" method."
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/client/RandomBatchWriter.java,package org.apache.accumulo.examples.simple.client;,"Rename ""table"" which hides the field declared at line 107."
9c1ca8028497c66cad55470eae688fd92aedb6d2,src/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"import org.apache.accumulo.core.iterators.SortedKeyValueIterator;
import org.apache.accumulo.core.iterators.system.VisibilityFilter;
import org.apache.accumulo.core.util.MetadataTable.DataFileValue;
import org.apache.accumulo.server.util.TabletOperations;
      long rtime = Long.MIN_VALUE;
        if (maxTime > rtime) {
          time = TabletTime.LOGICAL_TIME_ID + """" + maxTime;
          rtime = maxTime;","Introduce a new variable instead of reusing the parameter ""time""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/iterators/VersioningIterator.java,"    if (maxVersions < 1)
      throw new IllegalArgumentException(""maxVersions for versioning iterator must be >= 1"");
    if (super.hasTop())
      currentKey.set(getSource().getTopKey());
    if (maxVerString != null)
      this.maxVersions = Integer.parseInt(maxVerString);
    else
      this.maxVersions = 1;
    if (maxVersions < 1)
      throw new IllegalArgumentException(""maxVersions for versioning iterator must be >= 1"");
    if (i < 1)
      throw new IllegalArgumentException(MAXVERSIONS_OPT + "" for versioning iterator must be >= 1"");","Remove this call to ""exit"" or ensure it is really required."
83ec5ed392729a90ab458173dc14f98140654da5,src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingArrayCombiner.java,"import org.apache.accumulo.core.iterators.ValueFormatException;
        throw new ValueFormatException(e);
          try {
            la.add(Long.parseLong(s));
          } catch (NumberFormatException nfe) {
            throw new ValueFormatException(nfe);
          }",Move this variable to comply with Java Code Conventions.
0e893ecd84966abf4dd6d7f18af26569d42feb4e,server/src/main/java/org/apache/accumulo/server/gc/SimpleGarbageCollector.java,"  private boolean moveToTrash(Path path) throws IOException {
    if (trash == null)
      return false;
    try {
      return trash.moveToTrash(path);
    } catch (FileNotFoundException ex) {
      return false;
    }
  }
  
        if (!moveToTrash(p)) 
            if (moveToTrash(p) || fs.delete(p, true)) {",Either log or rethrow this exception.
2ff1c887e06db996fc2c6afca036f89be0ed6b4c,src/server/src/main/java/org/apache/accumulo/server/monitor/servlets/DefaultServlet.java,"import org.apache.hadoop.ipc.RemoteException;
        Path path = new Path(ServerConfiguration.getSystemConfiguration().get(Property.INSTANCE_DFS_DIR));
        log.debug(""Reading the content summary for "" + path);
        ContentSummary acu = fs.getContentSummary(path);
        consumed = String.format(""%.2f%%"", acu.getSpaceConsumed() * 100. / fs.getUsed());
        
        boolean highlight = false;
        tableRow(sb, (highlight = !highlight), ""Disk&nbsp;Used"", diskUsed);
        tableRow(sb, (highlight = !highlight), ""%&nbsp;of&nbsp;Used&nbsp;DFS"", consumed);
        tableRow(sb, (highlight = !highlight), ""<a href='/tables'>Tables</a>"", NumberType.commas(Monitor.getTotalTables()));
        tableRow(sb, (highlight = !highlight), ""<a href='/tservers'>Tablet&nbsp;Servers</a>"", NumberType.commas(info.tServerInfo.size()));
        tableRow(sb, (highlight = !highlight), ""<a href='/tservers'>Dead&nbsp;Tablet&nbsp;Servers</a>"", NumberType.commas(info.deadTabletServers.size()));
        tableRow(sb, (highlight = !highlight), ""Tablets"", NumberType.commas(Monitor.getTotalTabletCount()));
        tableRow(sb, (highlight = !highlight), ""Entries"", NumberType.commas(Monitor.getTotalEntries()));
        tableRow(sb, (highlight = !highlight), ""Lookups"", NumberType.commas(Monitor.getTotalLookups()));
        tableRow(sb, (highlight = !highlight), ""Uptime"", Duration.format(System.currentTimeMillis() - Monitor.getStartTime()));
    } catch (RemoteException ex) {
      sb.append(""<tr><td colspan='2'>Permission&nbsp;Denied</td></tr>\n"");
      sb.append(""<tr><td colspan='2'><span class='error'>Down</span></td></tr>\n"");",Either log or rethrow this exception.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/master/CoordinateRecoveryTask.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/master/tableOps/RenameTable.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
1d138a73ad757c12b3d30aa1a6029b63cc3eaa66,core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,import org.apache.accumulo.core.security.tokens.PasswordToken;,Replace all tab characters in this file by sequences of white-spaces.
5bd33fa1e9625e3c088ee39f626c256aca75b0da,core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloOutputFormat.java,"import java.util.concurrent.TimeUnit;
import org.apache.accumulo.core.client.BatchWriterConfig;
  private static final String TIMEOUT = PREFIX + "".timeout"";
  /**
   * see {@link BatchWriterConfig#setMaxMemory(long)}
   */

  /**
   * see {@link BatchWriterConfig#setMaxLatency(long, TimeUnit)}
   */

  /**
   * see {@link BatchWriterConfig#setMaxWriteThreads(int)}
   */

  /**
   * see {@link BatchWriterConfig#setTimeout(long, TimeUnit)}
   */
  
  public static void setTimeout(Configuration conf, long time, TimeUnit timeUnit) {
    conf.setLong(TIMEOUT, timeUnit.toMillis(time));
  }

  protected static long getTimeout(Configuration conf) {
    return conf.getLong(TIMEOUT, Long.MAX_VALUE);
  }

        mtbw = conn.createMultiTableBatchWriter(new BatchWriterConfig().setMaxMemory(getMaxMutationBufferSize(conf))
            .setMaxLatency(getMaxLatency(conf), TimeUnit.MILLISECONDS).setMaxWriteThreads(getMaxWriteThreads(conf))
            .setTimeout(getTimeout(conf), TimeUnit.MILLISECONDS));","Remove this unused method parameter ""e""."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,trace/src/main/java/org/apache/accumulo/cloudtrace/instrument/thrift/TraceWrap.java,"          try {
            return method.invoke(instance, args);
          } catch (InvocationTargetException ex) {
            throw ex.getCause();
          }","Remove this unused private ""appendProp"" method."
53ae8d50cf3a303bf239e2dca6d836cc6ab7cef5,server/src/main/java/org/apache/accumulo/server/mini/ServerType.java,"  MASTER(""Master""), ZOOKEEPER(""ZooKeeper""), TABLET_SERVER(""TServer"");

  private final String prettyPrint;

  public String prettyPrint() {
    return prettyPrint;
  }

  ServerType(String prettyPrint) {
    this.prettyPrint = prettyPrint;
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/functional/LargeRowTest.java,"package org.apache.accumulo.test.functional;
import org.apache.accumulo.test.TestIngest;","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,examples/simple/src/main/java/org/apache/accumulo/examples/simple/isolation/InterferenceTest.java,"import org.apache.accumulo.core.cli.BatchWriterOpts;
import org.apache.accumulo.core.cli.ClientOnRequiredTable;
import com.beust.jcommander.Parameter;

    private final BatchWriter bw;
    private final long iterations;
    Writer(BatchWriter bw, long iterations) {
      this.iterations = iterations; 
  static class Opts extends ClientOnRequiredTable {
    @Parameter(names=""--iterations"", description=""number of times to run"", required=true)
    long iterations = 0;
    @Parameter(names=""--isolated"", description=""use isolated scans"")
    boolean isolated = false;
  }
  
  
    Opts opts = new Opts();
    BatchWriterOpts bwOpts = new BatchWriterOpts();
    opts.parseArgs(InterferenceTest.class.getName(), args, bwOpts);
    if (opts.iterations < 1)
      opts.iterations = Long.MAX_VALUE;
    Connector conn = opts.getConnector();
    if (!conn.tableOperations().exists(opts.tableName))
      conn.tableOperations().create(opts.tableName);
    Thread writer = new Thread(new Writer(conn.createBatchWriter(opts.tableName, bwOpts.getBatchWriterConfig()), opts.iterations));
    if (opts.isolated)
      r = new Reader(new IsolatedScanner(conn.createScanner(opts.tableName, opts.auths)));
      r = new Reader(conn.createScanner(opts.tableName, opts.auths));","Remove this unused private ""appendProp"" method."
2db5ce6186e32c451328154b024951cc5090505f,core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsImpl.java,"import org.apache.accumulo.core.util.NamingThreadFactory;
    ExecutorService executor = Executors.newFixedThreadPool(16, new NamingThreadFactory(""addSplits""));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
8b4f7b02fae7517e3482b0b5274456333b512e3d,server/src/main/java/org/apache/accumulo/server/util/MetadataTable.java,"    Constants.METADATA_LOCK_COLUMN.put(m, new Value(zooLock.getLockID().serialize(ZooUtil.getRoot(HdfsZooInstance.getInstance()) + ""/"").getBytes()));
      Constants.METADATA_TIME_COLUMN.put(m, new Value(time.getBytes()));
    Constants.METADATA_FLUSH_COLUMN.put(m, new Value((flushId + """").getBytes()));
      Constants.METADATA_FLUSH_COLUMN.put(m, new Value((flushID + """").getBytes()));
      Constants.METADATA_COMPACT_COLUMN.put(m, new Value((compactID + """").getBytes()));
    Constants.METADATA_TIME_COLUMN.put(m, new Value(time.getBytes()));
    Constants.METADATA_DIRECTORY_COLUMN.put(m, new Value(path.getBytes()));
    Constants.METADATA_TIME_COLUMN.put(m, new Value((timeType + ""0"").getBytes()));
    Constants.METADATA_DIRECTORY_COLUMN.put(m, new Value(path.getBytes()));
    Constants.METADATA_TIME_COLUMN.put(m, new Value(time.getBytes()));
      Constants.METADATA_FLUSH_COLUMN.put(m, new Value(("""" + lastFlushID).getBytes()));
      Constants.METADATA_COMPACT_COLUMN.put(m, new Value(("""" + lastCompactID).getBytes()));
    Constants.METADATA_SPLIT_RATIO_COLUMN.put(m, new Value(Double.toString(splitRatio).getBytes()));
    Constants.METADATA_OLD_PREV_ROW_COLUMN.put(m, KeyExtent.encodePrevEndRow(oldPrevEndRow));
    Constants.METADATA_CHOPPED_COLUMN.putDelete(m);
    Constants.METADATA_SPLIT_RATIO_COLUMN.putDelete(m);
    Constants.METADATA_OLD_PREV_ROW_COLUMN.putDelete(m);
    Constants.METADATA_CHOPPED_COLUMN.putDelete(m);
      Constants.METADATA_COMPACT_COLUMN.put(m, new Value(("""" + compactionId).getBytes()));
      Constants.METADATA_DIRECTORY_COLUMN.fetch(ms);
    Constants.METADATA_PREV_ROW_COLUMN.fetch(mscanner);
    Constants.METADATA_TIME_COLUMN.fetch(mscanner);
      Constants.METADATA_DIRECTORY_COLUMN.put(m, new Value(FastFormat.toZeroPaddedString(dirCount++, 8, 16, ""/c-"".getBytes())));
    Constants.METADATA_CHOPPED_COLUMN.put(m, new Value(""chopped"".getBytes()));",Replace all tab characters in this file by sequences of white-spaces.
b0c0dac56efec35ecb0421570a1f7916d273ae5a,src/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"  boolean minorCompactNow() {
    long flushId;
    try {
      flushId = getFlushID();
    } catch (NoNodeException e) {
      log.info(""Asked to initiate MinC when there was no flush id "" + getExtent() + "" "" + e.getMessage());
      return false;
    }
    MinorCompactionTask mct = createMinorCompactionTask(flushId);
    if (mct == null)
      return false;
    mct.run();
    return true;
  }

    MinorCompactionTask mct = createMinorCompactionTask(flushId);
    if (mct == null)
      return false;
    tabletResources.executeMinorCompaction(mct);
    return true;
  }
  
  private MinorCompactionTask createMinorCompactionTask(long flushId) {
          return null;
          return null;
    return mct;","Remove this unused private ""match"" method."
f23e08147fcc05637c69996475e92db89e323a68,server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"        constraintChecker.set(new ConstraintChecker(getTableConfiguration()));
  public void checkConstraints() {
    ConstraintChecker cc = constraintChecker.get();
    
    if (cc.classLoaderChanged()) {
      ConstraintChecker ncc = new ConstraintChecker(getTableConfiguration());
      constraintChecker.compareAndSet(cc, ncc);
    }
  }
",Either log or rethrow this exception.
48e331cc2d55a37421b5dd7bbb45e91657ea811f,core/src/main/java/org/apache/accumulo/core/util/shell/commands/CreateTableCommand.java,      partitions.addAll(shellState.getConnector().tableOperations().listSplits(oldTable));,Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/file/blockfile/cache/CacheEntry.java,"package org.apache.accumulo.core.file.blockfile.cache;

public class CacheEntry {
	private String fName;
	private Long hash;
	

	public CacheEntry(String name, Long time){
		this.hash = time;
		this.fName = name;
	}
	
	@Override
	public boolean equals(Object other)
	{
		return
		
		((CacheEntry)other).getName().equals(fName) 
		&& ((CacheEntry)other).getHashInfo().equals(hash)
		&& ((CacheEntry)other).getName().equals(fName) 
		&& ((CacheEntry)other).getHashInfo().equals(hash);
		
	}
	
	
	@Override
	public int hashCode()
	{
		return fName.hashCode() + hash.hashCode();
	}
	
	public String getName(){
		return fName;
	}
	
	public Long getHashInfo(){
		
		return this.hash;
	}
	public long length(){
		return fName.length() + Long.SIZE;
	}
	
}",Return empty string instead.
3dee665c59730f298fa71cba720c5db2c285c4cf,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/dirlist/FileCount.java,"/**
 * Computes recursive counts over file system information and stores them back into the same Accumulo table. See docs/examples/README.dirlist for instructions.
 */",1 duplicated blocks of code must be removed.
99c72d2af982ee64a1804e32bd3c33567ab91982,src/core/src/main/java/org/apache/accumulo/core/client/mapreduce/AccumuloOutputFormat.java,  private static final int DEFAULT_MAX_LATENCY = 60 * 1000; // 1 minute,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
98791b932db375c661fe6113d1311671600343ae,test/src/test/java/org/apache/accumulo/test/functional/MetadataMaxFiles.java,"import static org.junit.Assert.assertEquals;
import org.apache.accumulo.core.metadata.MetadataTable;
import org.apache.accumulo.core.metadata.RootTable;
    Map<String,String> siteConfig = new HashMap<String,String>();
    cfg.setSiteConfig(siteConfig);
  
  @Test(timeout = 240 * 1000)
    UtilWaitThread.sleep(20 * 1000);
    
    UtilWaitThread.sleep(30 * 1000);
    ","Remove this unused ""entry"" local variable."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/conf/AccumuloConfiguration.java,"          // case
          return Long.parseLong(str.substring(0, str.length() - 2));
    if (str.charAt(str.length() - 1) == '%')
      return Double.parseDouble(str.substring(0, str.length() - 1)) / 100.0;","Remove this call to ""exit"" or ensure it is really required."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/file/rfile/RelativeKey.java,"      if (prevKey.getRowData().equals(key.getRowData()))
        fieldsSame |= ROW_SAME;
      if (prevKey.getColumnFamilyData().equals(key.getColumnFamilyData()))
        fieldsSame |= CF_SAME;
      if (prevKey.getColumnQualifierData().equals(key.getColumnQualifierData()))
        fieldsSame |= CQ_SAME;
      if (prevKey.getColumnVisibilityData().equals(key.getColumnVisibilityData()))
        fieldsSame |= CV_SAME;
      if (prevKey.getTimestamp() == key.getTimestamp())
        fieldsSame |= TS_SAME;
    if (key.isDeleted())
      fieldsSame |= DELETED;
        if (rowCmp > 0)
          return 0;
          if (cfCmp > 0)
            return 0;
          if (cqCmp >= 0)
            return 0;
        if (rowCmp > 0)
          break;
          if (cfCmp > 0)
            break;
          if (cqCmp >= 0)
            break;","Remove this call to ""exit"" or ensure it is really required."
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/master/balancer/LoggerBalancer.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    /**
     * Assign loggers to tablet servers
     * 
     * @param current
     *            The loggers assigned to each tablet server
     * @param loggers
     *            The list of current loggers
     * @param assignmentsOut
     *            the assignments to give to tablet servers
     */
    public abstract void balance(List<LoggerUser> current, List<String> loggers, Map<LoggerUser,List<String>> assignmentsOut, int loggersPerServer);
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/zookeeper/ZooLock.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
93773813e5839ac9ffb4f5a2b2b70bcedb106286,server/src/main/java/org/apache/accumulo/server/security/SecurityOperation.java,"import org.apache.accumulo.core.util.MetadataTable;
      permHandle.grantTablePermission(rootPrincipal, MetadataTable.ID, TablePermission.ALTER_TABLE);
    if (table.equals(MetadataTable.ID) && permission.equals(TablePermission.READ))","Use ""Long.toString"" instead."
4661491d0b1de8fe4d5ce1d3534de01546bfb3df,test/src/test/java/org/apache/accumulo/test/functional/SplitIT.java,"public class SplitIT extends ConfigurableMacIT {
        cluster.exec(CheckForMetadataProblems.class, ""-i"", cluster.getInstanceName(), ""-u"", ""root"", ""-p"", ROOT_PASSWORD, ""-z"", cluster.getZooKeepers())","Use ""Integer.toString"" instead."
35f8e2b1868cea9849efae7fae21e8ac789a0817,core/src/main/java/org/apache/accumulo/core/client/mock/MockShell.java,"import java.nio.charset.Charset;

  private static final Charset utf8 = Charset.forName(""UTF8"");
    return new ByteArrayInputStream(sb.toString().getBytes(utf8));",Move this variable to comply with Java Code Conventions.
8a33be695e0bcb769412db499df9cbec23004740,server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousMoru.java,"import org.apache.accumulo.core.cli.BatchWriterOpts;
    BatchWriterOpts bwOpts = new BatchWriterOpts();
    opts.parseArgs(ContinuousMoru.class.getName(), args, bwOpts);
    AccumuloOutputFormat.setMaxLatency(job.getConfiguration(), (int) (bwOpts.batchLatency / 1000.0));
    AccumuloOutputFormat.setMaxMutationBufferSize(job.getConfiguration(), bwOpts.batchMemory);
    AccumuloOutputFormat.setMaxWriteThreads(job.getConfiguration(), bwOpts.batchThreads);","Remove this unused method parameter ""opts""."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/master/tableOps/CompactRange.java,"    if (tableId.equals(Constants.METADATA_TABLE_ID))
      range = range.clip(new Range(Constants.ROOT_TABLET_EXTENT.getMetadataEntry(), false, null, true));
        if (Constants.METADATA_COMPACT_COLUMN.equals(key.getColumnFamily(), key.getColumnQualifier()))
          tabletCompactID = Long.parseLong(entry.getValue().toString());
        if (Constants.METADATA_CURRENT_LOCATION_COLUMN_FAMILY.equals(key.getColumnFamily()))
          server = new TServerInstance(entry.getValue(), key.getColumnQualifier());
        if (server != null)
          serversToFlush.increment(server, 1);
      if (tabletEndRow == null || (endRow != null && tabletEndRow.compareTo(new Text(endRow)) >= 0))
        break;
    if (tabletCount == 0 && !Tables.exists(instance, tableId))
      throw new ThriftTableOperationException(tableId, null, TableOperation.COMPACT, TableOperationExceptionType.NOTFOUND, null);
    if (serversToFlush.size() == 0 && Tables.getTableState(instance, tableId) == TableState.OFFLINE)
      throw new ThriftTableOperationException(tableId, null, TableOperation.COMPACT, TableOperationExceptionType.OFFLINE, null);
    if (tabletsToWaitFor == 0)
      return 0;
        if (server != null)
          server.compact(master.getMasterLock(), tableId, startRow, endRow);
    if (serversToFlush.size() > 0)
      sleepTime = Collections.max(serversToFlush.values()) * sleepTime; // make wait time depend on the server with the most to
                                                                        // compact
      
    if (this.startRow != null && this.endRow != null && new Text(startRow).compareTo(new Text(endRow)) >= 0)
      throw new ThriftTableOperationException(tableId, null, TableOperation.COMPACT, TableOperationExceptionType.BAD_RANGE,
          ""start row must be less than end row"");","Remove this call to ""exit"" or ensure it is really required."
6a5500a5b3f34b26386877e332973e7b926aa4ce,server/src/main/java/org/apache/accumulo/server/security/handler/Authorizor.java,"import org.apache.accumulo.core.security.thrift.Credential;
  public void initializeSecurity(Credential credentials, String rootuser) throws AccumuloSecurityException, ThriftSecurityException;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,server/src/main/java/org/apache/accumulo/server/tabletserver/UniqueNameAllocator.java,import org.apache.accumulo.server.util.FastFormat;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
99da5641c28784c7b717cce6749673863c2ec8cf,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletServer.java,"        if (SystemCredentials.get().getToken().getClass().getName().equals(credentials.getTokenClassName())) {
    MetadataTableUtil.addLogEntry(SystemCredentials.get(), entry, getLock());
              mm.send(SystemCredentials.get().toThrift(instance), getClientAddressString(), iface);
    ScannerImpl scanner = new ScannerImpl(HdfsZooInstance.getInstance(), SystemCredentials.get(), tableToVerify, Authorizations.EMPTY);
        fke = MetadataTableUtil.fixSplit(metadataEntry, tabletEntries.get(metadataEntry), instance, SystemCredentials.get(), lock);","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
21c1154257eb107c4a351522c91d7cca34c5768c,core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsImpl.java,"    Path dirPath = fs.makeQualified(new Path(dir));
    if (!fs.exists(dirPath))

    List<ByteBuffer> args = Arrays.asList(ByteBuffer.wrap(tableName.getBytes()), ByteBuffer.wrap(dirPath.toString().getBytes()),
        ByteBuffer.wrap(failPath.toString().getBytes()), ByteBuffer.wrap((setTime + """").getBytes()));","Use ""Boolean.toString"" instead."
4325cd202245dc839d860ed6ce5ebc24bb452586,server/src/main/java/org/apache/accumulo/server/conf/ZooConfiguration.java,import org.apache.accumulo.fate.zookeeper.ZooCache;,"Remove this call to ""exit"" or ensure it is really required."
ccaad172643805d56f5dd46cbbc7dcd1a5519cbf,src/trace/src/main/java/org/apache/accumulo/cloudtrace/instrument/receivers/AsyncSpanReceiver.java,"package org.apache.accumulo.cloudtrace.instrument.receivers;
import org.apache.accumulo.cloudtrace.thrift.RemoteSpan;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/core/src/main/java/org/apache/accumulo/core/util/Merge.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
        
        MergeException(Exception ex) {
            super(ex);
        }
    
    protected void message(String format, Object... args) {
        Options options = new Options();
            
            
        
    public void mergomatic(Connector conn, String table, Text start, Text end, long goalSize, boolean force) throws MergeException {
            if (sizes.size() > 1) mergeMany(conn, table, sizes, goalSize, force, true);
    
            if (sizes.get(0).size < goalSize) break;
        long result = 0;
    
    protected void mergeSome(Connector conn, String table, List<Size> sizes, int numToMerge) throws MergeException {
    
    protected Iterator<Size> getSizeIterator(Connector conn, String tablename, Text start, Text end) throws MergeException {
        // open up the !METADATA table, walk through the tablets.
        final Iterator<Entry<Key,Value>> iterator = scanner.iterator();
            
                    Entry<Key,Value> entry = iterator.next();
                        String[] sizeEntries = new String(entry.getValue().get()).split("","");
            
            ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/functional/ConcurrencyTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,start/src/test/java/org/apache/accumulo/start/classloader/vfs/providers/ReadOnlyHdfsFileProviderTest.java,"  
  
    
    
  
  
  
    
    
  
    
    
  
  
  
  
  
  
  
      hdfs.close();  
    ",Replace all tab characters in this file by sequences of white-spaces.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/data/thrift/InitialMultiScan.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */","Remove this unused private ""appendProp"" method."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/test/java/org/apache/accumulo/server/master/balancer/DefaultLoadBalancerTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
34bd47a0c058b87ad3b90bb67425d66a1ec497c4,src/core/src/main/java/org/apache/accumulo/core/client/IteratorSetting.java,"  

  
    public Text getColumnQualifier() {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,contrib/accumulo_sample/ingest/src/main/java/protobuf/TermWeight.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/client/mock/MockBatchScanner.java,"  
  final List<Range> ranges = new ArrayList<Range>();
  
  public MockBatchScanner(MockTable mockTable, Authorizations authorizations) {
    super(mockTable, authorizations);
  }
  
  @Override
  public void setRanges(Collection<Range> ranges) {
    this.ranges.clear();
    this.ranges.addAll(ranges);
  }
  
  static class RangesFilter extends Filter {
    List<Range> ranges;
    public RangesFilter(SortedKeyValueIterator<Key,Value> iterator, List<Range> ranges) {
      super(iterator);
      this.ranges = ranges;
    public boolean accept(Key k, Value v) {
      for (Range r : ranges) {
        if (r.contains(k)) return true;
      }
      return false;
  }
  
  @Override
  public Iterator<Entry<Key,Value>> iterator() {
    SortedKeyValueIterator<Key,Value> i = new SortedMapIterator(table.table);
    try {
      i = new RangesFilter(createFilter(i), ranges);
      i.seek(new Range(), createColumnBSS(fetchedColumns), !fetchedColumns.isEmpty());
      return new IteratorAdapter(i);
    } catch (IOException e) {
      throw new RuntimeException(e);
  }
  
  @Override
  public void close() {}
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/ShellCompletor.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
b8859513a7f9cec03d7af3f45c7516344798fe06,server/src/main/java/org/apache/accumulo/server/security/SecurityOperation.java,"import org.apache.accumulo.core.client.impl.thrift.SecurityErrorCode;
import org.apache.accumulo.core.client.impl.thrift.ThriftSecurityException;
import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;",1 duplicated blocks of code must be removed.
86e79384c83dd369c06768b72278ad2f34396e09,server/src/main/java/org/apache/accumulo/server/monitor/servlets/trace/Basic.java,"import java.util.Map.Entry;
      int prefixLength = Property.TRACE_LOGIN_PROPERTIES.getKey().length()+1;
      for (Entry<String, String> entry : loginMap.entrySet()) {
        props.put(entry.getKey().substring(prefixLength), entry.getValue());
      }
      if (!props.containsKey(""principal""))
        props.put(""principal"", principal);","Make the ""log"" logger private static final and rename it to comply with the format ""LOG(?:GER)?""."
9dc244484b4d35859d4d22b27580a47ae7da0e1a,core/src/test/java/org/apache/accumulo/core/client/impl/TabletLocatorImplTest.java,"    Map<String,TabletServerMutations<Mutation>> binnedMutations = new HashMap<String,TabletServerMutations<Mutation>>();
  private void verify(Map<String,Map<KeyExtent,List<String>>> expected, Map<String,TabletServerMutations<Mutation>> actual) {
      TabletServerMutations<Mutation> atb = actual.get(server);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,trace/src/main/java/org/apache/accumulo/cloudtrace/thrift/TInfo.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */","Remove this unused private ""appendProp"" method."
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/functional/ScanIteratorTest.java,"package org.apache.accumulo.test.functional;
    IteratorSetting dropMod = new IteratorSetting(50, ""dropMod"", ""org.apache.accumulo.test.functional.DropModIter"");","Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DUCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/file/keyfunctor/ColumnQualifierFunctor.java,"package org.apache.accumulo.core.file.keyfunctor;

import org.apache.accumulo.core.data.ByteSequence;
import org.apache.accumulo.core.data.PartialKey;
import org.apache.accumulo.core.data.Range;
import org.apache.hadoop.util.bloom.Key;


public class ColumnQualifierFunctor implements KeyFunctor{

	@Override
	public org.apache.hadoop.util.bloom.Key transform(org.apache.accumulo.core.data.Key acuKey) {
		byte keyData[];
		  
		  ByteSequence row = acuKey.getRowData();
		  ByteSequence cf = acuKey.getColumnFamilyData();
		  ByteSequence cq = acuKey.getColumnQualifierData();
		  keyData = new byte[row.length()+cf.length()+cq.length()];
		  System.arraycopy(row.getBackingArray(), row.offset(), keyData, 0, row.length());
		  System.arraycopy(cf.getBackingArray(), cf.offset(), keyData, row.length(), cf.length());
		  System.arraycopy(cq.getBackingArray(), cq.offset(), keyData, row.length()+cf.length(), cq.length());
		  
		return new org.apache.hadoop.util.bloom.Key(keyData,1.0);
	}

	@Override
	public Key transform(Range range) {
		if(RowFunctor.isRangeInBloomFilter(range, PartialKey.ROW_COLFAM_COLQUAL)){
			return transform(range.getStartKey());
		}
		return null;
	}


}",Return empty string instead.
c31bf3aa2092782c65bf23839aac442f44127b39,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/CreateTable.java,"  
  @Override
  public void visit(State state, Properties props) throws Exception {
    Connector conn = state.getConnector();
    Random rand = (Random) state.get(""rand"");
    
    @SuppressWarnings(""unchecked"")
    List<String> tableNames = (List<String>) state.get(""tables"");
    
    String tableName = tableNames.get(rand.nextInt(tableNames.size()));
    
    try {
      conn.tableOperations().create(tableName);
      log.debug(""Created table "" + tableName);
    } catch (TableExistsException e) {
      log.debug(""Create "" + tableName + "" failed, it exist"");
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/util/FileSystemMonitor.java,"      if (mount.options.contains(""rw""))
        readWriteFilesystems.put(mount.mountPoint, true);
      else if (mount.options.contains(""ro""))
        readWriteFilesystems.put(mount.mountPoint, false);
      else
        throw new IOException(""Filesystem "" + mount + "" does not have ro or rw option"");
      if (!readWriteFilesystems.containsKey(mount.mountPoint))
        if (mount.options.contains(""rw""))
          readWriteFilesystems.put(mount.mountPoint, true);
        else if (mount.options.contains(""ro""))
          readWriteFilesystems.put(mount.mountPoint, false);
        else
          throw new Exception(""Filesystem "" + mount + "" does not have ro or rw option"");
      else if (mount.options.contains(""ro"") && readWriteFilesystems.get(mount.mountPoint))
        throw new Exception(""Filesystem "" + mount.mountPoint + "" switched to read only"");","Remove this call to ""exit"" or ensure it is really required."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/file/blockfile/impl/CachableBlockFile.java,"      if (closed)
        throw new IllegalStateException(""File "" + fileName + "" is closed"");
      if (_iCache == null)
        return;
      if (closed)
        return;
      if (_bc != null)
        _bc.close();","Remove this call to ""exit"" or ensure it is really required."
8dccbe7e9960c204bf82326c9fe6e28dcb8d647e,core/src/main/java/org/apache/accumulo/core/data/thrift/InitialMultiScan.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",296 duplicated blocks of code must be removed.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/tabletserver/NativeMap.java,"      if (source.hasNext())
        source.doNextPreCheck();
      if (nextEntries.length < MAX_READ_AHEAD_ENTRIES)
        nextEntries = new Entry[Math.min(nextEntries.length * 2, MAX_READ_AHEAD_ENTRIES)];
        if (amountRead > READ_AHEAD_BYTES)
          break;
      if (iter.hasNext())
        entry = iter.next();
      else
        entry = null;
      if (entry == null)
        throw new IllegalStateException();
      if (interruptFlag != null && interruptCheckCount++ % 100 == 0 && interruptFlag.get())
        throw new IterationInterruptedException();
      } else
        entry = null;
      if (interruptFlag != null && interruptFlag.get())
        throw new IterationInterruptedException();
      } else
        entry = null;","Remove this call to ""exit"" or ensure it is really required."
65b5a3a3708dc96e09e95c00a0fbe72e60edf3ad,core/src/main/java/org/apache/accumulo/core/conf/Property.java,"      ""The path relative to the top level instance directory (instance.dfs.dir) where to store the key encryption key within HDFS.""),
  CRYPTO_DEFAULT_KEY_STRATEGY_KEY_LOCATION(""crypto.default.key.strategy.key.location"", ""/crypto/secret/keyEncryptionKey"", PropertyType.ABSOLUTEPATH,
      ""The path relative to the top level instance directory (instance.dfs.dir) where to store the key encryption key within HDFS.""),
  @Experimental
  CRYPTO_DEFAULT_KEY_STRATEGY_CIPHER_SUITE(""crypto.default.key.strategy.cipher.suite"", ""NullCipher"", PropertyType.STRING,
      ""The cipher suite to use when encrypting session keys with a key encryption key.  This should be set to match the overall encryption algorithm  "" +
      ""but with ECB mode and no padding unless you really know what you're doing and are sure you won't break internal file formats""),
  @Experimental
  CRYPTO_OVERRIDE_KEY_STRATEGY_WITH_CONFIGURED_STRATEGY(""crypto.override.key.strategy.with.configured.strategy"", ""false"", PropertyType.BOOLEAN,
          ""The default behavior is to record the key encryption strategy with the encrypted file, and continue to use that strategy for the life "" +
          ""of that file.  Sometimes, you change your strategy and want to use the new strategy, not the old one.  (Most commonly, this will be "" +
          ""because you have moved key material from one spot to another.)  If you want to override the recorded key strategy with the one in "" +
          ""the configuration file, set this property to true.""),

































",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
80faf5f0df0906d04a3d9de5fa052e189b359985,server/src/main/java/org/apache/accumulo/server/master/recovery/HadoopLogCloser.java,"        ns.append(source).close();
        log.info(""Recovered lease on "" + source.toString() + "" using append"");","Use ""Long.toString"" instead."
5c97efc2576278f4b8b6b004ded78c98251cda24,start/src/main/java/org/apache/accumulo/start/classloader/vfs/ContextManager.java,"  
  
    @Override
    
    @Override
    public int hashCode() {
      return uris.hashCode() + (preDelegation ? Boolean.TRUE : Boolean.FALSE).hashCode();
    }
    
    
    
      return getClassLoader(context).loadClass(classname).asSubclass(extension);",Return empty string instead.
7a69a7770bac8b72b27ef1e6d27b77081fc2d40c,core/src/main/java/org/apache/accumulo/core/util/shell/commands/CreateUserCommand.java,"    shellState.getConnector().securityOperations().createUser(user, password.getBytes());",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
f5b0460dfe969ad764d43d30ceac961aaac4998f,core/src/test/java/org/apache/accumulo/core/client/mapreduce/AccumuloOutputFormatTest.java,"import java.nio.charset.Charset;
      AccumuloInputFormat.setConnectorInfo(job, user, pass.getBytes(Charset.forName(""UTF-8"")));
      AccumuloInputFormat.setInputTableName(job, table1);
      AccumuloOutputFormat.setConnectorInfo(job, user, pass.getBytes(Charset.forName(""UTF-8"")));
      AccumuloOutputFormat.setCreateTables(job, false);
      AccumuloOutputFormat.setDefaultTableName(job, table2);",Either log or rethrow this exception.
86066e645d2ebe86659fa699482ab1a523286bc5,src/core/src/test/java/org/apache/accumulo/core/util/TestStringUtil.java,import static org.junit.Assert.assertEquals;,Replace all tab characters in this file by sequences of white-spaces.
6501e03f49ce3a70ac2a0dd95312fcca1d55ad19,core/src/test/java/org/apache/accumulo/core/data/MutationTest.java,"    assertEquals(m1.getUpdates().get(2), ""cf3"", ""cq3"", """", 0l, false, true, """");
  public void testReserialize() throws Exception {
    // test reading in a new mutation from an old mutation and reserializing the new mutation... this was failing
    OldMutation om = new OldMutation(""r1"");
    om.put(""cf1"", ""cq1"", ""v1"");
    om.put(""cf2"", ""cq2"", new ColumnVisibility(""cv2""), ""v2"");
    om.putDelete(""cf3"", ""cq3"");
    StringBuilder bigVal = new StringBuilder();
    for (int i = 0; i < 100000; i++) {
      bigVal.append('a');
    }
    om.put(""cf2"", ""big"", bigVal);

    
    Mutation m1 = convert(om);

    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    DataOutputStream dos = new DataOutputStream(bos);
    m1.write(dos);
    dos.close();
    
    Mutation m2 = new Mutation();
    
    ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
    DataInputStream dis = new DataInputStream(bis);
    m2.readFields(dis);
    
    assertEquals(""r1"", new String(m1.getRow()));
    assertEquals(4, m2.getUpdates().size());
    assertEquals(4, m2.size());
    assertEquals(m2.getUpdates().get(0), ""cf1"", ""cq1"", """", 0l, false, false, ""v1"");
    assertEquals(m2.getUpdates().get(1), ""cf2"", ""cq2"", ""cv2"", 0l, false, false, ""v2"");
    assertEquals(m2.getUpdates().get(2), ""cf3"", ""cq3"", """", 0l, false, true, """");
    assertEquals(m2.getUpdates().get(3), ""cf2"", ""big"", """", 0l, false, false, bigVal.toString());
  }
","Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation."
4661491d0b1de8fe4d5ce1d3534de01546bfb3df,test/src/test/java/org/apache/accumulo/test/functional/ReadWriteIT.java,"public class ReadWriteIT extends ConfigurableMacIT {
    TestMultiTableIngest.main(args(""--count"", """" + ROWS, ""-u"", ""root"", ""-i"", instance, ""-z"", keepers, ""-p"", ROOT_PASSWORD));
    TestMultiTableIngest.main(args(""--count"", """" + ROWS, ""--readonly"", ""-u"", ""root"", ""-i"", instance, ""-z"", keepers, ""-p"", ROOT_PASSWORD));","Use ""Integer.toString"" instead."
ff1e582020a1437e9c520ef3a1af99477462d803,core/src/main/java/org/apache/accumulo/core/util/shell/commands/DropUserCommand.java,import org.apache.accumulo.core.util.shell.Token;,2 duplicated blocks of code must be removed.
55bb75e2b594140e5528407d5b74de1591d67341,src/core/src/test/java/org/apache/accumulo/core/client/mapreduce/AccumuloInputFormatTest.java,"import org.apache.accumulo.core.iterators.user.WholeRowIterator;
    assertEquals(""org.apache.accumulo.core.iterators.user.WholeRowIterator"", setting.getIteratorClass());","Remove the literal ""false"" boolean value."
b8e663c2a0568670eb5110ef8513c74e1284f232,core/src/main/java/org/apache/accumulo/core/client/lexicoder/ULongLexicoder.java, * Unsigned long lexicoder. The lexicographic encoding sorts first 0l and -1l last. This encoding does not correspond to the sort of Long because it does not,Remove this unused import 'java.util.Date'.
ce06825c6f52e00c6f320b63dce0d19be7fcfb45,src/core/src/main/java/org/apache/accumulo/core/client/impl/MasterClient.java,"  public static MasterClientService.Iface getConnectionWithRetry(Instance instance) throws TTransportException {
      MasterClientService.Iface result = getConnection(instance);
      if (result != null)
        return result;
  public static MasterClientService.Iface getConnection(Instance instance) {
    List<String> locations = instance.getMasterLocations();
    
    if (locations.size() == 0) {
      log.debug(""No masters..."");
      return null;
    }
    
    String master = locations.get(0);
    int portHint = instance.getConfiguration().getPort(Property.MASTER_CLIENTPORT);
    
    try {
      // Master requests can take a long time: don't ever time out
      MasterClientService.Iface client = ThriftUtil.getClient(new MasterClientService.Client.Factory(), master, Property.MASTER_CLIENTPORT,
          instance.getConfiguration());
      return client;
    } catch (TTransportException tte) {
      log.debug(""Failed to connect to master="" + master + "" portHint="" + portHint + "", will retry... "", tte);
      return null;
    }
  }
  
        client = getConnectionWithRetry(instance);
        client = getConnectionWithRetry(instance);",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
a0aef75647200fd76d8ec33c82f9d33a720256d9,src/examples/simple/src/main/java/org/apache/accumulo/examples/simple/helloworld/InsertWithBatchWriter.java,package org.apache.accumulo.examples.simple.helloworld;,"Rename ""table"" which hides the field declared at line 107."
6a5500a5b3f34b26386877e332973e7b926aa4ce,core/src/main/java/org/apache/accumulo/core/client/impl/MultiTableBatchWriterImpl.java,"import org.apache.accumulo.core.security.thrift.Credential;
  public MultiTableBatchWriterImpl(Instance instance, Credential credentials, BatchWriterConfig config) {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
638feb2491ad9881aa590922653589c11b89c39d,src/proxy/src/test/java/org/apache/accumulo/proxy/SimpleTest.java,    protocolFactories.add(org.apache.thrift.protocol.TBinaryProtocol.Factory.class);,Return empty string instead.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,examples/simple/src/main/java/org/apache/accumulo/examples/simple/mapreduce/bulk/GenerateTestData.java,"import com.beust.jcommander.Parameter;

  static class Opts extends org.apache.accumulo.core.cli.Help {
    @Parameter(names=""--start-row"", required=true)
    int startRow = 0;
    @Parameter(names=""--count"", required=true)
    int numRows = 0;
    @Parameter(names=""--output"", required=true)
    String outputFile;
  }
  
    Opts opts = new Opts();
    opts.parseArgs(GenerateTestData.class.getName(), args);
    FileSystem fs = FileSystem.get(CachedConfiguration.getInstance());
    PrintStream out = new PrintStream(new BufferedOutputStream(fs.create(new Path(opts.outputFile))));
    for (int i = 0; i < opts.numRows; i++) {
      out.println(String.format(""row_%08d\tvalue_%08d"", i + opts.startRow, i + opts.startRow));","Remove this unused private ""appendProp"" method."
a9efdd884330d37d46c0f8b9dc59cdce0a91c5f7,test/src/main/java/org/apache/accumulo/test/randomwalk/security/Validate.java,"import org.apache.accumulo.core.client.security.SecurityErrorCode;
          if (ae.getSecurityErrorCode().equals(SecurityErrorCode.USER_DOESNT_EXIST)) {
          if (ae.getSecurityErrorCode().equals(SecurityErrorCode.USER_DOESNT_EXIST)) {
          } else if (ae.getSecurityErrorCode().equals(SecurityErrorCode.TABLE_DOESNT_EXIST)) {",Do not forget to remove this deprecated code someday.
cb6bcc517b27df03106d7e5eca344ed45699e31f,src/core/src/main/java/org/apache/accumulo/core/master/thrift/TabletServerStatus.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c051ef5989f3bd704ddd2d87ccb152c847831acf,server/src/main/java/org/apache/accumulo/server/tabletserver/TabletTime.java,    mutation.setSystemTimestamp(lastCommitTime);,This block of commented-out lines of code should be removed.
ef1ece25917c9c6aa718a98362d1f2cdab163991,core/src/test/java/org/apache/accumulo/core/security/ColumnVisibilityTest.java,"import static org.apache.accumulo.core.security.ColumnVisibility.quote;
import static org.junit.Assert.assertEquals;
    
  
  @Test
  public void testToString() {
    ColumnVisibility cv = new ColumnVisibility(quote(""a""));
    assertEquals(""[a]"", cv.toString());
    
    // multi-byte
    cv = new ColumnVisibility(quote(""五""));
    assertEquals(""[\""五\""]"", cv.toString());
  }",Move this constructor to comply with Java Code Conventions.
930d378a4b92aeb06cc34782a66d5b4e18311e15,start/src/main/java/org/apache/accumulo/start/classloader/vfs/FinalCloseDefaultFileSystemManager.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.start.classloader.vfs;

import org.apache.commons.vfs2.impl.DefaultFileSystemManager;

public class FinalCloseDefaultFileSystemManager extends DefaultFileSystemManager {
  public void finalize() {
    close();
  }
}",Do not override the Object.finalize() method.
7ddc1fe6ef1dfee7a9dc3a9d9dc2f3869139116f,core/src/main/java/org/apache/accumulo/core/client/lexicoder/UUIDLexicoder.java,"/*
import org.apache.accumulo.core.iterators.ValueFormatException;","Override ""equals(Object obj)"" to comply with the contract of the ""compareTo(T o)"" method."
013d917c3de8f1e8d32397b738025fa5c975e8d8,src/core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,"  boolean configError = false;
  public Shell() throws IOException {
    this.reader = new ConsoleReader();
  }
  
  public Shell(ConsoleReader reader) {
    this.reader = reader;
  }
  
  ShellCompletor userCompletor = null;
  
  public boolean execCommand(String line) {
    try {
      System.out.println(""trying to execute line in shell: "" + line);
      execCommand(line, disableAuthTimeout, false);
    } catch (IOException e) {
      System.out.println(""got IOException"");
      return false;
    }
    if (exitCode > 0) {
      System.out.println(""got exit code "" + exitCode);
      return false;
    }
    return true;
  }
  
  String getDefaultPrompt() {",Either log or rethrow this exception.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/util/ServerServices.java,"  public static final String SERVICE_SEPARATOR = "";"";
  public static final String SEPARATOR_CHAR = ""="";","Remove this unused private ""appendProp"" method."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/start/src/test/java/test/Test.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
e0880e263e4bf8662ba3848405200473a25dfc9f,src/core/src/main/java/org/apache/accumulo/core/client/TableDeletedException.java,"package org.apache.accumulo.core.client;

/**
 * This exception is thrown if a table is deleted after an operation starts.
 * 
 * For example if table A exist when a scan is started, but is deleted during the scan then this exception is thrown.
 *
 */

public class TableDeletedException extends RuntimeException {

	private static final long serialVersionUID = 1L;
	private String tableId;

	public TableDeletedException(String tableId){
		this.tableId = tableId;
	}
	
	public String getTableId(){
		return tableId;
	}
}",Return empty string instead.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/monitor/util/celltypes/StringType.java,"    if (o1 == null && o2 == null)
      return 0;
    else if (o1 == null)
      return -1;
    else if (o2 == null)
      return 1;","Remove this call to ""exit"" or ensure it is really required."
02a26268575ac93d74796ec8fd8798f85b92dac1,core/src/main/java/org/apache/accumulo/core/util/Merge.java,"    byte[] password = ""secret"".getBytes();
        password = commandLine.getOptionValue(""p"").getBytes();","Remove this unused method parameter ""ex""."
bd77fefdb146ef0dc9bf64b51fb8e8f43c10ce0d,core/src/main/java/org/apache/accumulo/core/data/thrift/MultiScanResult.java,"  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",300 duplicated blocks of code must be removed.
5f83564549f7f9e94fb6619c983d8e3d12607e74,core/src/main/java/org/apache/accumulo/core/util/shell/commands/DUCommand.java,"  public int execute(final String fullCommand, final CommandLine cl, Shell shellState) throws IOException, TableNotFoundException {
    final SortedSet<String> tablesToFlush = new TreeSet<String>(Arrays.asList(cl.getArgs()));
      for (String table : shellState.getConnector().tableOperations().list()) {
        if (table.matches(cl.getOptionValue(optTablePattern.getOpt()))) {
        }
      }
      final AccumuloConfiguration acuConf = new ConfigurationCopy(shellState.getConnector().instanceOperations().getSystemConfiguration());
    final Options o = new Options();",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
75fc470e543790906017f772c56ee4f8cf241e29,server/src/main/java/org/apache/accumulo/server/tabletserver/InMemoryMap.java,"import org.apache.accumulo.core.conf.AccumuloConfiguration;
  public InMemoryMap(AccumuloConfiguration config) {
    this(config.getBoolean(Property.TSERV_NATIVEMAP_ENABLED), config.get(Property.TSERV_MEMDUMP_DIR));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
48e331cc2d55a37421b5dd7bbb45e91657ea811f,test/src/main/java/org/apache/accumulo/test/functional/AddSplitTest.java,"    Collection<Text> actualSplits = getConnector().tableOperations().listSplits(""foo"");
    actualSplits = getConnector().tableOperations().listSplits(""foo"");",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
79690633e36f7b8cb2a085ab4f54abb3e5d9fcef,core/src/main/java/org/apache/accumulo/core/client/impl/ThriftScanner.java,"          log.trace(((currentTime - startTime) / 1000.0) + "" "" + timeOut);
",Move this constructor to comply with Java Code Conventions.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,core/src/main/java/org/apache/accumulo/core/util/shell/commands/ScanCommand.java,"import org.apache.accumulo.core.Constants;
import org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader;
        clazz = AccumuloVFSClassLoader.loadClass(cl.getOptionValue(interpreterOpt.getOpt()), ScanInterpreter.class);
        clazz = AccumuloVFSClassLoader.loadClass(cl.getOptionValue(formatterInterpeterOpt.getOpt()), ScanInterpreter.class);
        return AccumuloVFSClassLoader.loadClass(cl.getOptionValue(formatterOpt.getOpt()), Formatter.class);
        return AccumuloVFSClassLoader.loadClass(cl.getOptionValue(formatterInterpeterOpt.getOpt()), Formatter.class);
      auths = ScanCommand.parseAuthorizations(cl.getOptionValue(scanOptAuths.getOpt()));
  static Authorizations parseAuthorizations(final String field) {
    if (field == null || field.isEmpty()) {
      return Constants.NO_AUTHS;
    }
    return new Authorizations(field.split("",""));
  }
  ","Remove this unused private ""appendProp"" method."
a63607a89356ef85af81e377b289fafe413687c5,server/src/main/java/org/apache/accumulo/server/master/tableOps/BulkImport.java,"import org.apache.accumulo.cloudtrace.instrument.Tracer;
import org.apache.accumulo.core.client.impl.thrift.ClientService.Client;
            ClientService.Client client = null;
              Pair<String,Client> pair = ServerClient.getConnection(master.getInstance(), false);
              List<String> fail = client.bulkImportFiles(Tracer.traceInfo(), SecurityConstants.getSystemCredentials(), tid, tableId, attempt, errorDir, setTime);","Immediately return this expression instead of assigning it to the temporary variable ""client""."
42491533f6e743ed2b26519c556133f5e5f65132,core/src/main/java/org/apache/accumulo/core/client/security/SecurityErrorCode.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.accumulo.core.client.security;

/**
 * 
 */
public enum SecurityErrorCode {
  DEFAULT_SECURITY_ERROR,
  BAD_CREDENTIALS,
  PERMISSION_DENIED,
  USER_DOESNT_EXIST,
  CONNECTION_ERROR,
  USER_EXISTS,
  GRANT_INVALID,
  BAD_AUTHORIZATIONS,
  INVALID_INSTANCEID,
  TABLE_DOESNT_EXIST,
  UNSUPPORTED_OPERATION,
  INVALID_TOKEN,
  AUTHENTICATOR_FAILED,
  AUTHORIZOR_FAILED,
  PERMISSIONHANDLER_FAILED,
  TOKEN_EXPIRED,
  SERIALIZATION_ERROR,
  INSUFFICIENT_PROPERTIES;
}",Do not forget to remove this deprecated code someday.
d054a29f164873257831a36e60feee33bc40efc3,test/src/test/java/org/apache/accumulo/fate/zookeeper/ZooLockTest.java,import org.apache.accumulo.server.mini.MiniAccumuloCluster;,Either log or rethrow this exception.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/util/shell/ShellCompletor.java,"              if (current_command_token.getCaseSensitive())
                prefix += current_string_token + "" "";
              else
                prefix += current_string_token.toUpperCase() + "" "";
            if (a.startsWith(current_string_token))
              candidates.add(a);
            if (a.startsWith(current_string_token))
              candidates.add(a);
        } else if (current_command_token != null)
          candidates.addAll(current_command_token.getSubcommandNames(current_string_token));
      if (current_string_token.trim().equals(""-"" + Shell.tableOption))
        inTableFlag = true;
      else if (current_string_token.trim().equals(""-"" + Shell.userOption))
        inUserFlag = true;
      else
        inUserFlag = inTableFlag = false;
      if (current_command_token != null && current_command_token.getCaseSensitive())
        prefix += current_string_token + "" "";
      else
        prefix += current_string_token.toUpperCase() + "" "";
      if (current_command_token != null && current_command_token.getSubcommandNames().contains(current_string_token))
        current_command_token = current_command_token.getSubcommand(current_string_token);","Remove this call to ""exit"" or ensure it is really required."
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/TestRandomDeletes.java,package org.apache.accumulo.test;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
e511baa049c58509539ab7eb793c0da97c9d3ef6,core/src/test/java/org/apache/accumulo/core/client/admin/TableOperationsHelperTest.java,"    } catch (AccumuloException e) {}
    } catch (AccumuloException e) {}
    } catch (AccumuloException e) {}",Return empty string instead.
8abe4df107a5d72c52c9fb9735213bf85c34a689,src/core/src/main/java/org/apache/accumulo/core/data/KeyExtent.java,"    Range range = new Range(metadataPrevRow, getPrevEndRow() == null, getMetadataEntry(), true);","Immediately return this expression instead of assigning it to the temporary variable ""range""."
bfc44fd328c471d06b480835ba826b706dcf6816,core/src/test/java/org/apache/accumulo/core/client/admin/FindMaxTest.java,"import org.apache.accumulo.core.security.Authorizations;
    Scanner scanner = conn.createScanner(""foo"", Authorizations.EMPTY);
      Text max = FindMax.findMax(conn.createScanner(""foo"", Authorizations.EMPTY), null, true, rows.get(i), false);
      max = FindMax.findMax(conn.createScanner(""foo"", Authorizations.EMPTY), rows.get(i - 1), true, rows.get(i), false);
      max = FindMax.findMax(conn.createScanner(""foo"", Authorizations.EMPTY), rows.get(i - 1), false, rows.get(i), false);
      max = FindMax.findMax(conn.createScanner(""foo"", Authorizations.EMPTY), null, true, rows.get(i), true);
      max = FindMax.findMax(conn.createScanner(""foo"", Authorizations.EMPTY), rows.get(i), true, rows.get(i), true);
      max = FindMax.findMax(conn.createScanner(""foo"", Authorizations.EMPTY), rows.get(i - 1), false, rows.get(i), true);
    Text max = FindMax.findMax(conn.createScanner(""foo"", Authorizations.EMPTY), null, true, null, true);
    max = FindMax.findMax(conn.createScanner(""foo"", Authorizations.EMPTY), null, true, new Text(new byte[] {0}), false);
    max = FindMax.findMax(conn.createScanner(""foo"", Authorizations.EMPTY), null, true, new Text(new byte[] {0}), true);","Remove this unused method parameter ""range""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/zookeeper/ZooReaderWriter.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
2e489459cb0757aa9f2a893b5ceb6914af0dabac,server/src/main/java/org/apache/accumulo/server/trace/TraceServer.java,"import org.apache.accumulo.core.client.Instance;
import org.apache.accumulo.core.file.FileUtil;
import org.apache.accumulo.core.util.CachedConfiguration;
import org.apache.hadoop.fs.FileSystem;
  final private Instance instance;
  public TraceServer(Instance instance, String hostname) throws Exception {
    this.instance = instance;
        connector = instance.getConnector(conf.get(Property.TRACE_USER), conf.get(Property.TRACE_PASSWORD).getBytes());
    final InetSocketAddress address = new InetSocketAddress(hostname, sock.getLocalPort());
    String root = ZooUtil.getRoot(instance) + Constants.ZTRACERS;
    FileSystem fs = FileUtil.getFileSystem(CachedConfiguration.getInstance(), ServerConfiguration.getSiteConfiguration());
    Accumulo.init(fs, ""tracer"");
    String hostname = Accumulo.getLocalAddress(args);
    Instance instance = HdfsZooInstance.getInstance();
    TraceServer server = new TraceServer(instance, hostname);
    Accumulo.enableTracing(hostname, ""tserver"");","Remove this unused method parameter ""hostname""."
55d673e2e28c5f50653a1b1a08c607bf87703f91,server/src/main/java/org/apache/accumulo/server/util/FindOfflineTablets.java,"import java.util.concurrent.atomic.AtomicBoolean;
import org.apache.accumulo.core.Constants;
    final AtomicBoolean scanning = new AtomicBoolean(false); 
        if (!deleted.isEmpty() && scanning.get())
        if (!added.isEmpty() && scanning.get())
    tservers.startListeningForTabletServerChanges();
    scanning.set(true);
        if (!locationState.extent.equals(Constants.ROOT_TABLET_EXTENT))
          System.out.println(locationState + "" is "" + state);",Merge this if statement with the enclosing one.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/State.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/multitable/DropTable.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
9881fee2c96d95f174de7880f0f17524c1b9806d,src/examples/wikisearch/ingest/src/main/java/org/apache/accumulo/examples/wikisearch/ingest/WikipediaInputFormat.java,"      // for highly replicated files, returning all of the locations can lead to bunching
      // TODO replace this with a subset of the locations","Introduce a new variable instead of reusing the parameter ""value""."
aea4313624e0bbe815c3de2c0a6aa4af4ad82c26,test/src/test/java/org/apache/accumulo/test/functional/ScanSessionTimeOutIT.java,"import org.apache.accumulo.core.client.Connector;
import org.apache.accumulo.minicluster.MiniAccumuloConfig;
import org.junit.Test;
public class ScanSessionTimeOutIT extends MacTest {
  public void configure(MiniAccumuloConfig cfg) {
    cfg.setSiteConfig(Collections.singletonMap(Property.TSERV_SESSION_MAXIDLE.getKey(), ""3""));

  @Test(timeout=30*1000)
    Connector c = getConnector();
    c.tableOperations().create(""abc"");
    
    BatchWriter bw = c.createBatchWriter(""abc"", new BatchWriterConfig());
    Scanner scanner = c.createScanner(""abc"", new Authorizations());",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/tabletserver/HoldTimeoutException.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    
    public HoldTimeoutException(String why) {
        super(why);
    }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/test/java/org/apache/accumulo/core/data/MapFileTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
933d760dddf8a6e135d0cf7b3a9ea9c95599e559,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/parser/RangeCalculator.java,"import org.apache.accumulo.core.data.PartialKey;
            Key startRange = new Key(fieldValue, fieldName);
            Range r = new Range(startRange, true, startRange.followingKey(PartialKey.ROW), true);
              Key startRange = new Key(fieldValue, fieldName);
              Range r = new Range(startRange, true, startRange.followingKey(PartialKey.ROW), true);
                Key startRange = new Key(new Text(normalizedFieldValue + ""\u0000""), fieldName);
                Key endRange = new Key(new Text(normalizedFieldValue + ""\u10FFFF""), fieldName);
                Range r = new Range(startRange, true, endRange, true);
                Key startRange = new Key(new Text(normalizedFieldValue + ""\u0000""), fieldName);
                Key endRange = new Key(new Text(normalizedFieldValue + ""\u10FFFF""), fieldName);
                Range r = new Range(startRange, true, endRange, true);
        Key startRange = new Key(lower, entry.getKey());
        Key endRange = new Key(upper, entry.getKey());
        Range r = new Range(startRange, true, endRange, true);",31 duplicated blocks of code must be removed.
c74fd2fbc3e11a93a04aba495432126153a639f3,core/src/main/java/org/apache/accumulo/core/util/shell/commands/SetIterCommand.java,"    setTableProperties(cl, shellState, priority, options, classname, name);
  protected void setTableProperties(final CommandLine cl, final Shell shellState, final int priority, final Map<String,String> options, final String classname,
      final String name)
    
    final String tableName = OptUtil.getTableOpt(cl, shellState);
",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/util/Pair.java,"  A first;
  B second;
  
  public Pair(A f, B s) {
    this.first = f;
    this.second = s;
  }
  
  private int hashCode(Object o) {
    if (o == null) return 0;
    return o.hashCode();
  }
  
  @Override
  public int hashCode() {
    return hashCode(first) + hashCode(second);
  }
  
  private boolean equals(Object o1, Object o2) {
    if (o1 == null || o2 == null) return o1 == o2;
    return o1.equals(o2);
  }
  
  @Override
  public boolean equals(Object o) {
    if (o instanceof Pair<?,?>) {
      Pair<?,?> op = (Pair<?,?>) o;
      return equals(first, op.first) && equals(second, op.second);
    return false;
  }
  
  public A getFirst() {
    return first;
  }
  
  public B getSecond() {
    return second;
  }
  
  public String toString() {
    return ""("" + first + "","" + second + "")"";
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/trace/src/main/java/cloudtrace/instrument/Trace.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/test/java/org/apache/accumulo/core/iterators/system/SourceSwitchingIteratorTest.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
3c4012cfb4602f5675f54013525104c011728ad8,examples/wikisearch/ingest/src/test/java/org/apache/accumulo/examples/wikisearch/iterator/GlobalIndexUidTest.java,"    comb.init(null, setting.getOptions(), null);",Refactor this code to not nest more than 3 if/for/while/switch/try statements.
4c360048c5e62a8c7b22d1038bd64a819dba38e9,src/server/src/main/java/org/apache/accumulo/server/tabletserver/Tablet.java,"          log.debug(""Starting MajC "" + extent + "" ("" + reason + "") "" + datafileManager.abs2rel(datafileManager.string2path(copy.keySet())) + "" --> ""","Remove this unused method parameter ""table""."
c0a0afdcceedba2947949761ca13ecc42ff8f9c1,src/core/src/test/java/org/apache/accumulo/core/client/mapreduce/AccumuloRowInputFormatTest.java,"import org.apache.accumulo.core.util.ContextFactory;
    JobContext job = ContextFactory.createJobContext();
    TaskAttemptContext tac = ContextFactory.createTaskAttemptContext(job);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
7da1164d87227960d3e0cfc841f753067e2c0304,core/src/main/java/org/apache/accumulo/core/client/ZooKeeperInstance.java,"import java.util.concurrent.atomic.AtomicInteger;
import org.apache.accumulo.core.util.ThriftUtil;
  private boolean closed = false;
  
    clientInstances.incrementAndGet();
    clientInstances.incrementAndGet();
    if (closed)
      throw new RuntimeException(""ZooKeeperInstance has been closed."");
    if (closed)
      throw new RuntimeException(""ZooKeeperInstance has been closed."");
    if (closed)
      throw new RuntimeException(""ZooKeeperInstance has been closed."");
    if (closed)
      throw new RuntimeException(""ZooKeeperInstance has been closed."");
    if (closed)
      throw new RuntimeException(""ZooKeeperInstance has been closed."");

  static private final AtomicInteger clientInstances = new AtomicInteger(0);
  
  @Override
  public void close() throws AccumuloException {
    if (!closed && clientInstances.decrementAndGet() == 0)
    try {
      zooCache.close();
      ThriftUtil.close();
    } catch (InterruptedException e) {
      throw new AccumuloException(""Issues closing ZooKeeper."");
    }
    closed = true;
  }
  @Override
  public void finalize() {
    // This method intentionally left blank. Users need to explicitly close Instances if they want things cleaned up nicely.
    if (!closed)
      log.warn(""ZooKeeperInstance being cleaned up without being closed. Please remember to call close() before dereferencing to clean up threads."");
  }",Move this variable to comply with Java Code Conventions.
20650323e9d45ec61fdb15c51042a92638dab90e,src/core/src/main/java/org/apache/accumulo/core/iterators/user/IntersectingIterator.java,"import java.util.Collections;
import org.apache.accumulo.core.data.ArrayByteSequence;
 * This iterator will *ignore* any columnFamilies passed to {@link #seek(Range, Collection, boolean)} as it performs intersections
 * over terms. Extending classes should override the {@link TermSource#seekColfams} in their implementation's 
 * {@link #init(SortedKeyValueIterator, Map, IteratorEnvironment)} method.
 * 
    public Collection<ByteSequence> seekColfams;
      this.seekColfams = other.seekColfams;
      this(iter, term, false);
      // The desired column families for this source is the term itself
      this.seekColfams = Collections.<ByteSequence>singletonList(new ArrayByteSequence(term.getBytes(), 0, term.getLength()));
          sources[sourceID].iter.seek(new Range(seekKey, true, null, false), sources[sourceID].seekColfams, true);
            sources[sourceID].iter.seek(new Range(seekKey, true, null, false), sources[sourceID].seekColfams, true);
          sources[sourceID].iter.seek(new Range(seekKey, true, null, false), sources[sourceID].seekColfams, true);
          sources[sourceID].iter.seek(new Range(seekKey, true, null, false), sources[sourceID].seekColfams, true);
            sources[sourceID].iter.seek(new Range(seekKey, true, null, false), sources[sourceID].seekColfams, true);
            sources[sourceID].iter.seek(new Range(seekKey, true, null, false), sources[sourceID].seekColfams, true);
          sources[sourceID].iter.seek(new Range(seekKey, true, null, false), sources[sourceID].seekColfams, true);
        // Seek only to the term for this source as a column family
        sources[i].iter.seek(new Range(sourceKey, true, null, false), sources[i].seekColfams, true);
        // Seek only to the term for this source as a column family
        sources[i].iter.seek(range, sources[i].seekColfams, true);",2 duplicated blocks of code must be removed.
6a5500a5b3f34b26386877e332973e7b926aa4ce,core/src/test/java/org/apache/accumulo/core/client/mapred/AccumuloFileOutputFormatTest.java,"import java.nio.charset.Charset;
import org.apache.accumulo.core.security.thrift.tokens.PasswordToken;
      AccumuloInputFormat.setConnectorInfo(job, user, new PasswordToken().setPassword(pass.getBytes(Charset.forName(""UTF-8""))));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
cb6bcc517b27df03106d7e5eca344ed45699e31f,src/core/src/main/java/org/apache/accumulo/core/data/thrift/InitialMultiScan.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
  @SuppressWarnings(""all"") public enum _Fields implements org.apache.thrift.TFieldIdEnum {",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a271441e75a7d46cfb630a078e5b816a73addfdb,src/server/src/main/java/org/apache/accumulo/server/master/state/tables/TableObserver.java," * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
public interface TableObserver {
    void initialize(Map<String,TableState> tableIdToStateMap);
    
    ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
93773813e5839ac9ffb4f5a2b2b70bcedb106286,test/src/main/java/org/apache/accumulo/test/functional/SplitRecoveryTest.java,"    Writer writer = new Writer(HdfsZooInstance.getInstance(), SecurityConstants.getSystemCredentials(), MetadataTable.ID);
    m.put(MetadataTable.FUTURE_LOCATION_COLUMN_FAMILY, assignment.server.asColumnQualifier(), assignment.server.asMutationValue());
    Scanner scanner = new ScannerImpl(HdfsZooInstance.getInstance(), SecurityConstants.getSystemCredentials(), MetadataTable.ID, Authorizations.EMPTY);
    expectedColumns.add(MetadataTable.DIRECTORY_COLUMN);
    expectedColumns.add(MetadataTable.PREV_ROW_COLUMN);
    expectedColumns.add(MetadataTable.TIME_COLUMN);
    expectedColumns.add(MetadataTable.LOCK_COLUMN);
    expectedColumnFamilies.add(MetadataTable.DATAFILE_COLUMN_FAMILY);
    expectedColumnFamilies.add(MetadataTable.FUTURE_LOCATION_COLUMN_FAMILY);
    expectedColumnFamilies.add(MetadataTable.CURRENT_LOCATION_COLUMN_FAMILY);
    expectedColumnFamilies.add(MetadataTable.LAST_LOCATION_COLUMN_FAMILY);
    expectedColumnFamilies.add(MetadataTable.BULKFILE_COLUMN_FAMILY);
        throw new Exception(""Tablet "" + extent + "" contained unexpected "" + MetadataTable.NAME + "" entry "" + key);
      throw new Exception(""Tablet "" + extent + "" contained unexpected "" + MetadataTable.NAME + "" entry "" + key);","Use ""Long.toString"" instead."
99da5641c28784c7b717cce6749673863c2ec8cf,server/src/main/java/org/apache/accumulo/server/client/ClientServiceHandler.java,"import org.apache.accumulo.core.client.security.tokens.AuthenticationToken;
import org.apache.accumulo.core.client.security.tokens.AuthenticationToken.AuthenticationTokenSerializer;
import org.apache.accumulo.core.security.Credentials;
    Credentials toChange = new Credentials(principal, token);
    Credentials newUser = new Credentials(principal, token);
          return BulkImporter.bulkLoad(new ServerConfiguration(instance).getConfiguration(), instance, new Credentials(credentials.getPrincipal(),
              AuthenticationTokenSerializer.deserialize(credentials.getTokenClassName(), credentials.getToken())), tid, tableId, files, errorDir, setTime);
      AuthenticationToken token = AuthenticationTokenSerializer.deserialize(credentials.getTokenClassName(), credentials.getToken());
      Connector conn = instance.getConnector(credentials.getPrincipal(), token);","Immediately return this expression instead of assigning it to the temporary variable ""onlineTabletsForTable""."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/server/src/main/java/org/apache/accumulo/server/util/TServerUtils.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/bloomfilter/Filter.java," * 
 * Redistribution and use in source and binary forms, with or 
 * without modification, are permitted provided that the following 
 *  - Redistributions of source code must retain the above copyright 
 *  - Redistributions in binary form must reproduce the above copyright 
 *    notice, this list of conditions and the following disclaimer in 
 *    nor the names of its contributors may be used to endorse or 
 *    promote products derived from this software without specific prior 
 *    
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
 * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN 
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
 * 
  
  
  
  
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
   * 
  
  
   * 
    
  
   * 
  
   * 
  
  
  
  
  
      ",Replace all tab characters in this file by sequences of white-spaces.
0be23a82c282a6d3166729adf116877afab624d2,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/sequential/MapRedVerifyTool.java,"    AccumuloInputFormat.setInputInfo(job.getConfiguration(), args[0], args[1].getBytes(), args[2], new Authorizations());
    AccumuloInputFormat.setZooKeeperInstance(job.getConfiguration(), args[3], args[4]);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c391143a77277c0d80f0ff4f73f26c7ad81fdef9,fate/src/main/java/org/apache/accumulo/fate/zookeeper/ZooReader.java,"import java.util.concurrent.atomic.AtomicInteger;
    final AtomicInteger rc = new AtomicInteger();
        rc.set(code);
    Code code = Code.get(rc.get());
  }  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
c31bf3aa2092782c65bf23839aac442f44127b39,src/core/src/main/java/org/apache/accumulo/core/security/AuditLevel.java,"  
  private static final long serialVersionUID = 1L;
  public final static Level AUDIT = new AuditLevel();
  
  protected AuditLevel() {
    super(Level.INFO_INT + 100, ""AUDIT"", Level.INFO_INT + 100);
  }
  
  static public Level toLevel(int val) {
    if (val == Level.INFO_INT + 100) return Level.INFO;
    return Level.toLevel(val);
  }",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
a9efdd884330d37d46c0f8b9dc59cdce0a91c5f7,core/src/main/java/org/apache/accumulo/core/client/impl/TabletServerBatchWriter.java,"import org.apache.accumulo.trace.instrument.Span;
import org.apache.accumulo.trace.instrument.Trace;
import org.apache.accumulo.trace.instrument.Tracer;
import org.apache.accumulo.trace.thrift.TInfo;

      HashMap<KeyExtent,Set<org.apache.accumulo.core.client.security.SecurityErrorCode>> af = new HashMap<KeyExtent,Set<org.apache.accumulo.core.client.security.SecurityErrorCode>>();
      for (Entry<KeyExtent,Set<SecurityErrorCode>> entry : authorizationFailures.entrySet()) {
        HashSet<org.apache.accumulo.core.client.security.SecurityErrorCode> codes = new HashSet<org.apache.accumulo.core.client.security.SecurityErrorCode>();
        
        for (SecurityErrorCode sce : entry.getValue()) {
          codes.add(org.apache.accumulo.core.client.security.SecurityErrorCode.valueOf(sce.name()));
        }
        
        af.put(entry.getKey(), codes);
      }
      
      throw new MutationsRejectedException(cvsList, af, serverSideErrors, unknownErrors, lastUnknownError);
        updateAuthorizationFailures(Collections.singletonMap(new KeyExtent(new Text(Constants.METADATA_TABLE_ID), null, null),
            SecurityErrorCode.valueOf(e.getSecurityErrorCode().name())));",Do not forget to remove this deprecated code someday.
0bed38f3d5716416b90316646a2f20e1ff2c0242,src/server/src/main/java/org/apache/accumulo/server/test/randomwalk/security/TableOp.java,"              throw new AccumuloException(""Got data I should not be capable of seeing: "" + k + "" table "" + tableName);
            throw new AccumuloException(""Was able to read when I shouldn't have had the perm with connection user "" + conn.whoami() + "" table "" + tableName);
            throw new AccumuloException(""Accumulo and test suite out of sync: table "" + tableName, tnfe);
              throw new AccumuloException(""Table read permission out of sync with Accumulo: table "" + tableName, ae);
              throw new AccumuloException(""Table read permission out of sync with Accumulo: table "" + tableName, re.getCause());
            throw new AccumuloException(""Table didn't exist when it should have: "" + tableName);
            throw new AccumuloException(""Table didn't exist when it should have: "" + tableName);
              throw new AccumuloException(""Bulk Import failed when it should have worked: "" + tableName);
          throw new AccumuloException(""Bulk Import succeeded when it should have failed: "" + dir + "" table "" + tableName);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
f37ae11892cb3a8aa2f29478b8f9e7371d7f2b92,server/src/main/java/org/apache/accumulo/server/client/BulkImporter.java,      long timeInMillis = instance.getConfiguration().getTimeInMillis(Property.TSERV_BULK_TIMEOUT);,Either log or rethrow this exception.
9d13f546ebb1e716c1d25c35225190b1b2805975,src/core/src/main/java/org/apache/accumulo/core/iterators/IteratorUtil.java,"import org.apache.accumulo.core.client.IteratorSetting;
import org.apache.accumulo.core.client.admin.TableOperations;
import org.apache.accumulo.core.iterators.user.VersioningIterator;
  public static Map<String,String> generateAggTableProperties(List<? extends PerColumnIteratorConfig> aggregators) {
    Map<String,String> props = new TreeMap<String,String>();
  public static Map<String,String> generateInitialTableProperties() {
    TreeMap<String,String> props = new TreeMap<String,String>();
    
    for (IteratorScope iterScope : IteratorScope.values()) {
      props.put(Property.TABLE_ITERATOR_PREFIX + iterScope.name() + "".vers"", ""20,"" + VersioningIterator.class.getName());
      props.put(Property.TABLE_ITERATOR_PREFIX + iterScope.name() + "".vers.opt.maxVersions"", ""1"");
    }
    return props;
  }
  ","Remove this unused private ""match"" method."
ba0d84c1fa26b3ecb118f98074431c1d94c20ae0,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/EGrepCommand.java,"/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the ""License""); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/",Replace all tab characters in this file by sequences of white-spaces.
ae6551d8f7566204bf43b444793831f44be48352,minicluster/src/main/java/org/apache/accumulo/minicluster/MiniAccumuloConfig.java,package org.apache.accumulo.minicluster;,Either log or rethrow this exception.
c74fd2fbc3e11a93a04aba495432126153a639f3,core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,"import org.apache.accumulo.core.util.shell.commands.DeleteShellterCommand;
import org.apache.accumulo.core.util.shell.commands.ListShellIterCommand;
import org.apache.accumulo.core.util.shell.commands.SetShellIterCommand;
  public Map<String,List<IteratorSetting>> iteratorProfiles = new HashMap<String,List<IteratorSetting>>();
    Command[] iteratorCommands = {new DeleteIterCommand(), new DeleteScanIterCommand(), new ListIterCommand(), new SetIterCommand(), new SetScanIterCommand(),
        new SetShellIterCommand(), new ListShellIterCommand(), new DeleteShellterCommand()};",Remove the redundant '!unknownSymbol!' thrown exception declaration(s).
c456043bbf9ea1ddf9e3facee86c09adab345c8f,server/src/main/java/org/apache/accumulo/server/tabletserver/log/RemoteLogger.java,"      if (client != null)
        client.close(null, logFile.id);
      MutationLogger.Iface tmp = client;
      client = null;
      ThriftUtil.returnClient(tmp);",Either log or rethrow this exception.
d631e78ce6361c82ee6de2e98ecf3b0a14b33858,core/src/main/java/org/apache/accumulo/core/util/shell/commands/TraceCommand.java,          for (int i = 0; i < 30; i++) {,Either log or rethrow this exception.
bbb42dfb878e45dc89d02f6cf31e2f41a86d8fc7,src/server/src/main/java/org/apache/accumulo/server/test/continuous/ContinuousScanner.java,"import org.apache.accumulo.core.security.Authorizations;
import org.apache.accumulo.server.test.continuous.ContinuousWalk.RandomAuths;
  private static String authsFile = null;
      } else if (args[i].equals(""--auths"")) {
        authsFile = args[++i];
          + "" [--debug <debug log>] [--auths <file>] <instance name> <zookeepers> <user> <pass> <table> <min> <max> <sleep time> <num to scan>"");
    Random r = new Random();

    RandomAuths randomAuths = new RandomAuths(authsFile);

    Authorizations auths = randomAuths.getAuths(r);
    Scanner scanner = conn.createScanner(table, auths);","Remove this unused method parameter ""r""."
5bd33fa1e9625e3c088ee39f626c256aca75b0da,server/src/main/java/org/apache/accumulo/server/test/CreateTestTable.java,"import org.apache.accumulo.core.client.BatchWriterConfig;
      BatchWriter b = connector.createBatchWriter(table, new BatchWriterConfig());","Remove this unused method parameter ""e""."
06c6f945c7cab1a81fa56ac07a3f342127f84cb7,core/src/main/java/org/apache/accumulo/core/util/shell/Token.java," * can be realistically and quickly gathered. Tokens can have multiple commands grouped 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  ",Replace all tab characters in this file by sequences of white-spaces.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/util/time/BaseRelativeTime.java,"    if (result < lastReportedTime)
      return lastReportedTime;","Remove this call to ""exit"" or ensure it is really required."
c31bf3aa2092782c65bf23839aac442f44127b39,src/trace/src/main/java/cloudtrace/instrument/impl/RootMilliSpan.java,"  
  final long traceId;
  final long parentId;
  
  @Override
  public long traceId() {
    return traceId;
  }
  
  public RootMilliSpan(String description, long traceId, long spanId, long parentId) {
    super(description, spanId, null);
    this.traceId = traceId;
    this.parentId = parentId;
  }
  
  public long parentId() {
    return parentId;
  }
  ",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
9f03eb0f8739fc70ca829e3f0fdd7e7fa8ece9d3,test/src/main/java/org/apache/accumulo/test/randomwalk/image/TableOp.java,      tableOps.listSplits(tableName);,Either log or rethrow this exception.
bfc44fd328c471d06b480835ba826b706dcf6816,server/src/main/java/org/apache/accumulo/server/master/tableOps/ExportTable.java,"import org.apache.accumulo.core.security.Authorizations;
    Scanner metaScanner = conn.createScanner(Constants.METADATA_TABLE_NAME, Authorizations.EMPTY);
    Scanner metaScanner = conn.createScanner(Constants.METADATA_TABLE_NAME, Authorizations.EMPTY);","Remove this unused method parameter ""range""."
80faf5f0df0906d04a3d9de5fa052e189b359985,test/src/test/java/org/apache/accumulo/test/functional/BadIteratorMincIT.java,"import java.util.EnumSet;
import org.apache.accumulo.core.client.Connector;
import org.apache.accumulo.core.client.IteratorSetting;
import org.apache.accumulo.core.iterators.IteratorUtil.IteratorScope;
import org.junit.Test;
public class BadIteratorMincIT extends MacTest {
  @Test(timeout=30*1000)
  public void test() throws Exception {
    Connector c = getConnector();
    c.tableOperations().create(""foo"");
    IteratorSetting is = new IteratorSetting(30, BadIterator.class);
    c.tableOperations().attachIterator(""foo"", is, EnumSet.of(IteratorScope.minc));
    BatchWriter bw = c.createBatchWriter(""foo"", new BatchWriterConfig());
    c.tableOperations().flush(""foo"", null, null, false);
    FunctionalTestUtils.checkRFiles(c, ""foo"", 1, 1, 0, 0);
    Scanner scanner = c.createScanner(""foo"", Authorizations.EMPTY);
    c.tableOperations().removeIterator(""foo"", BadIterator.class.getSimpleName(), EnumSet.of(IteratorScope.minc));
    FunctionalTestUtils.checkRFiles(c, ""foo"", 1, 1, 1, 1);
    c.tableOperations().attachIterator(""foo"", is, EnumSet.of(IteratorScope.minc));
    bw = c.createBatchWriter(""foo"", new BatchWriterConfig());
    UtilWaitThread.sleep(500);
    c.tableOperations().flush(""foo"", null, null, false);
    c.tableOperations().delete(""foo"");


  ","Use ""Long.toString"" instead."
aa8fb304d30d68cfb6ef44ce5c462feb4de7091f,core/src/main/java/org/apache/accumulo/core/client/admin/TableOperationsImpl.java,"    if (propertiesToExclude == null)
      propertiesToExclude = Collections.emptySet();
    
    if (propertiesToSet == null)
      propertiesToSet = Collections.emptyMap();
    ",Either log or rethrow this exception.
729ed59186097b1ae93bbb32bef118abf5d1b83a,core/src/test/java/org/apache/accumulo/core/cli/TestClientOpts.java,"    assertEquals(new PasswordToken().setPassword(""secret"".getBytes()), args.getToken());",This block of commented-out lines of code should be removed.
8025e96e0b108063f3028eb06b78847de2fa95d4,src/examples/wikisearch/query/src/main/java/org/apache/accumulo/examples/wikisearch/iterator/FieldIndexIterator.java,"package org.apache.accumulo.examples.wikisearch.iterator;
import org.apache.accumulo.examples.wikisearch.function.QueryFunctions;
import org.apache.accumulo.examples.wikisearch.util.FieldIndexKeyParser;",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
60806ebd532350761de8a8af91977a7c80d30480,src/server/src/main/java/org/apache/accumulo/server/trace/TraceServer.java,"import java.net.InetAddress;
import org.apache.accumulo.server.util.TServerUtils;
import org.apache.accumulo.server.util.TServerUtils.ServerPort;
    ServerPort serverPort = TServerUtils.startTServer(port, new SpanReceiver.Processor(new Receiver()), ""tracer"", ""tracer"", 4, 1000l);
    server = serverPort.server;
    InetAddress address = Accumulo.getLocalAddress(args);
    registerInZooKeeper(address.getHostAddress() + "":"" + serverPort.port);",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
b08b3caa2ca016f4b224bcae4d69ee33c86eac9d,core/src/main/java/org/apache/accumulo/core/client/impl/ServerClient.java,"import org.apache.accumulo.core.conf.AccumuloConfiguration;
    AccumuloConfiguration conf = instance.getConfiguration();
        servers.add(new ThriftTransportKey(
            new ServerServices(new String(data)).getAddressString(Service.TSERV_CLIENT), 
            conf.getPort(Property.TSERV_CLIENTPORT), 
            conf.getTimeInMillis(Property.GENERAL_RPC_TIMEOUT)));","Remove this call to ""exit"" or ensure it is really required."
f765888e3decac70571cf836e5300fb9a015b38e,core/src/main/java/org/apache/accumulo/core/util/shell/Shell.java,"      sb.append(""- Authorization timeout: "").append(String.format(""%.2fs%n"", authTimeout / 1000.0));
    logError(String.format(""%"" + COL1 + ""s-+-%"" + COL2 + ""s-+-%"" + col3 + ""s%n"", repeat(""-"", COL1), repeat(""-"", COL2), repeat(""-"", col3)));
    logError(String.format(""%-"" + COL1 + ""s | %"" + COL2 + ""s | %-"" + col3 + ""s%n"", ""Constraint class"", ""Violation code"", ""Violation Description""));
    logError(String.format(""%"" + COL1 + ""s-+-%"" + COL2 + ""s-+-%"" + col3 + ""s%n"", repeat(""-"", COL1), repeat(""-"", COL2), repeat(""-"", col3)));
      logError(String.format(""%-"" + COL1 + ""s | %"" + COL2 + ""d | %-"" + col3 + ""s%n"", cvs.constrainClass, cvs.violationCode, cvs.violationDescription));
    logError(String.format(""%"" + COL1 + ""s-+-%"" + COL2 + ""s-+-%"" + col3 + ""s%n"", repeat(""-"", COL1), repeat(""-"", COL2), repeat(""-"", col3)));",Use isEmpty() to check whether the collection is empty or not.
7942da1d204d271bff01e9e93208cdd67d0eefa3,core/src/main/java/org/apache/accumulo/core/client/ZooKeeperInstance.java,"import org.apache.accumulo.core.security.thrift.TCredentials;
import org.apache.accumulo.core.security.tokens.AuthenticationToken;
  public Connector getConnector(String principal, AuthenticationToken token) throws AccumuloException, AccumuloSecurityException {
  @Override
  public Connector getConnector(TCredentials credential) throws AccumuloException, AccumuloSecurityException {
    return getConnector(principal, new PasswordToken(pass));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
0218f14a6f938528c44a33afc917289fc175d87d,src/core/src/main/java/org/apache/accumulo/core/iterators/DebugIterator.java,"		Key wc = super.getTopKey();
		Value w = super.getTopValue();
		boolean b = super.hasTop();
		super.seek(range, columnFamilies, inclusive);","At most one statement is allowed per line, but 2 statements were found on this line."
db66b4ff10e3dfa0e6565b7c3f71c2b12d0131d4,test/src/main/java/org/apache/accumulo/test/functional/RowDeleteTest.java,package org.apache.accumulo.test.functional;,"Move the ""org.apache.accumulo.test.randomwalk.unit.CreateTable"" string literal on the left side of this string comparison."
e511baa049c58509539ab7eb793c0da97c9d3ef6,core/src/main/java/org/apache/accumulo/core/iterators/GrepIterator.java,@Deprecated,Return empty string instead.
007a29e2e536d90787f1be6317069f315f9289cd,core/src/main/java/org/apache/accumulo/core/util/shell/commands/AuthenticateCommand.java,"    String p = shellState.readMaskedLine(""Enter current password for '"" + user + ""': "", '*');",Either log or rethrow this exception.
3de0c1ec44d476fe1465eb05d33c32de3ccf1068,server/src/main/java/org/apache/accumulo/server/gc/GarbageCollectWriteAheadLogs.java,"import com.google.common.net.HostAndPort;

  boolean holdsLock(HostAndPort addr) {
      String zpath = ZooUtil.getRoot(instance) + Constants.ZTSERVERS + ""/"" + addr.toString();
        HostAndPort address = AddressUtil.parseAddress(entry.getKey());","Remove this unused method parameter ""threadName""."
9dc244484b4d35859d4d22b27580a47ae7da0e1a,core/src/test/java/org/apache/accumulo/core/file/rfile/RelativeKeyTest.java,"import org.apache.accumulo.core.util.UnsynchronizedBuffer;
    assertEquals(1, UnsynchronizedBuffer.nextArraySize(0));
    assertEquals(1, UnsynchronizedBuffer.nextArraySize(1));
    assertEquals(2, UnsynchronizedBuffer.nextArraySize(2));
    assertEquals(4, UnsynchronizedBuffer.nextArraySize(3));
    assertEquals(4, UnsynchronizedBuffer.nextArraySize(4));
    assertEquals(8, UnsynchronizedBuffer.nextArraySize(5));
    assertEquals(8, UnsynchronizedBuffer.nextArraySize(8));
    assertEquals(16, UnsynchronizedBuffer.nextArraySize(9));
    assertEquals(1 << 16, UnsynchronizedBuffer.nextArraySize((1 << 16) - 1));
    assertEquals(1 << 16, UnsynchronizedBuffer.nextArraySize(1 << 16));
    assertEquals(1 << 17, UnsynchronizedBuffer.nextArraySize((1 << 16) + 1));
    assertEquals(1 << 30, UnsynchronizedBuffer.nextArraySize((1 << 30) - 1));
    assertEquals(1 << 30, UnsynchronizedBuffer.nextArraySize(1 << 30));
    assertEquals(Integer.MAX_VALUE, UnsynchronizedBuffer.nextArraySize(Integer.MAX_VALUE - 1));
    assertEquals(Integer.MAX_VALUE, UnsynchronizedBuffer.nextArraySize(Integer.MAX_VALUE));",Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java,"      if (!shellState.getConnector().tableOperations().exists(tableName))
        throw new TableNotFoundException(null, tableName, null);
    if (cl.hasOption(mergeOptStartRow.getOpt()))
      startRow = new Text(cl.getOptionValue(mergeOptStartRow.getOpt()));
    if (cl.hasOption(mergeOptEndRow.getOpt()))
      endRow = new Text(cl.getOptionValue(mergeOptEndRow.getOpt()));
    if (cl.hasOption(verboseOpt.getOpt()))
      verbose = true;
    if (cl.hasOption(forceOpt.getOpt()))
      force = true;
    if (size < 0)
      shellState.getConnector().tableOperations().merge(tableName, startRow, endRow);","Remove this call to ""exit"" or ensure it is really required."
8dccbe7e9960c204bf82326c9fe6e28dcb8d647e,core/src/main/java/org/apache/accumulo/core/tabletserver/thrift/ActiveScan.java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */",296 duplicated blocks of code must be removed.
b5c31dff6d46eb419ea37db33d3f67dbb912a10c,server/src/main/java/org/apache/accumulo/server/test/randomwalk/concurrent/CreateUser.java,"      conn.securityOperations().createUser(userName, (userName + ""pass"").getBytes());","Remove this unused private ""appendProp"" method."
1d7165ea9a8cea68e18d2421c97181efd9ef450c,src/server/src/main/java/org/apache/accumulo/server/test/TestIngest.java,"              if (ingestArgs.hasTimestamp)
                m.putDelete(colf, colq, le, ingestArgs.timestamp);
              else
                m.putDelete(colf, colq, le);
        if (bw != null)
          bw.addMutation(m);","Remove this call to ""exit"" or ensure it is really required."
